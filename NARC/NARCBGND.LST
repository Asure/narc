TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .FILE   "NARCBGND.ASM"
       3                    
       4                    **************************************************************************
       5                    *                                                                        *
       6                    *       COPYRIGHT (C) 1988 WILLIAMS ELECTRONICS GAMES, INC.              *
       7                    *       ALL RIGHTS RESERVED.                                             *
       8                    *                                                                        *
       9                    **************************************************************************
      10                    
      11                            .OPTION B,D,L
      12                            .MNOLIST
      13                    
      14                    *       GET THE SYSTEM STUFF
      15                            .INCLUDE        "\video\MPROCEQU.ASM"   ;MPROC equates
      16                            .INCLUDE        "\video\DISPEQU.ASM"    ;Display processor equates
      17                            .INCLUDE        "\video\GSP.INC"        ;GSP assembler equates
      18                            .INCLUDE        "\video\SYS.INC"        ;Zunit system equates
      19                            .INCLUDE        "\video\MACROS.HDR"     ;Macros, Yeah!
      20                    *       LOCAL STUFF
      21                            .INCLUDE        "NARCEQU.ASM"           ;NARC Equates
      22                            .INCLUDE        "NARCAUDN.ASM"          ;NARC Audit/Adjustment Equates
      23                    ***     .INCLUDE        "IMGTBL.GLO"            ;Image Label Equates
      24                            .INCLUDE        "BGNDTBL.GLO"           ;BACKGROUND EQUATES
      25                    
      26                    *
      27                    *GLOBALS IN THIS FILE
      28                            .GLOBAL         INITFGND,GOALXFER
      29                    *
      30                    *EXTERNALS
      31                            .GLOBAL         AUD,AUD1,GET_ADJ,GAMEOTXT,AUDPLWAV,SCRLBIAS
      32                            .GLOBAL         SETCRIMENO,SURVCNT,ADDBUY,CHOPINTR,G_BORDER
      33                            .GLOBAL         GETDOPE,OUTNEXTR
      34                    
      35 00000000                   .BSS    bgndpaltbl,32,1
      36 00000020                   .BSS    mod_pos,32,1
      37 00000040                   .BSS    PREVWTL,32              ;PREVIOUS WORLDTL FOR BBOFSCRN
      38 00000060                   .BSS    PREVSTL,32              ;PREVIOUS SCRNTL FOR BBOFSCRN
      39                    ****    .BSS    PREVSLR,32              ;PREVIOUS SCRNLR FOR BBOFSCRN
      40 00000080                   .BSS    INTRPROC,32             ;INTRODUCTION PROC(LOADED IN INITBGND)
      41 000000a0                   .BSS    DOORINYX,32             ;[Y,X] COORD. OF DOOR ENTERED
      42                    
      43 00000000                   .TEXT
      44                    
      45                    **************************************************************************
      46                    *                                                                        *
      47                    * WAVEINIT - INITIALIZE CURRENT WAVE:                                    *
      48                    *               - MAKE BACKGROUND BLOCKS USING WAVE BGND INIT. TABLE     *
      49                    *               - FIRE OFF ALL PROCESS USING WAVE PROC. INIT. TABLE      *
      50                    * CURRENT WAVE MUST BE INDICATED IN VARIABLE, WAVE.                      *
      51                    * IT IS ASSUMED THAT THE DISPLAYON FLAG IS CLEAR WHEN THIS IS CALLED.    *
      52                    * THIS ROUTINE WILL SET THAT FLAG BEFORE FINISHING.                      *
      53                    * NOTE: CALL WITH JSRP                                                   *
      54                    *                                                                        *
      55                    **************************************************************************
      56 00000000           WAVEINIT
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE    2

      57 00000000     09c0          MOVI    INMSU,A0                
         00000010     001a  
      58 00000020     0580          MOVE    A0,@GAMSTATE,W          ;FLAG THE NARC 2000 MSU
         00000030 00000000! 
      59 00000050     5600          CLR     A0
      60 00000060     0580          MOVE    A0,@DISPLAYON,W
         00000070 00000000! 
      61 00000090     0d5f          CALLA   DMAQWAIT
         000000a0 00000000! 
      62 000000c0     0d5f          CALLA   CLR_SCRN
         000000d0 00000000! 
      63 000000f0     0d5f          CALLA   MYOINIT
         00000100 00000000! 
      64 00000120     09e0          MOVI    SCORDPYS,A0
         00000130 0000fafc  
      65 00000150     0580          MOVE    A0,@DPYSTRT,W           ;HIDE THE SCORE AREA
         00000160 c0000090  
      66                    
      67 00000180     0d5f          calla   SETCRIMENO
         00000190 00000000! 
      68 000001b0     05a0          MOVE    @WAVE,A0,W                                               
         000001c0 00000000! 
      69 000001e0     1420          DEC     A0                                                       
      70 000001f0     ca08          JRZ     WAVEI1ST                                                 
      71 00000200                   JSRP    PRECRIM2                ;DO A SHORTENED VERSION OF THIS  
      72 00000270     c007          JRUC    WAVEI2                                                   
      73 00000280           WAVEI1ST                                                                 
      74 00000280                   JSRP    PRECRIME                                                 
      75 000002f0           WAVEI2                                                           
      76 000002f0     1820          MOVK    1,A0                                                     
      77 00000300     0580          MOVE    A0,@DISPLAYON,W                                          
         00000310 00000000! 
      78 00000330                   SLEEP   1
      79                    ***     SLEEP   30                                                       
      80 00000370                   CREATE  VOXPID,VSCAN            ;Start Voice Scanner - Needs cri 
      81 000003f0                   JSRP    CRIME                                                    
      82 00000460                   JSRP    POSTCRIME               ;Needs crimeno                   
      83 000004d0                   SLEEP   1
      84                    ***     SLEEP   30                                                       
      85                    
      86 00000510     0d5f          CALLA   WRAMINIT                ;INITIALIZE WAVE RAM
         00000520 00000000! 
      87 00000540     0d3f          CALLR   WAVEBACK
         00000550     009b  
      88 00000560     09c0          MOVI    ININTRO,A0
         00000570     0018  
      89 00000580     0580          MOVE    A0,@GAMSTATE,W
         00000590 00000000! 
      90 000005b0     0d5f          CALLA   BBINIT
         000005c0 00000000! 
      91 000005e0     0d5f          CALLA   GETWAVE                 ;SET UP WAVE DIFFICULTY PARAMS
         000005f0 00000000! 
      92 00000610     0d5f          CALLA   AUDPLWAV                ;AUDIT THE PLAYERS
         00000620 00000000! 
      93                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE    3

      94 00000640     09ea          MOVI    WAVEBGND,A10
         00000650 00000000! 
      95 00000670     05a0          MOVE    @WAVE,A0,W
         00000680 00000000! 
      96 000006a0     1420          DEC     A0              ;MAKE WAVE # 0 BASED
      97 000006b0     2780          SLL     28,A0           ;WAVE ONLY SIGNIFICANT TO 4 BITS RIGHT NOW
      98 000006c0     2d20          SRL     23,A0
      99                    ***     SLL     5,A0
     100                    
     101 000006d0     09e1          MOVI    BAKSTAKS,A1
         000006e0 00000000! 
     102 00000700     0781          MOVE    A1,@BAKSTAKP,L  ;INITIALIZE BACKGROUND STACK POINTER
         00000710 00000000! 
     103                    
     104 00000730     09e1          MOVI    OBJSTAKS,A1
         00000740 00000000! 
     105 00000760     0781          MOVE    A1,@OBJSTAKP,L  ;INITIALIZE OBJECT STACK POINTER
         00000770 00000000! 
     106                    
     107 00000790     05ae          MOVE    @NOAUTOE,A14,W
         000007a0 00000000! 
     108 000007c0     1821          MOVK    1,A1
     109 000007d0     0581          MOVE    A1,@NOAUTOE,W   ;DISABLE AUTO-ERASE
         000007e0 00000000! 
     110 00000800     400a          ADD     A0,A10
     111 00000810     874a          MOVE    *A10,A10,L
     112 00000820     0d5f          CALLA   INITBGND                ;INITIALIZE THE CURRENT BACKGROUND
         00000830 00003aa0' 
     113 00000850     5621          CLR     A1
     114 00000860     0581          MOVE    A1,@GAMERASE,W          ;DEFINITELY NO AUTO-ERASE ON WAVE INIT
         00000870 00000000! 
     115 00000890     058e          MOVE    A14,@NOAUTOE,W  ;RE-ENABLE AUTOERASE            
         000008a0 00000000! 
     116                    
     117 000008c0     9541          MOVE    *A10+,A1,W              ;AND THE SCROLL STOPPER 
     118 000008d0     0581          MOVE    A1,@GOALCARD,W  
         000008e0 00000000! 
     119 00000900     0d3f          CALLR   GOALXFER                ;TRANSFER GOAL DATA TO RAM BLOCK
         00000910     001a  
     120 00000920     09ee          MOVI    GOALDOOR,A14
         00000930 00000000! 
     121 00000950     0d3f          CALLR   INITFGND                ;INITIALIZE THESE FORE GROUND DITTIES
         00000960     0306  
     122 00000970                   CREATE  BGNDPID,BACKINTR
     123                    
     124 000009f0     09c1          MOVI    25,A1
         00000a00     0019  
     125 00000a10     0581          MOVE    A1,@BCCOUNT,W           ;BUCKS ALLOWED COLD STARTED
         00000a20 00000000! 
     126 00000a40     09c1          MOVI    15,A1
         00000a50     000f  
     127 00000a60     0581          MOVE    A1,@DCCOUNT,W           ;DRUGS ALLOWED COLD STARTED
         00000a70 00000000! 
     128 00000a90                   RETP
     129                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE    4

     130                    **************************************************************************
     131                    *                                                                        *
     132                    * GOALXFER - TRANSFER GOAL DOOR INIT TABLES TO RAM BUFFER                *
     133                    * A10 = PTR TO PTR TO ROM TABLES                                         *
     134                    * RETURNS:                                                               *
     135                    * A10 = NEXT WORD IN BACKGROUND INIT TABLE                               *
     136                    *                                                                        *
     137                    **************************************************************************
     138 00000ac0           GOALXFER
     139 00000ac0     098f          MMTM    SP,A0,A2,A3
         00000ad0     b000  
     140 00000ae0     9743          MOVE    *A10+,A3,L              ;GET THE TABLE
     141 00000af0     09e2          MOVI    GOALDOOR,A2
         00000b00 00000000! 
     142 00000b20           GOALXAGN
     143 00000b20     8460          MOVE    *A3,A0,W
     144 00000b30     ce06          JRN     GOALXDN
     145 00000b40     09c0          MOVI    INITSIZE,A0
         00000b50     0140  
     146 00000b60     2f80          SRL     4,A0
     147 00000b70           GOALXLP
     148 00000b70     9862          MOVE    *A3+,*A2+,W
     149 00000b80     3c40          DSJS    A0,GOALXLP
     150 00000b90     c0f8          JRUC    GOALXAGN
     151 00000ba0           GOALXDN
     152 00000ba0     8002          MOVE    A0,*A2,W                ;TERMINATE RAM TABLE    
     153 00000bb0     09af          MMFM    SP,A0,A2,A3
         00000bc0     000d  
     154 00000bd0     0960          RETS
     155                    
     156                    **************************************************************************
     157                    *                                                                        *
     158                    * KILLWAVE - KILL CURRENT WAVE STUFF, AND RE-START VITALS                *
     159                    *                                                                        *
     160                    **************************************************************************
     161 00000be0           KILLWAVE
     162 00000be0     098f          MMTM    SP,A0,A1,A2
         00000bf0     e000  
     163 00000c00     0d5f          CALLA   BSTOP
         00000c10 0000d990' 
     164 00000c30     09c0          MOVI    INGAME,A0
         00000c40     0010  
     165 00000c50     0580          MOVE    A0,@GAMSTATE,W
         00000c60 00000000! 
     166 00000c80     5600          CLR     A0
     167 00000c90     0780          MOVE    A0,@P1DATA+PSWTCH,L
         00000ca0 000000c0! 
     168 00000cc0     0780          MOVE    A0,@P2DATA+PSWTCH,L     ;KILL PLAYER CONTROL
         00000cd0 000000c0! 
     169 00000cf0     0580          MOVE    A0,@P1CTRL,W
         00000d00 00000000! 
     170 00000d20     0580          MOVE    A0,@P2CTRL,W            ;AND COMPUTER CONTROL
         00000d30 00000000! 
     171 00000d50     09e0          MOVI    0FFFFh,A0
         00000d60 0000ffff  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE    5

     172 00000d80     0580          MOVE    A0,@PSWTMP1             ;CLEAR PLAYER'S SWITCHES
         00000d90 00000000! 
     173 00000db0     0d5f          CALLA   STOPOBJS                ;STOP THEM DAMN OBJECTS
         00000dc0 00000000! 
     174 00000de0     5600          CLR     A0
     175 00000df0     09e1          MOVI    0A000h,A1
         00000e00 0000a000  
     176 00000e20     0d5f          CALLA   KILALL                  ;KILL ALL PROCS, EXCEPT INDIES & WAVERS 
         00000e30 00000000! 
     177 00000e50     0d5f          CALLA   PCONTST                 ;START CONTINUE PROCS
         00000e60 00000000! 
     178 00000e80                   SOUND1  MUSICOFF
     179 00000ee0     09af          MMFM    SP,A0,A1,A2
         00000ef0     0007  
     180 00000f00     0960          RETS
     181                    
     182                    **************************************************************************
     183                    *                                                                        *
     184                    * WAVEBACK - GET VITALS BACK FOR START OF WAVE                           *
     185                    *                                                                        *
     186                    **************************************************************************
     187 00000f10           WAVEBACK
     188 00000f10     098f          MMTM    SP,A0,A2,A14
         00000f20     a002  
     189 00000f30     5600          CLR     A0
     190 00000f40     0580          MOVE    A0,@DISPLAYON,W         ;TURN OFF DISPLAY PROCESSING
         00000f50 00000000! 
     191 00000f70     0d5f          CALLA   DMAHALT                 ;STOP THE DMA
         00000f80 00000000! 
     192 00000fa0     0d5f          CALLA   MYOINITB
         00000fb0 00000000! 
     193                    ***     CALLA   MYOINIT
     194                    
     195                    *TIME TO RE-INITIALIZE PLAYER 1
     196 00000fd0     09e2          MOVI    P1DATA,A2
         00000fe0 00000000! 
     197 00001000     09ee          MOVI    P1INITTL,A14
         00001010 00000000! 
     198 00001030     0d5f          CALLA   PLWAVEST
         00001040 00000000! 
     199                    *TIME TO RESET PLAYER 2
     200 00001060     09e2          MOVI    P2DATA,A2
         00001070 00000000! 
     201 00001090     09ee          MOVI    P2INITT,A14
         000010a0 00000000! 
     202 000010c0     0d5f          CALLA   PLWAVEST
         000010d0 00000000! 
     203 000010f0                   SOUND1  MUSICOFF
     204 00001150     09af          MMFM    SP,A0,A2,A14
         00001160     4005  
     205 00001170     0960          RETS
     206                    
     207                    **************************************************************************
     208                    *                                                                        *
     209                    * WAVEEND - WAVE END ROUTINE                                             *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE    6

     210                    *                                                                        *
     211                    **************************************************************************
     212 00001180           WAVEEND
     213 00001180     09c0          MOVI    4000H,A0
         00001190     4000  
     214 000011a0     4c01          MOVE    A0,A1
     215 000011b0     0d5f          CALLA   EXISTP                  ;WAVE END WAIT?
         000011c0 00000000! 
     216 000011e0     ca07          JRZ     WAVEESTR                ;BR = NO
     217 000011f0                   SLOOP   1,WAVEEND               ;GIVE THEM TIME TO COMPLETE
     218 00001260           WAVEESTR
     219 00001260     1820          MOVK    1,A0
     220 00001270     0580          MOVE    A0,@PUPDATE,W
         00001280 00000000! 
     221 000012a0     0d5f          CALLA   KILLWAVE
         000012b0 00000be0' 
     222 000012d0                   SOUND1  ALLOFF
     223 00001330                   SOUND1  YAMOFF
     224 00001390                   SOUND1  MUSICOFF
     225 000013f0                   SLEEP   2
     226 00001430                   SOUND1  WAVESND                 ;WAVE END SOUND
     227                    
     228 00001490     1820          MOVK    1,A0
     229 000014a0     0580          MOVE    A0,@GAMERASE,W          ;TURN ON FULL SCREEN AUTOERASE
         000014b0 00000000! 
     230                    
     231 000014d0     09c9          MOVI    2000H,A9
         000014e0     2000  
     232 000014f0                   CREATE  SKYPID,SKYDOWN
     233                            
     234 00001570     05ab          MOVE    @WORLDTLY+16,A11,W
         00001580 00000010! 
     235 000015a0     05aa          MOVE    @UNIVENDY,A10,W
         000015b0 00000000! 
     236 000015d0     456a          SUB     A11,A10
     237 000015e0     4d49          MOVE    A10,A9
     238 000015f0     260a          SLL     16,A10
     239 00001600     0b09          ADDI    400,A9
         00001610     0190  
     240 00001620     2609          SLL     16,A9                   ;READY TO SCROLL A MUNDO
     241                    
     242 00001630     0d5f          CALLA   BONUSCR                 ;FLIP ON THE BONUS SCREEN
         00001640 00000000! 
     243 00001660     260b          SLL     16,A11
     244 00001670     e16a          ADDXY   A11,A10                 ;A10 WILL LATER SET WORLD COORDS.
     245 00001680     05a1          MOVE    @WORLDTLX+16,A1,W
         00001690 00000010! 
     246 000016b0     ec2a          MOVX    A1,A10
     247                    
     248 000016c0     18a0          MOVK    5,A0                    ;LOAD SCROLL DOWN RATE                                          
     249 000016d0     2600          SLL     16,A0
     250 000016e0     0780          MOVE    A0,@SCROLLY,L           ;SCROLL DOWN 1 SCREEN                    
         000016f0 00000000! 
     251 00001710     4409          SUB     A0,A9                   ;ONE FRAME BUFFER ZONE  
     252 00001720           BONLUP                                                           
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE    7

     253 00001720                   SLEEP   1                                                        
     254 00001760     0d5f          CALLA   GETSCRBY                                                 
         00001770 00000000! 
     255 00001790     4920          CMP     A9,A0
     256 000017a0     c4f7          JRLT    BONLUP                  ;BR = HAVEN'T SCROLLED DOWN 1 SCREEN
     257                    
     258 000017b0     5600          CLR     A0                                                       
     259 000017c0     0780          MOVE    A0,@SCROLLY,L           ;STOP IT                         
         000017d0 00000000! 
     260                    
     261 000017f0     ef40          MOVY    A10,A0
     262 00001800     2e00          SRL     16,A0
     263 00001810     0580          MOVE    A0,@WORLDTLY+16,W
         00001820 00000010! 
     264 00001840     058a          MOVE    A10,@WORLDTLX+16,W
         00001850 00000010! 
     265                    
     266 00001870                   SLEEP   2                       ;MAKE SURE AUTO ERASE CATCHES UP
     267 000018b0     5600          CLR     A0
     268 000018c0     0580          MOVE    A0,@GAMERASE,W          ;TURN OFF GAME AUTO ERASE
         000018d0 00000000! 
     269 000018f0     0d5f          CALLA   AUTOEOFF
         00001900 00000000! 
     270 00001920     09c0          MOVI    BUPDPID,A0
         00001930     2bdd  
     271 00001940     5621          CLR     A1
     272 00001950     03e1          NOT     A1
     273 00001960     0d5f          CALLA   KILALL                  ;KILL THE BACKGROUND UPDATE
         00001970 00000000! 
     274 00001990     0d5f          CALLA   SYNCHALF
         000019a0 00000000! 
     275 000019c0     0d5f          CALLA   SYNCFULL
         000019d0 00000000! 
     276 000019f0     5600          CLR     A0
     277 00001a00     0580          MOVE    A0,@DISPLAYON
         00001a10 00000000! 
     278 00001a30     0d5f          CALLA   DMAQWAIT
         00001a40 00000000! 
     279 00001a60     5600          CLR     A0
     280 00001a70     09e1          MOVI    0A000h,A1
         00001a80 0000a000  
     281 00001aa0     0d5f          CALLA   KILALL                  ;KILL ALL PROCS, EXCEPT INDIES
         00001ab0 00000000! 
     282                    ****    CALLA   MYOINIT                 ;INITIALIZE OBJECT LIST
     283 00001ad0     0d5f          CALLA   OINIT                   ;JUST INITIALIZE THE OBJECT LIST
         00001ae0 00000000! 
     284 00001b00     0d5f          CALLA   PCONTST                 ;START CONTINUATION FLASHERS
         00001b10 00000000! 
     285                    
     286 00001b30     1820          MOVK    1,A0
     287 00001b40     0580          MOVE    A0,@DISPLAYON
         00001b50 00000000! 
     288                    *DO BONUS COUNT HERE
     289 00001b70                   JSRP    WAVBONUS
     290 00001be0                   SLEEP   25H
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE    8

     291                    
     292                    ****    SOUND1  SOUNDOFF
     293 00001c30     0d5f          CALLA   QSNDRST                 ;RESET THE SOUND BOARD
         00001c40 00000000! 
     294                    
     295 00001c60     09e1          MOVI    08000h,A1
         00001c70 00008000  
     296 00001c90     4c20          MOVE    A1,A0
     297 00001ca0     0d5f          CALLA   EXISTP                  ;ARE THERE INDESTRUCTIBLES?
         00001cb0 00000000! 
     298 00001cd0     ca05          JRZ     WAVPINIT                ;BR = NO, RE-INITIALIZE THE PROCESSES
     299 00001ce0     5600          CLR     A0
     300 00001cf0     0d5f          CALLA   KILALL
         00001d00 00000000! 
     301 00001d20     c011          JRUC    WAVENEXT
     302                    *MAJOR PROCESS SYSTEM RESET HERE
     303 00001d30           WAVPINIT
     304 00001d30     b5a1          MOVE    *A13(PROCID),A1,W
         00001d40     0020  
     305 00001d50     0d5f          CALLA   PINIT
         00001d60 00000000! 
     306 00001d80     09e7          MOVI    WAVENEXT,A7
         00001d90 00001e40' 
     307 00001db0     09ef          MOVI    STCKST,SP,L             ;RESET THE SYSTEM STACK
         00001dc0 010ffff0  
     308 00001de0     0d5f          CALLA   GETPRC                  ;GET THE PROCESS        
         00001df0 00000000! 
     309 00001e10     c080          JAUC    MAINLP                  ;AND DO SOME EXEC LOOP SHIT
         00001e20 00000000! 
     310                    *NOW CONTINUE TO THE NEXT WAVE
     311 00001e40           WAVENEXT
     312 00001e40     5600          CLR     A0
     313 00001e50     0580          MOVE    A0,@PUPDATE,W           ;RE-START PLAYER UPDATE
         00001e60 00000000! 
     314 00001e80     05a0          MOVE    @WAVE,A0,W
         00001e90 00000000! 
     315 00001eb0     1020          INC     A0
     316 00001ec0     0580          MOVE    A0,@WAVE,W      ;NEXT WAVE
         00001ed0 00000000! 
     317 00001ef0                   JSRP    WAVEINIT        ;INITIALIZE THE WAVE BABY
     318 00001f60     0d5f          CALLA   COLRSTRT        ;START THE COLORS
         00001f70 00000000! 
     319 00001f90                   DIE                                                              
     320                    
     321                    **************************************************************************
     322                    *                                                                        *
     323                    * GAMEEND - END OF GAME ROUTINE, UGH                                     *
     324                    *                                                                        *
     325                    **************************************************************************
     326 00001fc0           GAMEEND
     327 00001fc0     09c0          MOVI    4000H,A0
         00001fd0     4000  
     328 00001fe0     4c01          MOVE    A0,A1
     329 00001ff0     0d5f          CALLA   EXISTP                  ;WAVE END WAIT?
         00002000 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE    9

     330 00002020     ca07          JRZ     GAMEESTR                ;BR = NO
     331 00002030                   SLOOP   1,GAMEEND               ;GIVE THEM TIME TO COMPLETE
     332 000020a0           GAMEESTR
     333 000020a0     0d5f          CALLA   KILLWAVE
         000020b0 00000be0' 
     334 000020d0                   SOUND1  ALLOFF
     335 00002130                   SOUND1  YAMOFF
     336 00002190                   SOUND1  MUSICOFF
     337                    
     338 000021f0                   AUDITCNT AUDFINI,NPLYRS
     339                    
     340 00002270                   SLEEP   2
     341 000022b0                   SOUND1  WAVESND                 ;WAVE END SOUND
     342                    
     343 00002310     1820          MOVK    1,A0
     344 00002320     0580          MOVE    A0,@GAMERASE,W          ;TURN ON FULL SCREEN AUTOERASE
         00002330 00000000! 
     345                    
     346 00002350     09c9          MOVI    2000H,A9
         00002360     2000  
     347 00002370                   CREATE  SKYPID,SKYDOWN
     348                            
     349 000023f0     05ab          MOVE    @WORLDTLY+16,A11,W
         00002400 00000010! 
     350 00002420     05aa          MOVE    @UNIVENDY,A10,W
         00002430 00000000! 
     351 00002450     456a          SUB     A11,A10
     352 00002460     4d49          MOVE    A10,A9
     353 00002470     260a          SLL     16,A10
     354 00002480     0b09          ADDI    400,A9
         00002490     0190  
     355 000024a0     2609          SLL     16,A9                   ;READY TO SCROLL A MUNDO
     356                    
     357 000024b0     0d5f          CALLA   BONUSCR                 ;FLIP ON THE BONUS SCREEN
         000024c0 00000000! 
     358 000024e0     260b          SLL     16,A11
     359 000024f0     e16a          ADDXY   A11,A10                 ;A10 WILL LATER SET WORLD COORDS.
     360 00002500     05a1          MOVE    @WORLDTLX+16,A1,W
         00002510 00000010! 
     361 00002530     ec2a          MOVX    A1,A10
     362                    
     363 00002540     18a0          MOVK    5,A0                    ;LOAD SCROLL DOWN RATE                                          
     364 00002550     2600          SLL     16,A0
     365 00002560     0780          MOVE    A0,@SCROLLY,L           ;SCROLL DOWN 1 SCREEN                    
         00002570 00000000! 
     366 00002590     4409          SUB     A0,A9                   ;ONE FRAME BUFFER ZONE  
     367 000025a0           GEBONLUP                                                                 
     368 000025a0                   SLEEP   1                                                        
     369 000025e0     0d5f          CALLA   GETSCRBY                                                 
         000025f0 00000000! 
     370 00002610     4920          CMP     A9,A0
     371 00002620     c4f7          JRLT    GEBONLUP                ;BR = HAVEN'T SCROLLED DOWN 1 SCREEN
     372                    
     373 00002630     5600          CLR     A0                                                       
     374 00002640     0780          MOVE    A0,@SCROLLY,L           ;STOP IT                         
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   10

         00002650 00000000! 
     375                    
     376 00002670     ef40          MOVY    A10,A0
     377 00002680     2e00          SRL     16,A0
     378 00002690     0580          MOVE    A0,@WORLDTLY+16,W
         000026a0 00000010! 
     379 000026c0     058a          MOVE    A10,@WORLDTLX+16,W
         000026d0 00000010! 
     380                    
     381 000026f0                   SLEEP   2                       ;MAKE SURE AUTO ERASE CATCHES UP
     382 00002730     5600          CLR     A0
     383 00002740     0580          MOVE    A0,@GAMERASE,W          ;TURN OFF GAME AUTO ERASE
         00002750 00000000! 
     384 00002770     0d5f          CALLA   AUTOEOFF
         00002780 00000000! 
     385 000027a0     09c0          MOVI    BUPDPID,A0
         000027b0     2bdd  
     386 000027c0     5621          CLR     A1
     387 000027d0     03e1          NOT     A1
     388 000027e0     0d5f          CALLA   KILALL                  ;KILL THE BACKGROUND UPDATE
         000027f0 00000000! 
     389 00002810     0d5f          CALLA   SYNCHALF
         00002820 00000000! 
     390 00002840     0d5f          CALLA   SYNCFULL
         00002850 00000000! 
     391 00002870     5600          CLR     A0
     392 00002880     0580          MOVE    A0,@DISPLAYON
         00002890 00000000! 
     393 000028b0     0d5f          CALLA   DMAQWAIT
         000028c0 00000000! 
     394                    ***     CALLA   MYOINIT                 ;INITIALIZE OBJECT LIST
     395 000028e0     0d5f          CALLA   OINIT
         000028f0 00000000! 
     396 00002910     1820          MOVK    1,A0
     397 00002920     0580          MOVE    A0,@DISPLAYON
         00002930 00000000! 
     398                    *DO BONUS COUNT HERE
     399 00002950     5600          CLR     A0
     400 00002960     0780          MOVE    A0,@P1DATA+PNEXTREP,L
         00002970 00000270! 
     401 00002990     0780          MOVE    A0,@P2DATA+PNEXTREP,L   ;TURN OFF REPLAYS
         000029a0 00000270! 
     402 000029c0     09e2          MOVI    P1DATA,A2
         000029d0 00000000! 
     403 000029f0     0d5f          CALLA   OUTNEXTR
         00002a00 00000000! 
     404 00002a20     09e2          MOVI    P2DATA,A2
         00002a30 00000000! 
     405 00002a50     0d5f          CALLA   OUTNEXTR                ;CLEAR THE REPLAY WINDOWS
         00002a60 00000000! 
     406 00002a80                   JSRP    WAVBONUS
     407 00002af0     09c0          MOVI    INGAMEOV,A0
         00002b00     0050  
     408 00002b10     0580          MOVE    A0,@GAMSTATE,W          ;LET GAME RE-START HAPPEN
         00002b20 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   11

     409 00002b40     0d5f          CALLA   ADDBUY                  ;BUY-IN IS ONCE AGAIN
         00002b50 00000000! 
     410 00002b70     5600          CLR     A0
     411 00002b80     09ee          MOVI    P1DATA,A14
         00002b90 00000000! 
     412 00002bb0     b20e          MOVE    A0,*A14(PSWTCH),L
         00002bc0     00c0  
     413 00002bd0     b20e          MOVE    A0,*A14(POBJ),L
         00002be0     00a0  
     414 00002bf0     b20e          MOVE    A0,*A14(PLOBJ),L
         00002c00     0120  
     415 00002c10     09ee          MOVI    P2DATA,A14
         00002c20 00000000! 
     416 00002c40     b20e          MOVE    A0,*A14(PSWTCH),L
         00002c50     00c0  
     417 00002c60     b20e          MOVE    A0,*A14(POBJ),L
         00002c70     00a0  
     418 00002c80     b20e          MOVE    A0,*A14(PLOBJ),L
         00002c90     0120  
     419 00002ca0     09e0          MOVI    0FFFFh,A0
         00002cb0 0000ffff  
     420 00002cd0     0580          MOVE    A0,@PSWTMP1             ;CLEAR THE SWITCHES
         00002ce0 00000000! 
     421 00002d00                   SLEEP   25H
     422                    
     423 00002d50     0d5f          CALLA   CLRPLAY
         00002d60 00000000! 
     424                    
     425 00002d80                   SOUND1  TUNE6
     426 00002de0     09e4          MOVI    [SKYTOPOF-1,0],A4
         00002df0 004f0000  
     427 00002e10     09e5          MOVI    [400,512],A5
         00002e20 01900200  
     428 00002e40     09c6          MOVI    16,A6
         00002e50     0010  
     429 00002e60     0d5f          CALLA   G_BORDER                ;PUT UP THE LINKY BORDER
         00002e70 00000000! 
     430                    *PUT OUT CONGRATS
     431 00002e90     1840          MOVK    2,A0            ;DON'T BLOW YOUR WADSWORTH
     432 00002ea0     09e6          MOVI    0F5F5H,A6
         00002eb0 0000f5f5  
     433 00002ed0     09e8          MOVI    CONGRATXT,A8
         00002ee0 00003630' 
     434 00002f00     09e9          MOVI    [CONGY,256],A9  ;POSITION
         00002f10 008c0100  
     435 00002f30     09eb          MOVI    RD20FONT,A11    ;BIG OLD LETTERS
         00002f40 00000000! 
     436 00002f60     182a          MOVK    1,A10           ;ONE SPACE BETWEEN LETTERS
     437 00002f70                   JSRP    STRCNRM         ;" CONGRATULATIONS! "
     438 00002fe0     09eb          MOVI    RD15FONT,A11    ;MEDIUM LETTERS
         00002ff0 00000000! 
     439 00003010     09e6          MOVI    0F3F3H,A6
         00003020 0000f3f3  
     440 00003040     09e9          MOVI    [CONGY+30,256],A9       ;POSITION
         00003050 00aa0100  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   12

     441 00003070                   JSRP    STRCNRM         ;"YOU HAVE COMPLETED"
     442 000030e0     09e6          MOVI    0F5F5H,A6
         000030f0 0000f5f5  
     443 00003110     09e9          MOVI    [CONGY+50,256],A9       ;POSITION
         00003120 00be0100  
     444 00003140                   JSRP    STRCNRM         ;"THE NARC TRAINING MISSION ..."
     445 000031b0                   SLEEP   60
     446 00003200                   SOUND1  THECROWD
     447 00003260     5600          CLR     A0
     448 00003270     09e6          MOVI    0F0F0H,A6
         00003280 0000f0f0  
     449 000032a0     09e9          MOVI    [CONGY+70,256],A9       ;POSITION
         000032b0 00d20100  
     450 000032d0                   JSRP    STRCNRM         ;"NICE WORK."
     451 00003340                   SLEEP   60
     452 00003390     09eb          MOVI    RD20FONT,A11    ;BIG LETTERS
         000033a0 00000000! 
     453 000033c0     09e6          MOVI    0F3F3H,A6
         000033d0 0000f3f3  
     454 000033f0     09e9          MOVI    [CONGY+140,256],A9      ;POSITION
         00003400 01180100  
     455 00003420                   JSRP    STRCNRM         ;"CONTACT YOUR LOCAL"
     456 00003490     09e9          MOVI    [CONGY+180,256],A9      ;POSITION
         000034a0 01400100  
     457 000034c0                   JSRP    STRCNRM         ;"D.E.A RECRUITER."
     458 00003530                   SLEEP   350     
     459                    ****    SOUND1  SOUNDOFF
     460 00003580                   AUDITCNT AUDSURV,SURVCNT        ;COUNT THE SURVIVES
     461 00003600     c080          JAUC    GAMEDETH                ;END IT HERE
         00003610 00000000! 
     462                    
     463              008c  CONGY   .EQU    60+SKYTOPOF
     464                    
     465 00003630           CONGRATXT
     466 00003630       43          .STRING "CONGRATULATIONS!"
         00003638       4f  
         00003640       4e  
         00003648       47  
         00003650       52  
         00003658       41  
         00003660       54  
         00003668       55  
         00003670       4c  
         00003678       41  
         00003680       54  
         00003688       49  
         00003690       4f  
         00003698       4e  
         000036a0       53  
         000036a8       21  
     467 000036b0       00          .BYTE   0
     468 000036b8       59          .STRING "YOU HAVE COMPLETED"
         000036c0       4f  
         000036c8       55  
         000036d0       20  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   13

         000036d8       48  
         000036e0       41  
         000036e8       56  
         000036f0       45  
         000036f8       20  
         00003700       43  
         00003708       4f  
         00003710       4d  
         00003718       50  
         00003720       4c  
         00003728       45  
         00003730       54  
         00003738       45  
         00003740       44  
     469 00003748       00          .BYTE   0
     470 00003750       54          .STRING "THE NARC TRAINING MISSION . . ."
         00003758       48  
         00003760       45  
         00003768       20  
         00003770       4e  
         00003778       41  
         00003780       52  
         00003788       43  
         00003790       20  
         00003798       54  
         000037a0       52  
         000037a8       41  
         000037b0       49  
         000037b8       4e  
         000037c0       49  
         000037c8       4e  
         000037d0       47  
         000037d8       20  
         000037e0       4d  
         000037e8       49  
         000037f0       53  
         000037f8       53  
         00003800       49  
         00003808       4f  
         00003810       4e  
         00003818       20  
         00003820       2e  
         00003828       20  
         00003830       2e  
         00003838       20  
         00003840       2e  
     471 00003848       00          .BYTE   0
     472 00003850       4e          .STRING "NICE WORK."
         00003858       49  
         00003860       43  
         00003868       45  
         00003870       20  
         00003878       57  
         00003880       4f  
         00003888       52  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   14

         00003890       4b  
         00003898       2e  
     473 000038a0       00          .BYTE   0
     474 000038a8       43          .STRING "CONTACT YOUR LOCAL"
         000038b0       4f  
         000038b8       4e  
         000038c0       54  
         000038c8       41  
         000038d0       43  
         000038d8       54  
         000038e0       20  
         000038e8       59  
         000038f0       4f  
         000038f8       55  
         00003900       52  
         00003908       20  
         00003910       4c  
         00003918       4f  
         00003920       43  
         00003928       41  
         00003930       4c  
     475 00003938       00          .BYTE   0
     476 00003940       44          .STRING "D.E.A. RECRUITER."
         00003948       2e  
         00003950       45  
         00003958       2e  
         00003960       41  
         00003968       2e  
         00003970       20  
         00003978       52  
         00003980       45  
         00003988       43  
         00003990       52  
         00003998       55  
         000039a0       49  
         000039a8       54  
         000039b0       45  
         000039b8       52  
         000039c0       2e  
     477 000039d0                   .EVEN
     478                    **************************************************************************
     479                    *                                                                        *
     480                    * INITFGND - INITIALIZE BACKGROUND/FOREGROUND OBJECTS                    *
     481                    * A14 = PTR TO FORE LIST                                                 *
     482                    * RETURNS:                                                               *
     483                    * A14 = PTR TO NEXT WORD OAFTER FORE LIST                                *
     484                    *                                                                        *
     485                    **************************************************************************
     486 000039d0           INITFGND
     487 000039d0                   PUSH    A0
     488 000039e0           IFGNDLP
     489 000039e0     85c0          MOVE    *A14,A0,W               ;INITIALIZE FORE/BACKGROUND OBJECTS
     490 000039f0     ce06          JRN     IFGNDX                  ;END OF FORE/BACKGROUND LIST
     491 00003a00     0d3f          CALLR   MAKFBOBJ                
         00003a10     0a0c  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   15

     492 00003a20     cbfb          JRNZ    IFGNDLP                 ;CREATE WAS O.K.        
     493 00003a30     0b0e          ADDI    INITSIZE,A14            ;SKIP TO NEXT
         00003a40     0140  
     494 00003a50     c0f8          JRUC    IFGNDLP
     495 00003a60           IFGNDX
     496 00003a60     120e          ADDK    16,A14                  ;POINT PAST TERMINATOR
     497 00003a70                   PULL    A0
     498 00003a90     0960          RETS
     499                    
     500                    **************************************************************************
     501                    *                                                                        *
     502                    * INITBGND - INITIALIZE A BACKGROUND                                     *
     503                    * A10 = PTR TO BACKGROUND INIT TABLE                                     *
     504                    * RETURNS                                                                *
     505                    * A9 = BACKGROUND X SIZE, 32 BITS                                        *
     506                    * A10 = NEXT WORD IN BACKGROUND INIT TABLE                               *
     507                    *                                                                        *
     508                    **************************************************************************
     509 00003aa0           INITBGND
     510 00003aa0     098f          MMTM    SP,A0,A1,A2,A14
         00003ab0     e002  
     511                    
     512 00003ac0     078a          MOVE    A10,@BGINIT,L
         00003ad0 00000000! 
     513                    
     514 00003af0     974e          MOVE    *A10+,A14,L             ;GET THE BACKGROUND PRIMARY MODULE LIST
     515 00003b00     078e          MOVE    A14,@BAKMODS,L
         00003b10 00000000! 
     516 00003b30     974e          MOVE    *A10+,A14,L             ;GET THE BACKGROUND SECONDARY MODULE LIST
     517 00003b40     078e          MOVE    A14,@BAK2MODS,L
         00003b50 00000000! 
     518                    
     519 00003b70     974e          MOVE    *A10+,A14,L
     520 00003b80     0d3f          CALLR   INITFGND
         00003b90     ffe3  
     521 00003ba0           IBGND6
     522 00003ba0     9542          MOVE    *A10+,A2,W
     523 00003bb0     0582          MOVE    A2,@PLYMAX,W
         00003bc0 00000000! 
     524 00003be0     0be2          SUBI    ZORIGIN,A2
         00003bf0     ff37  
     525 00003c00     0582          MOVE    A2,@PLZMAX,W
         00003c10 00000000! 
     526 00003c30     9541          MOVE    *A10+,A1,W
     527 00003c40     0581          MOVE    A1,@PLYMIN,W            ;STUFF Y BOUNDRIES
         00003c50 00000000! 
     528 00003c70     0be1          SUBI    ZORIGIN,A1
         00003c80     ff37  
     529 00003c90     0581          MOVE    A1,@PLZMIN,W            ;AND Z BOUNDRIES
         00003ca0 00000000! 
     530 00003cc0     4422          SUB     A1,A2                   ;A2 = PLAYFIELD Z WIDTH
     531 00003cd0     2fe2          SRL     1,A2
     532 00003ce0     4022          ADD     A1,A2                   ;A2 = Z MIDLINE OF PLAYFIELD
     533 00003cf0     0582          MOVE    A2,@PLZMID,W
         00003d00 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   16

     534 00003d20     9542          MOVE    *A10+,A2,W      
     535 00003d30     0be2          SUBI    ZORIGIN,A2
         00003d40     ff37  
     536 00003d50     0582          MOVE    A2,@PSZMAX,W
         00003d60 00000000! 
     537 00003d80     9541          MOVE    *A10+,A1,W
     538 00003d90     0be1          SUBI    ZORIGIN,A1
         00003da0     ff37  
     539 00003db0     0581          MOVE    A1,@PSZMIN,W
         00003dc0 00000000! 
     540 00003de0     4422          SUB     A1,A2                   ;A2 = STREET Z WIDTH
     541 00003df0     2fe2          SRL     1,A2
     542 00003e00     4022          ADD     A1,A2                   ;A2 = Z MIDLINE OF STREET
     543 00003e10     0582          MOVE    A2,@PSZMID,W
         00003e20 00000000! 
     544 00003e40     9541          MOVE    *A10+,A1,W              ;GET THE CARD DROPPER
     545 00003e50     0581          MOVE    A1,@CARDHOLD,W
         00003e60 00000000! 
     546 00003e80     9541          MOVE    *A10+,A1,W              ;AND THE SCROLL STOPPER 
     547 00003e90     0581          MOVE    A1,@XSCROLLS,W  
         00003ea0 00000000! 
     548 00003ec0     9541          MOVE    *A10+,A1,W      
     549 00003ed0     0581          MOVE    A1,@GAMERASE,W          ;SET-UP THE GAMERASE SCHEME
         00003ee0 00000000! 
     550                    
     551 00003f00     9541          MOVE    *A10+,A1,W
     552 00003f10     0581          MOVE    A1,@SKYCOLOR,W          ;GET THE SKY COLOR
         00003f20 00000000! 
     553 00003f40     5621          CLR     A1
     554 00003f50     0581          MOVE    A1,@IRQSKYE,W
         00003f60 00000000! 
     555                    
     556 00003f80     9741          MOVE    *A10+,A1,L
     557 00003f90     0781          MOVE    A1,@INTRPROC,L          ;LOAD THE INTRODUCTION PROCESS
         00003fa0 00000080- 
     558                    
     559 00003fc0     9741          MOVE    *A10+,A1,L
     560 00003fd0     0781          MOVE    A1,@BGNAME,L            ;LOAD THE BACKGROUND NAME
         00003fe0 00000000! 
     561                    
     562 00004000     9741          MOVE    *A10+,A1,L              ;GET THE WORLD START COORDS
     563 00004010     5600          CLR     A0
     564 00004020     ec20          MOVX    A1,A0
     565 00004030     0b40          CMPI    7FFFH,A0
         00004040     8000  
     566 00004050     ca04          JREQ    INITBSKX                ;BR = DON'T STUFF AN X COORDINATE
     567 00004060     2600          SLL     16,A0
     568 00004070     0780          MOVE    A0,@WORLDTLX,L
         00004080 00000000! 
     569 000040a0           INITBSKX
     570 000040a0     2e01          SRL     16,A1
     571 000040b0     0b41          CMPI    7FFFH,A1
         000040c0     8000  
     572 000040d0     ca04          JREQ    INITBSKY                ;BR = DON'T STUFF A Y COORDINATE
     573 000040e0     2601          SLL     16,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   17

     574 000040f0     0781          MOVE    A1,@WORLDTLY,L
         00004100 00000000! 
     575 00004120           INITBSKY
     576 00004120     05a0          MOVE    @WORLDTLX+16,A0,W
         00004130 00000010! 
     577 00004150     05a1          MOVE    @WORLDTLY+16,A1,W
         00004160 00000010! 
     578 00004180     2601          SLL     16,A1
     579 00004190     ec01          MOVX    A0,A1
     580 000041a0     0781          MOVE    A1,@WORLDTL,L           ;SET THIS YOURSELF
         000041b0 00000000! 
     581                    
     582 000041d0     9541          MOVE    *A10+,A1,W
     583 000041e0     0581          MOVE    A1,@LOOPWAVE,W          ;LOOP BACK WAVE #
         000041f0 00000000! 
     584 00004210     9741          MOVE    *A10+,A1,L
     585 00004220     0781          MOVE    A1,@LOOPBACK,L          ;LOOP BACK BACKGROUND
         00004230 00000000! 
     586 00004250     9741          MOVE    *A10+,A1,L
     587 00004260     0781          MOVE    A1,@LOOPDISP,L          ;LOOP BACK DISPATCH
         00004270 00000000! 
     588                    
     589 00004290     9541          MOVE    *A10+,A1,W
     590 000042a0     0581          MOVE    A1,@SCRLBIAS,W          ;GET THE SCROLL BIAS THIS WAVE
         000042b0 00000000! 
     591                    
     592 000042d0     09e1          MOVI    GETDOPE,A1
         000042e0 00000000! 
     593 00004300     0781          MOVE    A1,@DOPESYM,L           ;SET THE DOPE SYMBOL
         00004310 00000000! 
     594                    
     595 00004330     07a0          MOVE    @BAKMODS,A0,L
         00004340 00000000! 
     596 00004360     0d5f          CALLA   BAK_END
         00004370 0000f240' 
     597 00004390     0580          MOVE    A0,@UNIVENDX,W
         000043a0 00000000! 
     598 000043c0     2e00          SRL     16,A0
     599 000043d0     0580          MOVE    A0,@UNIVENDY,W
         000043e0 00000000! 
     600                    
     601 00004400     09af          MMFM    SP,A0,A1,A2,A14
         00004410     4007  
     602 00004420     0960          RETS
     603                    
     604                    **************************************************************************
     605                    *                                                                        *
     606                    * BACKINTR - PROCESS TO INTRODUCE THE NEW BACKGROUND.                    *
     607                    *       SHOULD ONLY BE CREATED AFTER THE BACKGROUND HAS BEEN             *
     608                    *       INITIALIZED.                                                     *
     609                    *                                                                        *
     610                    **************************************************************************
     611 00004430           BACKINTR
     612                    *SET THE CLIPPING WINDOW TO THE PLAYFIELD MIDPOINT
     613 00004430     09c0          MOVI    ININTRO,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   18

         00004440     0018  
     614 00004450     0580          MOVE    A0,@GAMSTATE,W
         00004460 00000000! 
     615                    ****    MOVI    [360,250],A0            ;POINT FROM WHICH TO START THE EXPAND
     616 00004480     09e0          MOVI    WSCANEXP,A0             ;POINT FROM WHICH TO START THE EXPAND
         00004490 00d000fd  
     617 000044b0     0780          MOVE    A0,@SCRNTL,L
         000044c0 00000000! 
     618 000044e0     0780          MOVE    A0,@SCRNLR,L            ;MAKE THE SCREEN WINDOW A POINT
         000044f0 00000000! 
     619 00004510     07a0          MOVE    @BAKMODS,A0,L           ;LET'S GET A STARTING WORLD COORD
         00004520 00000000! 
     620 00004540     1000          ADDK    32,A0
     621 00004550     8400          MOVE    *A0,A0,W
     622                    ***     MOVE    @UNIVENDX,A0,W
     623                    ***     NEG     A0
     624 00004560     2600          SLL     16,A0
     625 00004570     0780          MOVE    A0,@WORLDTLX,L
         00004580 00000000! 
     626 000045a0     2be0          SRA     1,A0
     627 000045b0     0780          MOVE    A0,@BAK2TLX,L
         000045c0 00000000! 
     628                    
     629 000045e0                   SLEEP   2               ;LET THE KILL CALL PASS
     630 00004620     09e0          MOVI    WAVMUSIC,A0     ;GET THE WAVE TUNE TABLE
         00004630 00000000! 
     631 00004650     05a2          MOVE    @WAVE,A2,W
         00004660 00000000! 
     632 00004680     1422          DEC     A2              ;ZERO BASE
     633 00004690     2782          SLL     28,A2           ;ONLY SIGNIFICANT TO 4 BITS RIGHT NOW
     634 000046a0     2d22          SRL     23,A2
     635 000046b0     4040          ADD     A2,A0
     636 000046c0     8600          MOVE    *A0,A0,L
     637 000046d0     0780          MOVE    A0,@BGMUSIC,L
         000046e0 00000000! 
     638 00004700     0d5f          CALLA   ONESND
         00004710 00000000! 
     639                    ***     SLEEP   2
     640                    ***     SOUND1  FADEUP
     641 00004730     1820          MOVK    1,A0
     642 00004740     0580          MOVE    A0,@DISPLAYON,W         ;TURN THE DISPLAY PROC ON
         00004750 00000000! 
     643 00004770                   CREATE  BUPDPID,BBOFSCRN        ;CREATE THE BACKGROUND UPDATE PROCESS
     644 000047f0     09c1          MOVI    BGNDIPID,A1
         00004800     0bab  
     645 00004810     07a7          MOVE    @INTRPROC,A7,L          ;GET THE INTRO PROCESS
         00004820 00000080- 
     646 00004840     0d5f          CALLA   GETPRC                  ;CREATE IT
         00004850 00000000! 
     647 00004870                   SLEEP   2
     648 000048b0     09c0          MOVI    WSCANTLY,A0             ;SET UP WORLD COORDS TO MATCH MSU SCRN
         000048c0     005a  
     649 000048d0     2600          SLL     16,A0
     650 000048e0     0780          MOVE    A0,@WORLDTLY,L
         000048f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   19

     651 00004910     2be0          SRA     1,A0
     652 00004920     0780          MOVE    A0,@BAK2TLY,L
         00004930 00000000! 
     653                    
     654                    *CHECK FOR SPECIAL INTRO WAVES HERE
     655 00004950     05a0          MOVE    @WAVE,A0,W
         00004960 00000000! 
     656 00004980     0b40          CMPI    5,A0
         00004990     fffa  
     657 000049a0     ca06          JREQ    BACKSPI
     658 000049b0     0b40          CMPI    8,A0
         000049c0     fff7  
     659 000049d0     ca03          JREQ    BACKSPI
     660 000049e0     0b40          CMPI    3,A0
         000049f0     fffc  
     661 00004a00     cb1e          JRNE    BACKNTST
     662                    *
     663                    *INTRO FOR WAVES WITH NO BUILDINGS, I.E. MUCH TOO MUCH SKY
     664 00004a10           BACKSPI
     665 00004a10                   CREATE  BGNDPID,WHIPTHRU        ;FAST AND FURIOUS INTRO
     666 00004a90     182b          MOVK    1,A11                   ;WE DON'T WANT TO PUT ANYONE TO SLEEP
     667 00004aa0                   CREATE  BGNDPID,DPYSNORM
     668 00004b20                   CREATE  BGNDPID,INTREXSC
     669 00004ba0     1820          MOVK    1,A0
     670 00004bb0     0580          MOVE    A0,@GAMERASE,W
         00004bc0 00000000! 
     671 00004be0     c039          JRUC    BACKINTG
     672                    
     673 00004bf0           BACKNTST
     674 00004bf0     1420          DEC     A0
     675 00004c00     ca1a          JRZ     BACKISLW                ;BR = DO THE SLOW INTRO
     676                    *
     677                    *INTRO FOR ALL OTHER WAVES AFTER THE FIRST
     678 00004c10                   CREATE  BGNDPID,WHIPTHRU        ;FAST AND FURIOUS INTRO
     679 00004c90     182b          MOVK    1,A11                   ;WE DON'T WANT TO PUT ANYONE TO SLEEP
     680 00004ca0                   CREATE  BGNDPID,DPYSNORM
     681 00004d20                   CREATE  BGNDPID,INTREXSC
     682 00004da0     c01d          JRUC    BACKINTG
     683                    *
     684                    *SLOW INTRO FOR FIRST WAVE
     685 00004db0           BACKISLW
     686 00004db0                   CREATE  BGNDPID,WHIPTHRU
     687 00004e30                   SLEEP   0AH
     688 00004e70     182b          MOVK    1,A11
     689 00004e80                   CREATE  BGNDPID,DPYSNORM        ;SLIDE THE SCREEN DOWN USING DPYSTRT
     690 00004f00                   CREATE  BGNDPID,INTREXSC        ;EXPAND SCREEN
     691                    
     692 00004f80           BACKINTG
     693 00004f80     0d5f          CALLA   SCORAREA                ;OUTPUT THE TOTAL SCORE AREA
         00004f90 00000000! 
     694 00004fb0                   DIE
     695                    
     696                    **************************************************************************
     697                    *                                                                        *
     698                    * WHIPTHRU - WHIP THRU THE WHOLE BACKGROUND AT AN INCREDIBLE VELOCITY,   *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   20

     699                    *          PERHAPS DECELERATING. WHEN THE END IS REACHED THE WORLD       *
     700                    *          COORDINATES ARE RESET TO 0,0                                  *
     701                    *                                                                        *
     702                    **************************************************************************
     703 00004fe0           WHIPTHRU
     704 00004fe0     07a0          MOVE    @WORLDTLX,A0,L
         00004ff0 00000000! 
     705 00005010     c500          JRGE    WHIPNOT                 ;NO INTRO STUFF TO HANDLE
         00005020     0086  
     706 00005030     5642          CLR     A2
     707 00005040     c030          JRUC    WHIPT1B
     708 00005050           WHIPT1
     709 00005050     5621          CLR     A1
     710 00005060     0d5f          CALLA   GETSCRRX                                                 
         00005070 00000000! 
     711 00005090     4401          SUB     A0,A1                                                    
     712                    
     713 000050a0     07a0          MOVE    @INTRPROC,A0,L
         000050b0 00000080- 
     714 000050d0     0b60          CMPI    CHOPINTR,A0             ;CHECK FOR CHOPPER INTRO
         000050e0 ffffffff! 
     715 00005100     cb12          JRNE    WHIPNRM
     716                    
     717                    *SCROLL FOR CHOPPER INTRO
     718 00005110     0b61          CMPI    [10,0],A1
         00005120 fff5ffff  
     719 00005140     c630          JRLE    WHIPT2
     720                    
     721 00005150     07a2          MOVE    @SCROLLX,A2,L
         00005160 00000000! 
     722 00005180     0b61          CMPI    [100,0],A1              ;LINE TO START SLOW DOWN
         00005190 ff9bffff  
     723 000051b0     c719          JRGT    WHIPT1B                 ;BR = O.K. TO STILL SPEED UP
     724                    
     725 000051c0     0be2          SUBI    6000H,A2
         000051d0     9fff  
     726 000051e0     0b62          CMPI    [10H,0],A2              ;ONLY THIS LOW ON CHOPPER
         000051f0 ffefffff  
     727 00005210     c41c          JRLT    WHIPT1A                 ;BR = UNDERFLOW, DON'T STUFF
     728 00005220     c018          JRUC    WHIPT1C
     729                    *NORMAL INTRO SCROLL
     730 00005230           WHIPNRM
     731 00005230     0b61          CMPI    [100,0],A1
         00005240 ff9bffff  
     732 00005260     c61e          JRLE    WHIPT2
     733                    
     734 00005270     07a2          MOVE    @SCROLLX,A2,L
         00005280 00000000! 
     735 000052a0     0b61          CMPI    [694,0],A1              ;LINE TO START SLOW DOWN
         000052b0 fd49ffff  
     736 000052d0     c707          JRGT    WHIPT1B                 ;BR = O.K. TO STILL SPEED UP
     737                    
     738 000052e0     0be2          SUBI    6000H,A2
         000052f0     9fff  
     739 00005300     0b62          CMPI    [1,0],A2
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   21

         00005310 fffeffff  
     740 00005330     c40a          JRLT    WHIPT1A                 ;BR = UNDERFLOW, DON'T STUFF
     741 00005340     c006          JRUC    WHIPT1C
     742 00005350           WHIPT1B
     743 00005350     0b02          ADDI    6000H,A2
         00005360     6000  
     744 00005370     0b62          CMPI    [23,0],A2
         00005380 ffe8ffff  
     745 000053a0     c703          JRGT    WHIPT1A                 ;BR = OVERFLOW, DON'T STUFF     
     746 000053b0           WHIPT1C
     747 000053b0     0782          MOVE    A2,@SCROLLX,L           ;WHIP IT, WHIP IT GOOD  
         000053c0 00000000! 
     748 000053e0           WHIPT1A
     749 000053e0                   SLOOP   1,WHIPT1
     750 00005450           WHIPT2
     751 00005450     09e0          MOVI    SCRNST,A0
         00005460 00500000  
     752 00005480     0780          MOVE    A0,@SCRNTL,L
         00005490 00000000! 
     753 000054b0     09e0          MOVI    SCRNEND,A0
         000054c0 01900200  
     754 000054e0     0780          MOVE    A0,@SCRNLR,L
         000054f0 00000000! 
     755 00005510                   CREATE  BGNDPID,BSCHKG          ;CREATE THE SCROLL CHECKER
     756 00005590     09e9          MOVI    P1DATA,A9
         000055a0 00000000! 
     757 000055c0     09ea          MOVI    P2DATA,A10
         000055d0 00000000! 
     758 000055f0     09cb          MOVI    060H,A11                ;WAIT THIS LONG
         00005600     0060  
     759 00005610           WHIPLUP
     760 00005610                   SLEEP   1                       ;LET THE REFRESH HAVE A CRAAAAACK
     761 00005650     b728          MOVE    *A9(POBJ),A8,L
         00005660     00a0  
     762 00005670     cb09          JRNZ    WHIPCK1V                ;BR = PLAYER ONE EXISTS
     763 00005680           WHIPCK2V
     764 00005680     b748          MOVE    *A10(POBJ),A8,L         ;O.K. SO CHECK PLAYER TWO ONLY
         00005690     00a0  
     765 000056a0     ca0a          JRZ     WHIPOUT
     766 000056b0     b700          MOVE    *A8(OXVEL),A0,L
         000056c0     0040  
     767 000056d0     ca07          JRZ     WHIPOUT
     768 000056e0     142b          DEC     A11
     769 000056f0     ca05          JRZ     WHIPOUT                 ;BR =TIME OUT FUCKAH
     770 00005700     c0f0          JRUC    WHIPLUP
     771 00005710           WHIPCK1V
     772 00005710     b700          MOVE    *A8(OXVEL),A0,L         ;PLAYER ONE MOVING?
         00005720     0040  
     773 00005730     caf4          JRZ     WHIPCK2V                ;BR = YES, WAIT SOME MORE       
     774 00005740     3e8b          DSJS    A11,WHIPLUP     
     775 00005750           WHIPOUT
     776 00005750     09c0          MOVI    INPLAY,A0
         00005760     0020  
     777 00005770     0580          MOVE    A0,@GAMSTATE,W          ;START YOUR ENGINES
         00005780 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   22

     778 000057a0     1840          MOVK    2,A0
     779 000057b0     0580          MOVE    A0,@GAMERASE,W          ;TURN ON HALF SCREEN AUTOERASE
         000057c0 00000000! 
     780 000057e0                   CREATE  MASTERID,MASTERDP       ;CREATE MASTER DISPATCH
     781                    ***     CALLR   DELBB1ST                ;<---IPE OUT THE INTRO BACK/FORE OBJECTS
     782 00005860                   DIE
     783                    *
     784                    *COME HERE IF YOU DON'T WANT TO WHIP, JUST WAIT
     785 00005890           WHIPNOT
     786 00005890     09c0          MOVI    WTLYNPID,A0
         000058a0     0631  
     787 000058b0     5621          CLR     A1
     788 000058c0     03e1          NOT     A1
     789 000058d0     0d5f          CALLA   EXISTP
         000058e0 00000000! 
     790 00005900     ca07          JRZ     WHIPNOT1                ;DONE COMING DOWN MAN   
     791 00005910                   SLOOP   4,WHIPNOT
     792 00005980           WHIPNOT1
     793 00005980     09e0          MOVI    SCRNST,A0
         00005990 00500000  
     794 000059b0     0780          MOVE    A0,@SCRNTL,L
         000059c0 00000000! 
     795 000059e0     09e0          MOVI    SCRNEND,A0              ;ASSURED FULL SCREEN ACTION
         000059f0 01900200  
     796 00005a10     0780          MOVE    A0,@SCRNLR,L
         00005a20 00000000! 
     797 00005a40                   CREATE  BGNDPID,BSCHKG          ;CREATE THE SCROLL CHECKER
     798 00005ac0     c0c8          JRUC    WHIPOUT
     799                    
     800                    **************************************************************************
     801                    *                                                                        *
     802                    * DELBB1ST - FREE ALL THE FORE/BACKGROUND OBJECTS IN LIMBO UP TO THE     *
     803                    *               THE FIRST ACTIVE FB OBJECT.                              *
     804                    *       THIS IS USED TO CLEAR THE INTRO BACKGROUND OBJECTS.              *
     805                    *                                                                        *
     806                    **************************************************************************
     807 00005ad0           DELBB1ST
     808 00005ad0     098f          MMTM    SP,A0,A1
         00005ae0     c000  
     809 00005af0     09e0          MOVI    BBACTIVE,A0
         00005b00 00000000! 
     810 00005b20           DELBB1L
     811 00005b20     8600          MOVE    *A0,A0,L
     812 00005b30     ca09          JREQ    DELBB1X         ;BR = WE'RE DONE
     813 00005b40           DELBB2L
     814 00005b40     b401          MOVE    *A0(NDATA),A1,W
         00005b50     0040  
     815 00005b60     cb06          JRNE    DELBB1X         ;BR = THIS BLOCK IS NOT IN LIMBO, CAN IT
     816 00005b70     8601          MOVE    *A0,A1,L        ;GET THE NEXT
     817 00005b80     0d5f          CALLA   DELBBOBJ        ;FREE UP THIS SUCKER
         00005b90 00000000! 
     818 00005bb0     4c20          MOVE    A1,A0
     819 00005bc0     cbf7          JRNZ    DELBB2L
     820 00005bd0           DELBB1X
     821 00005bd0     09af          MMFM    SP,A0,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   23

         00005be0     0003  
     822 00005bf0     0960          RETS
     823                    
     824                    **************************************************************************
     825                    *                                                                        *
     826                    * INTREXSC - WAVE INTRO SCREEN EXPAND. BRINGS UP SKY COLOR WHEN DONE     *
     827                    *                                                                        *
     828                    **************************************************************************
     829 00005c00           INTREXSC
     830 00005c00     09eb          MOVI    -0D000H,A11
         00005c10 ffff3000  
     831 00005c30                   CREATE  WTLYNPID,WTLYNORM       ;SLIDE THE SCREEN DOWN USING DPYSTRT
     832 00005cb0     09c0          MOVI    44H,A0
         00005cc0     0044  
     833 00005cd0     09ea          MOVI    SCRNST,A10
         00005ce0 00500000  
     834 00005d00     09eb          MOVI    SCRNEND,A11
         00005d10 01900200  
     835 00005d30                   JSRP    SCREXP32
     836                    
     837 00005da0     1820          MOVK    1,A0
     838 00005db0     0580          MOVE    A0,@GAMERASE,W          ;TURN ON FULL SCREEN AUTO ERASE
         00005dc0 00000000! 
     839 00005de0     0d5f          CALLA   MSUCLEAR                ;CLEAR THE MSU PALETTES
         00005df0 00000000! 
     840 00005e10     09c0          MOVI    SKYPID,A0
         00005e20     1000  
     841 00005e30     b00d          MOVE    A0,*A13(PROCID),W       ;LOAD IN THIS HAPPY GUY
         00005e40     0020  
     842 00005e50     09c9          MOVI    800H,A9
         00005e60     0800  
     843                    **************************************************************************
     844                    *                                                                        *
     845                    * SKYUP - FADE UP THE SKY COLOR AND DIE                                  *
     846                    * A9 = FADER SPEED                                                       *
     847                    * I.D. = SKYPID                                                          *
     848                    **************************************************************************
     849 00005e70           SKYUP
     850 00005e70     b5a0          MOVE    *A13(PROCID),A0,W
         00005e80     0020  
     851 00005e90     5621          CLR     A1
     852 00005ea0     03e1          NOT     A1
     853 00005eb0     0d5f          CALLA   KILALL
         00005ec0 00000000! 
     854 00005ee0     5708          CLR     A8
     855 00005ef0           SKYUP1
     856 00005ef0     05a0          MOVE    @SKYCOLOR,A0,W
         00005f00 00000000! 
     857 00005f20     4d01          MOVE    A8,A1
     858 00005f30     0d5f          CALLA   XCOLOR
         00005f40 00000000! 
     859 00005f60     0580          MOVE    A0,@IRQSKYE,W
         00005f70 00000000! 
     860 00005f90                   SLEEP   1
     861 00005fd0     4128          ADD     A9,A8
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   24

     862 00005fe0     0b68          CMPI    10000H,A8
         00005ff0 fffeffff  
     863 00006010     c6ed          JRLE    SKYUP1
     864 00006020     09e1          MOVI    10000H,A1
         00006030 00010000  
     865 00006050           SKYDIE
     866 00006050     05a0          MOVE    @SKYCOLOR,A0,W
         00006060 00000000! 
     867 00006080     0d5f          CALLA   XCOLOR
         00006090 00000000! 
     868 000060b0                   DIE
     869                    
     870                    **************************************************************************
     871                    *                                                                        *
     872                    * DPYSNORM - INCREMENTS DPYSTRT FROM ITS CURRENT VALUE TO FFFCH          *
     873                    * A11 = INCREMENTS/TICK                                                  *
     874                    *                                                                        *
     875                    **************************************************************************
     876 000060e0           DPYSNORM
     877 000060e0     248b          SLL     4,A11
     878 000060f0           DPYSNL
     879 000060f0     05a0          MOVE    @DPYSTRT,A0,W
         00006100 c0000090  
     880 00006120     4160          ADD     A11,A0
     881                           .IF INTRLACE     
     882                            ADD     A11,A0                  ;KEEP THINGS EVEN FOR INTERLACE
     883                           .ENDIF   
     884 00006130     cf0d          JRNN    DPYNFIX                 ;WE'RE DEFINITELY DONE
     885 00006140     0b40          CMPI    0FFFFFFFCH,A0
         00006150     0003  
     886 00006160     c90a          JRHS    DPYNFIX
     887 00006170     0580          MOVE    A0,@DPYSTRT,W
         00006180 c0000090  
     888 000061a0                   SLOOP   1,DPYSNL
     889 00006210           DPYNFIX
     890 00006210     09e0          MOVI    0FFFCH,A0
         00006220 0000fffc  
     891 00006240     0580          MOVE    A0,@DPYSTRT,W           ;MAKE SURE IT HOLDS CORRECTLY
         00006250 c0000090  
     892 00006270                   DIE
     893                    
     894                    **************************************************************************
     895                    *                                                                        *
     896                    * WTLYNORM - INCREMENTS WORLDTLY FROM ITS CURRENT VALUE TO THE NORMAL    *
     897                    *          STARTING Y OF THE WAVE                                        *
     898                    * A11 = INCREMENTS/TICK 32 BITS                                          *
     899                    *                                                                        *
     900                    **************************************************************************
     901 000062a0           WTLYNORM
     902 000062a0     078b          MOVE    A11,@SCROLLY,L
         000062b0 00000000! 
     903 000062d0           WTLYSNL
     904 000062d0     07a0          MOVE    @WORLDTLY,A0,L
         000062e0 00000000! 
     905 00006300     c607          JRLE    WTLYFIX
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   25

     906 00006310                   SLOOP   1,WTLYSNL
     907 00006380           WTLYFIX
     908 00006380     5600          CLR     A0
     909 00006390     0780          MOVE    A0,@SCROLLY,L
         000063a0 00000000! 
     910 000063c0     0780          MOVE    A0,@WORLDTLY,L
         000063d0 00000000! 
     911 000063f0     0780          MOVE    A0,@BAK2TLY,L
         00006400 00000000! 
     912 00006420                   DIE
     913                    
     914                    **************************************************************************
     915                    *                                                                        *
     916                    * PUSHBGND - PUSH THE CURRENT BACKGROUND ON TO THE BAKSTAK               *
     917                    * A8 = PTR TO DOOR(SPACE) ENTERED, 0 = NO DOOR                           *
     918                    *                                                                        *
     919                    **************************************************************************
     920 00006450           PUSHBGND
     921 00006450     098f          MMTM    SP,A0,A1,A4,A5,A6,A7,A8,A9,A10,A11,A12,A14
         00006460     cffa  
     922 00006470     07ae          MOVE    @BAKSTAKP,A14,L
         00006480 00000000! 
     923 000064a0     4d08          MOVE    A8,A8
     924 000064b0     ca06          JRZ     PUSHRGA8
     925 000064c0     b505          MOVE    *A8(OXPOS),A5,W
         000064d0     0090  
     926 000064e0     b508          MOVE    *A8(OYPOS),A8,W
         000064f0     00b0  
     927 00006500     2608          SLL     16,A8
     928 00006510     eca8          MOVX    A5,A8
     929 00006520           PUSHRGA8
     930 00006520     a30e          MOVE    A8,-*A14,L              ;ON THE STACK FIRST
     931 00006530     5708          CLR     A8
     932 00006540     0788          MOVE    A8,@DOORINYX,L          ;CLEAR THIS FOR NEW BACK ENTRANCE
         00006550 000000a0- 
     933 00006570     07a4          MOVE    @BGNAME,A4,L
         00006580 00000000! 
     934 000065a0     07a5          MOVE    @BGMUSIC,A5,L
         000065b0 00000000! 
     935 000065d0     07a6          MOVE    @BAK2TLX,A6,L
         000065e0 00000000! 
     936 00006600     07a7          MOVE    @BAK2TLY,A7,L
         00006610 00000000! 
     937 00006630     07a8          MOVE    @WORLDTLX,A8,L
         00006640 00000000! 
     938 00006660     07a9          MOVE    @WORLDTLY,A9,L
         00006670 00000000! 
     939 00006690     07aa          MOVE    @BGINIT,A10,L
         000066a0 00000000! 
     940 000066c0     05ab          MOVE    @SKYCOLOR,A11,W
         000066d0 00000000! 
     941 000066f0     05ac          MOVE    @CARDHOLD,A12,W
         00006700 00000000! 
     942 00006720     098e          MMTM    A14,A4,A5,A6,A7,A8,A9,A10,A11,A12
         00006730     0ff8  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   26

     943 00006740     05a4          MOVE    @LOOPWAVE,A4,W
         00006750 00000000! 
     944 00006770     07a5          MOVE    @LOOPBACK,A5,L
         00006780 00000000! 
     945 000067a0     07a6          MOVE    @LOOPDISP,A6,L
         000067b0 00000000! 
     946 000067d0     05a7          MOVE    @SCRLBIAS,A7,W
         000067e0 00000000! 
     947 00006800     098e          MMTM    A14,A4,A5,A6,A7
         00006810     0f00  
     948 00006820     09e5          MOVI    ENDIFRAM,A5
         00006830 00000000! 
     949 00006850           PUSHBL
     950 00006850     a8ae          MOVE    -*A5,-*A14,W
     951 00006860     0b65          CMPI    DIFRAM,A5
         00006870 ffffffff! 
     952 00006890     cbfb          JRNE    PUSHBL
     953                    
     954 000068a0     09c0          MOVI    MASTERID,A0     
         000068b0     0d37  
     955 000068c0     5621          CLR     A1
     956 000068d0     03e1          NOT     A1
     957 000068e0     0d5f          CALLA   EXISTP
         000068f0 00000000! 
     958                    ****    JRZ     $                               ;STICK, NO MASTER DISPATCH
     959 00006910     cb11          JRNZ    PUSHMAST
     960 00006920                   CREATE  MASTERID,MASTERDP               ;CREATE SOMETHING
     961 000069a0     cb08          JRNZ    PUSHMAST
     962 000069b0                   CALLERR 11                              ;THE THING IS FUCKED
     963                    
     964 00006a30           PUSHMAST
     965 00006a30     4c07          MOVE    A0,A7
     966 00006a40     09c5          MOVI    PRCSIZ,A5
         00006a50     05a0  
     967 00006a60     40a0          ADD     A5,A0                           ;GET TO THE END MY MAN
     968 00006a70     2b65          SRA     5,A5                            ;DIVIDE BY 32
     969 00006a80     1465          SUBK    3,A5
     970 00006a90           PUSHMDPL
     971 00006a90     aa0e          MOVE    -*A0,-*A14,L    
     972 00006aa0     3c45          DSJS    A5,PUSHMDPL
     973 00006ab0     b6e6          MOVE    *A7(PSPTR),A6,L
         00006ac0     0040  
     974 00006ad0     44e6          SUB     A7,A6                           ;FORM OFFSET TO STACK PTR
     975 00006ae0     a2ce          MOVE    A6,-*A14,L                      ;STORE THE OFFSET       
     976 00006af0     0b6e          CMPI    BAKSTAKE,A14
         00006b00 ffffffff! 
     977                    ***     JRLT    $                               ;STICK ON STACK OVERFLOW
     978 00006b20     c508          JRGE    PUSHSOK
     979 00006b30                   CALLERR 11                              ;STACK OVERFLOW ERROR
     980 00006bb0           PUSHSOK
     981 00006bb0     078e          MOVE    A14,@BAKSTAKP,L
         00006bc0 00000000! 
     982 00006be0     09af          MMFM    SP,A0,A1,A4,A5,A6,A7,A8,A9,A10,A11,A12,A14
         00006bf0     5ff3  
     983 00006c00     0960          RETS
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   27

     984                    **************************************************************************
     985                    *                                                                        *
     986                    * POPBGND - POP BACKGROUND OFF THE STACK AND REINITIALIZE IT.            *
     987                    * RETURNS:                                                               *
     988                    * A10 = BACKGROUND INITIALIZATION TABLE                                  *
     989                    *                                                                        *
     990                    **************************************************************************
     991 00006c10           POPBGND
     992 00006c10     098f          MMTM    SP,A0,A1,A4,A5,A6,A7,A8,A9,A11,A12,A14
         00006c20     cfda  
     993 00006c30     07ae          MOVE    @BAKSTAKP,A14,L
         00006c40 00000000! 
     994                    
     995 00006c60                   CREATE  MASTERID,MASTERDP               ;GET A MASTER DISPATCH PROC
     996                    ***     JRZ     $                               ;NO DISPATCH, NO GO
     997 00006ce0     cb08          JRNZ    POPMAST
     998 00006cf0                   CALLERR 10
     999 00006d70           POPMAST
    1000 00006d70     4c07          MOVE    A0,A7
    1001 00006d80     97c6          MOVE    *A14+,A6,L
    1002 00006d90     4006          ADD     A0,A6
    1003 00006da0     b2c0          MOVE    A6,*A0(PSPTR),L                 ;RESTORE STACK POINTER
         00006db0     0040  
    1004                    
    1005 00006dc0     0b00          ADDI    96,A0
         00006dd0     0060  
    1006 00006de0     09c5          MOVI    PRCSIZ,A5
         00006df0     05a0  
    1007 00006e00     2b65          SRA     5,A5                            ;DIVIDE BY 32
    1008 00006e10     1465          SUBK    3,A5
    1009 00006e20           POPMDPL
    1010 00006e20     9bc0          MOVE    *A14+,*A0+,L                    ;LOAD UP THE NEW PROC   
    1011 00006e30     3c45          DSJS    A5,POPMDPL
    1012                    
    1013 00006e40     09e1          MOVI    DIFRAM,A1
         00006e50 00000000! 
    1014 00006e70           POPBL
    1015 00006e70     99c1          MOVE    *A14+,*A1+,W
    1016 00006e80     0b61          CMPI    ENDIFRAM,A1
         00006e90 ffffffff! 
    1017 00006eb0     cbfb          JRNE    POPBL
    1018 00006ec0     09ae          MMFM    A14,A4,A5,A6,A7
         00006ed0     00f0  
    1019 00006ee0     0584          MOVE    A4,@LOOPWAVE,W
         00006ef0 00000000! 
    1020 00006f10     0785          MOVE    A5,@LOOPBACK,L
         00006f20 00000000! 
    1021 00006f40     0786          MOVE    A6,@LOOPDISP,L  
         00006f50 00000000! 
    1022 00006f70     0587          MOVE    A7,@SCRLBIAS,W
         00006f80 00000000! 
    1023 00006fa0     09ae          MMFM    A14,A4,A5,A6,A7,A8,A9,A10,A11,A12
         00006fb0     1ff0  
    1024 00006fc0     97c1          MOVE    *A14+,A1,L
    1025 00006fd0     0781          MOVE    A1,@DOORINYX,L          ;GET THE DOOR WE CAME IN ON
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   28

         00006fe0 000000a0- 
    1026 00007000     0b6e          CMPI    BAKSTAKS,A14
         00007010 ffffffff! 
    1027                    ****    JRGT    $                       ;STICK ON STACK UNDERFLOW
    1028 00007030     c608          JRLE    POPSOK
    1029 00007040                   CALLERR 10                      ;STACK UNDERFLOW ERROR
    1030 000070c0           POPSOK
    1031 000070c0     078e          MOVE    A14,@BAKSTAKP,L
         000070d0 00000000! 
    1032 000070f0     0784          MOVE    A4,@BGNAME,L
         00007100 00000000! 
    1033 00007120     0786          MOVE    A6,@BAK2TLX,L
         00007130 00000000! 
    1034 00007150     0787          MOVE    A7,@BAK2TLY,L
         00007160 00000000! 
    1035 00007180     0788          MOVE    A8,@WORLDTLX,L
         00007190 00000000! 
    1036 000071b0     0789          MOVE    A9,@WORLDTLY,L
         000071c0 00000000! 
    1037 000071e0     058b          MOVE    A11,@SKYCOLOR,W
         000071f0 00000000! 
    1038 00007210     058c          MOVE    A12,@CARDHOLD,W
         00007220 00000000! 
    1039 00007240     4ca0          MOVE    A5,A0
    1040 00007250     0780          MOVE    A0,@BGMUSIC,L           ;RESET THIS 'TING       
         00007260 00000000! 
    1041 00007280     0d5f          CALLA   ONESND                  ;RESTART THE WAVE MUSIC
         00007290 00000000! 
    1042 000072b0     09af          MMFM    SP,A0,A1,A4,A5,A6,A7,A8,A9,A11,A12,A14
         000072c0     5bf3  
    1043 000072d0     0960          RETS
    1044                    
    1045                    **************************************************************************
    1046                    *                                                                        *
    1047                    * NEWBGND - OPEN UP A NEW BGND                                           *
    1048                    * A8 = PTR TO DOOR                                                       *
    1049                    * A9 = PTR TO PLAYER                                                     *
    1050                    * A10 = PTR TO NEW BACKGROUND INIT                                       *
    1051                    * A11 = DISPATCH PROCESS TO CREATE                                       *
    1052                    *                                                                        *
    1053                    **************************************************************************
    1054 000072e0           NEWBGND
    1055 000072e0                   PUSHP   A11                     ;PUSH THE DISPATCH TO CREATE
    1056 000072f0     09c0          MOVI    BGNDPID,A0
         00007300     0bac  
    1057 00007310     b00d          MOVE    A0,*A13(PROCID),W       ;MAKE THIS A BACKGROUND DUDE
         00007320     0020  
    1058 00007330           NEWBGND1
    1059 00007330     09c0          MOVI    4000H,A0
         00007340     4000  
    1060 00007350     4c01          MOVE    A0,A1
    1061 00007360     0d5f          CALLA   EXISTP                  ;WAVE END WAIT?
         00007370 00000000! 
    1062 00007390     ca07          JRZ     NEWBGND2                ;BR = NO
    1063 000073a0                   SLOOP   1,NEWBGND1              ;GIVE THEM TIME TO COMPLETE
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   29

    1064 00007410           NEWBGND2
    1065 00007410     0d3f          CALLR   PUSHBGND
         00007420     ff02  
    1066                    
    1067 00007430     b521          MOVE    *A9(OID),A1,W
         00007440     01a0  
    1068 00007450     0b41          CMPI    P1OID,A1
         00007460     efff  
    1069 00007470     cb07          JRNE    NEWBGND3
    1070 00007480     09e9          MOVI    P1DATA,A9
         00007490 00000000! 
    1071 000074b0     09eb          MOVI    P1CTRL,A11
         000074c0 00000000! 
    1072 000074e0     c009          JRUC    NEWBGND4
    1073 000074f0           NEWBGND3
    1074 000074f0     0b41          CMPI    P2OID,A1
         00007500     dfff  
    1075 00007510     cb06          JRNE    NEWBGND4
    1076 00007520     09e9          MOVI    P2DATA,A9
         00007530 00000000! 
    1077 00007550     09eb          MOVI    P2CTRL,A11
         00007560 00000000! 
    1078 00007580           NEWBGND4
    1079 00007580     5600          CLR     A0
    1080 00007590     09e1          MOVI    08000h,A1
         000075a0 00008000  
    1081 000075c0     0d5f          CALLA   KILALL                  ;KILL ALL PROCS, EXCEPT INDIES
         000075d0 00000000! 
    1082 000075f0     0d3f          CALLR   SAVEOBJS                ;SAVE THE ENEMY STATE OF AFFAIRS
         00007600     0316  
    1083 00007610     0d3f          CALLR   KILLWAVE
         00007620     f95b  
    1084 00007630                   SOUND1  MUSICOFF
    1085                    
    1086 00007690     0d5f          CALLA   LAST2CLR
         000076a0 00000000! 
    1087 000076c0     0d5f          CALLA   COLRSTRT                ;RESTART THE COLOR PROCS
         000076d0 00000000! 
    1088 000076f0     09c0          MOVI    PUP,A0
         00007700     0001  
    1089 00007710     800b          MOVE    A0,*A11,W
    1090 00007720     b720          MOVE    *A9(POBJ),A0,L
         00007730     00a0  
    1091 00007740     0d5f          CALLA   PULLSOBJ
         00007750 00000000! 
    1092 00007770     b720          MOVE    *A9(PLOBJ),A0,L
         00007780     0120  
    1093 00007790     0d5f          CALLA   PULLSOBJ
         000077a0 00000000! 
    1094 000077c0     1820          MOVK    1,A0
    1095 000077d0     0580          MOVE    A0,@GAMERASE,W          ;TURN ON FULL SCREEN AUTOERASE
         000077e0 00000000! 
    1096 00007800     098c          MMTM    A12,A8,A9,A10,A11
         00007810     00f0  
    1097 00007820     09c9          MOVI    5000H,A9
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   30

         00007830     5000  
    1098 00007840                   CREATE  SKYPID,SKYDOWN
    1099 000078c0     0d3f          CALLR   GSOCOORD                ;GET SCREEN OBJECT COORDINATES
         000078d0     03d3  
    1100 000078e0     1800          MOVK    32,A0
    1101 000078f0                   JSRP    SCREXP32
    1102 00007960                   SOUND1  ALLOFF
    1103 000079c0                   SOUND1  YAMOFF
    1104 00007a20                   SLEEP   1
    1105 00007a60     0d5f          CALLA   SYNCHALF
         00007a70 00000000! 
    1106 00007a90     0d5f          CALLA   SYNCFULL
         00007aa0 00000000! 
    1107 00007ac0     5600          CLR     A0
    1108 00007ad0     0580          MOVE    A0,@DISPLAYON,W
         00007ae0 00000000! 
    1109 00007b00     0d5f          CALLA   DMAQWAIT
         00007b10 00000000! 
    1110 00007b30     5600          CLR     A0
    1111 00007b40     09e1          MOVI    08000h,A1
         00007b50 00008000  
    1112 00007b70     0d5f          CALLA   KILALL                  ;KILL ALL PROCS, EXCEPT INDIES
         00007b80 00000000! 
    1113 00007ba0     0d5f          CALLA   MYOINIT
         00007bb0 00000000! 
    1114 00007bd0     078a          MOVE    A10,@SCRNTL,L           ;RESTORE
         00007be0 00000000! 
    1115 00007c00     078b          MOVE    A11,@SCRNLR,L
         00007c10 00000000! 
    1116 00007c30     09ac          MMFM    A12,A8,A9,A10,A11
         00007c40     0f00  
    1117 00007c50     5600          CLR     A0
    1118 00007c60     800b          MOVE    A0,*A11,W
    1119 00007c70     0d5f          CALLA   WRAMINIT                ;INITIALIZE WAVE RAM
         00007c80 00000000! 
    1120 00007ca0     0d5f          CALLA   GETWAVE                 ;SET UP WAVE DIFFICULTY PARAMS
         00007cb0 00000000! 
    1121                    
    1122 00007cd0     b740          MOVE    *A10(0E0H),A0,L         ;FIX THIS SOUND KLUDGE
         00007ce0     00e0  
    1123 00007cf0     0d5f          CALLA   ONESND                  ;START ROOM MUSIC
         00007d00 00000000! 
    1124 00007d20                   PULLP   A7                      ;GET BACK THE DISPATCH PROC
    1125 00007d40     09c1          MOVI    MASTERID,A1
         00007d50     0d37  
    1126 00007d60     0d5f          CALLA   GETPRC
         00007d70 00000000! 
    1127 00007d90     0d5f          CALLA   COLRSTRT                ;RESTART THE COLOR PROCS
         00007da0 00000000! 
    1128                    
    1129                    *
    1130                    *GENERIC ENTRYPOINT FOR BACKGROUND RESTART
    1131 00007dc0           BGNDG
    1132 00007dc0     01e0          PUSHST
    1133 00007dd0     0360          DINT                            ;DISABLE INTS TO ASSURE CLEANLINESS
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   31

    1134 00007de0     0d5f          CALLA   BBINIT
         00007df0 00000000! 
    1135 00007e10     0d3f          CALLR   INITBGND
         00007e20     fbc7  
    1136 00007e30     07a3          MOVE    @BAKSTAKP,A3,L
         00007e40 00000000! 
    1137 00007e60     0b63          CMPI    BAKSTAKS,A3
         00007e70 ffffffff! 
    1138 00007e90     cb09          JRNE    BGNDNTOP                ;BR = NOT TOP LEVEL BACKGROUND
    1139 00007ea0     09ee          MOVI    GOALDOOR,A14
         00007eb0 00000000! 
    1140 00007ed0     0d3f          CALLR   INITFGND                ;INITIALIZE THE GOAL DOORS
         00007ee0     fbae  
    1141 00007ef0     5663          CLR     A3
    1142 00007f00     0583          MOVE    A3,@XSCROLLS,W          ;CLEAR HERE FOR GOOOOOOOD!
         00007f10 00000000! 
    1143 00007f30           BGNDNTOP
    1144 00007f30     09e2          MOVI    SCRNST,A2
         00007f40 00500000  
    1145 00007f60     09e3          MOVI    SCRNEND,A3              ;FULL WINDOW FOR SCREEN TESTER
         00007f70 01900200  
    1146                    
    1147 00007f90     07a5          MOVE    @DOORINYX,A5,L          ;GET THE COORDS OF THE DOOR WE WANT
         00007fa0 000000a0- 
    1148                    
    1149 00007fc0     09e1          MOVI    BBACTIVE,A1             ;GET THE BACKGROUND BLOCK LIST
         00007fd0 00000000! 
    1150 00007ff0           BGNDBBL
    1151 00007ff0     8621          MOVE    *A1,A1,L
    1152 00008000     ca00          JRZ     BGNDBBE
         00008010     010f  
    1153 00008020     b628          MOVE    *A1(NPTR),A8,L          ;GET THE OBJECT PTR
         00008030     0020  
    1154 00008040     b504          MOVE    *A8(OID),A4,W
         00008050     01a0  
    1155 00008060     0b44          CMPI    BGDCID|SUBDOORL,A4      
         00008070     faf9  
    1156 00008080     caf6          JREQ    BGNDBBL
    1157 00008090     0b44          CMPI    BGDCID|SUBDOORR,A4
         000080a0     faf8  
    1158 000080b0     caf3          JREQ    BGNDBBL
    1159 000080c0     2f84          SRL     4,A4
    1160 000080d0     2484          SLL     4,A4                    ;STRIP OFF THE DESCRIPTOR
    1161 000080e0     0b44          CMPI    BGDCID,A4
         000080f0     faff  
    1162 00008100     cbee          JRNE    BGNDBBL
    1163                    
    1164 00008110     0d5f          CALLA   SCRTSTG
         00008120 00000000! 
    1165 00008140     cbea          JRNE    BGNDBBL
    1166                    
    1167 00008150     b506          MOVE    *A8(OXPOS),A6,W
         00008160     0090  
    1168 00008170     4ca5          MOVE    A5,A5
    1169 00008180     ca07          JRZ     BGNDANYD                ;GET ANY DOOR WE CAN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   32

    1170 00008190     b507          MOVE    *A8(OYPOS),A7,W
         000081a0     00b0  
    1171 000081b0     2607          SLL     16,A7
    1172 000081c0     ecc7          MOVX    A6,A7
    1173 000081d0     e4e5          CMPXY   A7,A5
    1174 000081e0                   JRXNE   BGNDBBL                 ;BR = NOT THE DOOR WE WENT IN
    1175 000081f0                   JRYNE   BGNDBBL                 ;BR = NOT THE DOOR WE WENT IN
    1176 00008200           BGNDANYD
    1177 00008200     05a3          MOVE    @WORLDTLX+16,A3,W       ;GET WHAT WE WANT
         00008210 00000010! 
    1178 00008230     05a4          MOVE    @SCRNTL,A4,W            ;GET THE CURRENT SCREEN TOP LEFT X
         00008240 00000000! 
    1179 00008260     4064          ADD     A3,A4
    1180 00008270     44c4          SUB     A6,A4
    1181 00008280     4483          SUB     A4,A3
    1182 00008290     cf01          JRNN    BGNDWTOK
    1183 000082a0     5663          CLR     A3                      ;ZERO WORLDTL IN THIS CASE
    1184 000082b0           BGNDWTOK
    1185 000082b0     0583          MOVE    A3,@WORLDTLX+16,W       
         000082c0 00000010! 
    1186                    *TIME TO RE-INITIALIZE PLAYER 1
    1187 000082e0     09e2          MOVI    P1DATA,A2
         000082f0 00000000! 
    1188 00008310     09ee          MOVI    P1INITTL,A14
         00008320 00000000! 
    1189 00008340     0d5f          CALLA   PLROOMST
         00008350 00000000! 
    1190                    *TIME TO RESET PLAYER 2
    1191 00008370     09e2          MOVI    P2DATA,A2
         00008380 00000000! 
    1192 000083a0     09ee          MOVI    P2INITT,A14
         000083b0 00000000! 
    1193 000083d0     0d5f          CALLA   PLROOMST
         000083e0 00000000! 
    1194                    
    1195 00008400     01c0          POPST
    1196 00008410     0d5f          CALLA   SCORAREA                ;OUTPUT THE SCORE AREA
         00008420 00000000! 
    1197 00008440     0d5f          CALLA   PCONTST                 ;START UP THE MESSAGES
         00008450 00000000! 
    1198 00008470     1820          MOVK    1,A0
    1199 00008480     0580          MOVE    A0,@DISPLAYON,W         ;TURN THE DISPLAY PROC ON
         00008490 00000000! 
    1200 000084b0                   CREATE  BUPDPID,BBOFSCRN        ;CREATE THE BACKGROUND UPDATE PROCESS
    1201                    
    1202 00008530     098c          MMTM    A12,A8,A9,A10,A11
         00008540     00f0  
    1203 00008550     1800          MOVK    32,A0
    1204 00008560     09ea          MOVI    SCRNST,A10
         00008570 00500000  
    1205 00008590     09eb          MOVI    SCRNEND,A11
         000085a0 01900200  
    1206 000085c0                   JSRP    SCREXP32                ;BLOW UP THE SCREEN AGAIN
    1207 00008630     09c9          MOVI    800H,A9
         00008640     0800  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   33

    1208 00008650                   CREATE  SKYPID,SKYUP            ;BRING UP THE SKY
    1209 000086d0     09ac          MMFM    A12,A8,A9,A10,A11
         000086e0     0f00  
    1210                    
    1211 000086f0                   JSRP    DOOROPEN
    1212 00008760     09ea          MOVI    P1DATA,A10
         00008770 00000000! 
    1213 00008790     09eb          MOVI    P2DATA,A11
         000087a0 00000000! 
    1214 000087c0     09c0          MOVI    PDOWN,A0
         000087d0     0002  
    1215 000087e0     0580          MOVE    A0,@P1CTRL,W
         000087f0 00000000! 
    1216 00008810     0580          MOVE    A0,@P2CTRL,W
         00008820 00000000! 
    1217 00008840                   SLEEP   2
    1218                            
    1219 00008880     09e2          MOVI    P1DATA,A2
         00008890 00000000! 
    1220 000088b0     0d5f          CALLA   ADJST2DOOR              ;MAKE SURE THEY ARE DOOR ADJUSTED
         000088c0 00009650' 
    1221 000088e0     09e2          MOVI    P2DATA,A2
         000088f0 00000000! 
    1222 00008910     0d5f          CALLA   ADJST2DOOR
         00008920 00009650' 
    1223                    
    1224 00008940     4f00          MOVE    A8,B0
    1225 00008950     09e1          MOVI    PLAYERS,A1
         00008960 00000000! 
    1226 00008980     b740          MOVE    *A10(PLOBJ),A0,L
         00008990     0120  
    1227 000089a0     ca1f          JREQ    BGNDP2IN
    1228 000089b0     0d5f          CALLA   ISSUPP
         000089c0 00000000! 
    1229 000089e0     ca05          JREQ    BGNDP1C                 ;DOESN'T ALREADY EXIST
    1230 000089f0     5663          CLR     A3
    1231 00008a00     0583          MOVE    A3,@P1CTRL,W
         00008a10 00000000! 
    1232 00008a30     c016          JRUC    BGNDP2IN
    1233 00008a40           BGNDP1C
    1234 00008a40     0d5f          CALLA   INSOBJ
         00008a50 00000000! 
    1235 00008a70     0d5f          CALLA   ADDSUPP
         00008a80 00000000! 
    1236 00008aa0     4c08          MOVE    A0,A8   
    1237 00008ab0     0d5f          CALLA   SHADST
         00008ac0 00000000! 
    1238 00008ae0     b740          MOVE    *A10(POBJ),A0,L
         00008af0     00a0  
    1239 00008b00     0d5f          CALLA   INSOBJ
         00008b10 00000000! 
    1240 00008b30     0d5f          CALLA   ADDSUPP
         00008b40 00000000! 
    1241 00008b60     4c08          MOVE    A0,A8
    1242 00008b70     0d5f          CALLA   SHADST2
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   34

         00008b80 00000000! 
    1243 00008ba0           BGNDP2IN        
    1244 00008ba0     b760          MOVE    *A11(PLOBJ),A0,L
         00008bb0     0120  
    1245 00008bc0     ca1f          JREQ    BGNDCWLK
    1246 00008bd0     0d5f          CALLA   ISSUPP
         00008be0 00000000! 
    1247 00008c00     ca05          JREQ    BGNDP2C                 ;DOESN'T ALREADY EXIST
    1248 00008c10     5663          CLR     A3
    1249 00008c20     0583          MOVE    A3,@P2CTRL,W
         00008c30 00000000! 
    1250 00008c50     c016          JRUC    BGNDCWLK
    1251 00008c60           BGNDP2C
    1252 00008c60     0d5f          CALLA   INSOBJ
         00008c70 00000000! 
    1253 00008c90     0d5f          CALLA   ADDSUPP
         00008ca0 00000000! 
    1254 00008cc0     4c08          MOVE    A0,A8
    1255 00008cd0     0d5f          CALLA   SHADST
         00008ce0 00000000! 
    1256 00008d00     b760          MOVE    *A11(POBJ),A0,L
         00008d10     00a0  
    1257 00008d20     0d5f          CALLA   INSOBJ
         00008d30 00000000! 
    1258 00008d50     0d5f          CALLA   ADDSUPP
         00008d60 00000000! 
    1259 00008d80     4c08          MOVE    A0,A8
    1260 00008d90     0d5f          CALLA   SHADST2
         00008da0 00000000! 
    1261 00008dc0           BGNDCWLK
    1262 00008dc0     4e18          MOVE    B0,A8
    1263 00008dd0                   CREATE  BGNDPID,BSCHKG          ;START THE SCROLL CHECKER
    1264 00008e50     09c0          MOVI    INPLAY,A0
         00008e60     0020  
    1265 00008e70     0580          MOVE    A0,@GAMSTATE,W          ;START YOUR ENGINES
         00008e80 00000000! 
    1266 00008ea0                   SLEEP   10
    1267 00008ee0     09c0          MOVI    PDOWN+PLEFT,A0
         00008ef0     0006  
    1268 00008f00     0580          MOVE    A0,@P1CTRL,W
         00008f10 00000000! 
    1269 00008f30     09c0          MOVI    PDOWN+PRYTE,A0
         00008f40     000a  
    1270 00008f50     0580          MOVE    A0,@P2CTRL,W
         00008f60 00000000! 
    1271 00008f80                   SLEEP   10
    1272                    ***     MOVI    INPLAY,A0
    1273                    ***     MOVE    A0,@GAMSTATE,W          ;START YOUR ENGINES
    1274 00008fc0                   SLEEP   15
    1275 00009000     5600          CLR     A0
    1276 00009010     0580          MOVE    A0,@P1CTRL,W
         00009020 00000000! 
    1277 00009040     0580          MOVE    A0,@P2CTRL,W
         00009050 00000000! 
    1278 00009070                   JSRP    DOORCLOZ
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   35

    1279 000090e0                   DIE
    1280                    
    1281                    *
    1282                    *NO DOOR FOUND, JUST PLOP THEM OUT IN THE MIDDLE
    1283                    *
    1284 00009110           BGNDBBE
    1285                    *TIME TO RE-INITIALIZE PLAYER 1
    1286 00009110     09e2          MOVI    P1DATA,A2
         00009120 00000000! 
    1287 00009140     09ee          MOVI    P1INITTL,A14
         00009150 00000000! 
    1288 00009170     0d5f          CALLA   PLWAVEST
         00009180 00000000! 
    1289                    *TIME TO RESET PLAYER 2
    1290 000091a0     09e2          MOVI    P2DATA,A2
         000091b0 00000000! 
    1291 000091d0     09ee          MOVI    P2INITT,A14
         000091e0 00000000! 
    1292 00009200     0d5f          CALLA   PLWAVEST
         00009210 00000000! 
    1293 00009230     1820          MOVK    1,A0
    1294 00009240     b00d          MOVE    A0,*A13(PDATA),W        ;FLAG A DOOR ENTRANCE
         00009250     0060  
    1295                    
    1296 00009260     01c0          POPST
    1297 00009270     0d5f          CALLA   SCORAREA                ;OUTPUT THE SCORE AREA
         00009280 00000000! 
    1298 000092a0     0d5f          CALLA   PCONTST                 ;START UP THE MESSAGES
         000092b0 00000000! 
    1299 000092d0     1820          MOVK    1,A0
    1300 000092e0     0580          MOVE    A0,@DISPLAYON,W         ;TURN THE DISPLAY PROC ON
         000092f0 00000000! 
    1301 00009310                   CREATE  BUPDPID,BBOFSCRN        ;CREATE THE BACKGROUND UPDATE PROCESS
    1302                    
    1303 00009390     09c0          MOVI    INPLAY,A0
         000093a0     0020  
    1304 000093b0     0580          MOVE    A0,@GAMSTATE,W          ;START YOUR ENGINES
         000093c0 00000000! 
    1305                    
    1306 000093e0     098c          MMTM    A12,A8,A9,A10,A11
         000093f0     00f0  
    1307 00009400     1800          MOVK    32,A0
    1308 00009410     09ea          MOVI    SCRNST,A10
         00009420 00500000  
    1309 00009440     09eb          MOVI    SCRNEND,A11
         00009450 01900200  
    1310 00009470                   JSRP    SCREXP32                ;BLOW UP THE SCREEN AGAIN
    1311 000094e0     09c9          MOVI    800H,A9
         000094f0     0800  
    1312 00009500                   CREATE  SKYPID,SKYUP            ;BRING UP THE SKY
    1313 00009580     09ac          MMFM    A12,A8,A9,A10,A11
         00009590     0f00  
    1314 000095a0                   CREATE  BGNDPID,BSCHKG          ;START THE SCROLL CHECKER
    1315 00009620                   DIE
    1316                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   36

    1317                    **************************************************************************
    1318                    *                                                                        *
    1319                    * ADJST2DOOR - ADJUST THE PLAYER TO THE GIVEN DOOR.                      *
    1320                    * A2 = PLAYER DATA                                                       *
    1321                    * A8 = PTR TO DOOR                                                       *
    1322                    *                                                                        *
    1323                    **************************************************************************
    1324 00009650           ADJST2DOOR
    1325 00009650     098f          MMTM    SP,A0,A1,A3,A4,A5,A6
         00009660     de00  
    1326 00009670     b640          MOVE    *A2(POBJ),A0,L
         00009680     00a0  
    1327 00009690     ca36          JRZ     ADJST2DXX               ;NO PLAYER EXISTS
    1328 000096a0     b644          MOVE    *A2(PLOBJ),A4,L
         000096b0     0120  
    1329                    
    1330 000096c0     b401          MOVE    *A0(OXPOS),A1,W
         000096d0     0090  
    1331 000096e0     b403          MOVE    *A0(OYPOS),A3,W
         000096f0     00b0  
    1332 00009700     2603          SLL     16,A3
    1333 00009710     ee61          MOVY    A3,A1
    1334 00009720     b483          MOVE    *A4(OXPOS),A3,W
         00009730     0090  
    1335 00009740     b485          MOVE    *A4(OYPOS),A5,W
         00009750     00b0  
    1336 00009760     2605          SLL     16,A5
    1337 00009770     eea3          MOVY    A5,A3
    1338 00009780     e261          SUBXY   A3,A1
    1339                    
    1340 00009790     b503          MOVE    *A8(OXPOS),A3,W
         000097a0     0090  
    1341 000097b0     b505          MOVE    *A8(OYPOS),A5,W
         000097c0     00b0  
    1342 000097d0     2605          SLL     16,A5
    1343 000097e0     eea3          MOVY    A5,A3
    1344                    
    1345 000097f0     0b23          ADDI    P1DOOROF,A3
         00009800 0028000a  
    1346 00009820     4c66          MOVE    A3,A6   
    1347                    
    1348 00009830     56a5          CLR     A5
    1349 00009840     ee65          MOVY    A3,A5
    1350 00009850     2603          SLL     16,A3
    1351 00009860     b2a4          MOVE    A5,*A4(OYVAL),L
         00009870     00a0  
    1352 00009880     b264          MOVE    A3,*A4(OXVAL),L
         00009890     0080  
    1353                            
    1354 000098a0     e026          ADDXY   A1,A6
    1355                    
    1356 000098b0     56a5          CLR     A5
    1357 000098c0     eec5          MOVY    A6,A5
    1358 000098d0     2606          SLL     16,A6
    1359 000098e0     b2a0          MOVE    A5,*A0(OYVAL),L
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   37

         000098f0     00a0  
    1360 00009900     b2c0          MOVE    A6,*A0(OXVAL),L
         00009910     0080  
    1361                    
    1362 00009920                   SWAP    A0,A4   
    1363 00009950     0d5f          CALLA   SETZPOS
         00009960 00000000! 
    1364 00009980                   SWAP    A0,A4
    1365                    
    1366 000099b0     b685          MOVE    *A4(OZVAL),A5,L         ;MATCH THE FOOT Z POSITION
         000099c0     00c0  
    1367 000099d0     1025          INC     A5                      ;TORSO ALWAYS ON TOP
    1368 000099e0     b2a0          MOVE    A5,*A0(OZVAL),L
         000099f0     00c0  
    1369 00009a00           ADJST2DXX
    1370 00009a00     09af          MMFM    SP,A0,A1,A3,A4,A5,A6
         00009a10     007b  
    1371 00009a20     0960          RETS
    1372                    
    1373                    **************************************************************************
    1374                    *                                                                        *
    1375                    * OLDBGND - POP THE PREVIOUS BGND                                        *
    1376                    * A8 = PTR TO DOOR                                                       *
    1377                    * A9 = PTR TO PLAYER                                                     *
    1378                    *                                                                        *
    1379                    **************************************************************************
    1380 00009a30           OLDBGND
    1381 00009a30     09c0          MOVI    BGNDPID,A0
         00009a40     0bac  
    1382 00009a50     b00d          MOVE    A0,*A13(PROCID),W       ;MAKE THIS A BACKGROUND DUDE
         00009a60     0020  
    1383 00009a70           OLDBGND1
    1384 00009a70     09c0          MOVI    4000H,A0
         00009a80     4000  
    1385 00009a90     4c01          MOVE    A0,A1
    1386 00009aa0     0d5f          CALLA   EXISTP                  ;WAVE END WAIT?
         00009ab0 00000000! 
    1387 00009ad0     ca07          JRZ     OLDBGND2                ;BR = NO
    1388 00009ae0                   SLOOP   1,OLDBGND1              ;GIVE THEM TIME TO COMPLETE
    1389 00009b50           OLDBGND2
    1390 00009b50     b521          MOVE    *A9(OID),A1,W
         00009b60     01a0  
    1391 00009b70     0b41          CMPI    P1OID,A1
         00009b80     efff  
    1392 00009b90     cb07          JRNE    OLDBGND3
    1393 00009ba0     09e9          MOVI    P1DATA,A9
         00009bb0 00000000! 
    1394 00009bd0     09eb          MOVI    P1CTRL,A11
         00009be0 00000000! 
    1395 00009c00     c009          JRUC    OLDBGND4
    1396 00009c10           OLDBGND3
    1397 00009c10     0b41          CMPI    P2OID,A1
         00009c20     dfff  
    1398 00009c30     cb06          JRNE    OLDBGND4
    1399 00009c40     09e9          MOVI    P2DATA,A9
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   38

         00009c50 00000000! 
    1400 00009c70     09eb          MOVI    P2CTRL,A11
         00009c80 00000000! 
    1401 00009ca0           OLDBGND4
    1402 00009ca0     5600          CLR     A0
    1403 00009cb0     09e1          MOVI    08000h,A1
         00009cc0 00008000  
    1404 00009ce0     0d5f          CALLA   KILALL                  ;KILL ALL PROCS, EXCEPT INDIES
         00009cf0 00000000! 
    1405 00009d10     0d3f          CALLR   KILLWAVE
         00009d20     f6eb  
    1406 00009d30                   SOUND1  MUSICOFF
    1407                    
    1408 00009d90     0d5f          CALLA   LAST2CLR
         00009da0 00000000! 
    1409 00009dc0     0d5f          CALLA   COLRSTRT                ;RESTART THE COLOR PROCS
         00009dd0 00000000! 
    1410 00009df0     09c0          MOVI    PUP,A0
         00009e00     0001  
    1411 00009e10     800b          MOVE    A0,*A11,W
    1412 00009e20     b720          MOVE    *A9(POBJ),A0,L
         00009e30     00a0  
    1413 00009e40     0d5f          CALLA   PULLSOBJ
         00009e50 00000000! 
    1414 00009e70     b720          MOVE    *A9(PLOBJ),A0,L
         00009e80     0120  
    1415 00009e90     0d5f          CALLA   PULLSOBJ
         00009ea0 00000000! 
    1416 00009ec0     1820          MOVK    1,A0
    1417 00009ed0     0580          MOVE    A0,@GAMERASE,W          ;ACTIVATE FULL SCREEN AUTO ERASE 
         00009ee0 00000000! 
    1418 00009f00     098c          MMTM    A12,A8,A9,A11
         00009f10     00d0  
    1419 00009f20     09c9          MOVI    5000H,A9
         00009f30     5000  
    1420 00009f40                   CREATE  SKYPID,SKYDOWN
    1421 00009fc0     0d3f          CALLR   GSOCOORD                ;GET SCREEN OBJECT COORDINATES
         00009fd0     0163  
    1422 00009fe0     1800          MOVK    32,A0
    1423 00009ff0                   JSRP    SCREXP32
    1424 0000a060                   SOUND1  ALLOFF
    1425 0000a0c0                   SOUND1  YAMOFF
    1426 0000a120                   SLEEP   1
    1427 0000a160     5600          CLR     A0
    1428 0000a170     09e1          MOVI    08000h,A1
         0000a180 00008000  
    1429 0000a1a0     0d5f          CALLA   KILALL                  ;KILL ALL PROCS, EXCEPT INDIES
         0000a1b0 00000000! 
    1430 0000a1d0     0d5f          CALLA   SYNCHALF
         0000a1e0 00000000! 
    1431 0000a200     0d5f          CALLA   SYNCFULL
         0000a210 00000000! 
    1432 0000a230     5600          CLR     A0
    1433 0000a240     0580          MOVE    A0,@DISPLAYON,W
         0000a250 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   39

    1434 0000a270     5600          CLR     A0
    1435 0000a280     0580          MOVE    A0,@GAMERASE,W
         0000a290 00000000! 
    1436 0000a2b0     0d5f          CALLA   AUTOEOFF
         0000a2c0 00000000! 
    1437 0000a2e0     0d5f          CALLA   WRAMINIT                ;INITIALIZE WAVE RAM
         0000a2f0 00000000! 
    1438 0000a310     0d5f          CALLA   DMAQWAIT
         0000a320 00000000! 
    1439 0000a340     0d3f          CALLR   POPBGND
         0000a350     fc8b  
    1440 0000a360                   PUSHP   A10
    1441 0000a370     07aa          MOVE    @SCRNTL,A10,L
         0000a380 00000000! 
    1442 0000a3a0     07ab          MOVE    @SCRNLR,A11,L           ;PRESERVE
         0000a3b0 00000000! 
    1443 0000a3d0     07b0          MOVE    @BAK2TLX,B0,L
         0000a3e0 00000000! 
    1444 0000a400     07b1          MOVE    @BAK2TLY,B1,L
         0000a410 00000000! 
    1445 0000a430     07b2          MOVE    @WORLDTLX,B2,L
         0000a440 00000000! 
    1446 0000a460     07b3          MOVE    @WORLDTLY,B3,L
         0000a470 00000000! 
    1447 0000a490     0d5f          CALLA   MYOINIT                 ;RE-INITIALIZE FOR GOOD MEASURE
         0000a4a0 00000000! 
    1448 0000a4c0     078a          MOVE    A10,@SCRNTL,L           ;RESTORE
         0000a4d0 00000000! 
    1449 0000a4f0     078b          MOVE    A11,@SCRNLR,L
         0000a500 00000000! 
    1450 0000a520     0790          MOVE    B0,@BAK2TLX,L
         0000a530 00000000! 
    1451 0000a550     0791          MOVE    B1,@BAK2TLY,L
         0000a560 00000000! 
    1452 0000a580     0792          MOVE    B2,@WORLDTLX,L
         0000a590 00000000! 
    1453 0000a5b0     0793          MOVE    B3,@WORLDTLY,L
         0000a5c0 00000000! 
    1454 0000a5e0     2e12          SRL     16,B2
    1455 0000a5f0     ee72          MOVY    B3,B2
    1456 0000a600     0792          MOVE    B2,@WORLDTL,L           ;STUFF THE PACKED ONE FOR SCRTST
         0000a610 00000000! 
    1457 0000a630                   PULLP   A10
    1458 0000a650     09ac          MMFM    A12,A8,A9,A11
         0000a660     0b00  
    1459 0000a670     5600          CLR     A0
    1460 0000a680     800b          MOVE    A0,*A11,W
    1461 0000a690                   SLEEP   1
    1462 0000a6d0     0d3f          CALLR   RESTOBJS                ;RESTORE THE ENEMIES
         0000a6e0     0065  
    1463 0000a6f0     0d5f          CALLA   TESTDISP                ;FIRE OFF THE NORMAL PROCS
         0000a700 00000000! 
    1464 0000a720     0d5f          CALLA   COLRSTRT                ;RESTART THE COLOR PROCS
         0000a730 00000000! 
    1465 0000a750     c000          JRUC    BGNDG
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   40

         0000a760     fd65  
    1466                    
    1467                    **************************************************************************
    1468                    *                                                                        *
    1469                    * SAVEOBJS - SAVE OBJECTS ON THE OBJECT LIST ACCORDING TO                *
    1470                    *               OSAVETAB.                                                *
    1471                    *                                                                        *
    1472                    **************************************************************************
    1473 0000a770           SAVEOBJS
    1474 0000a770     098f          MMTM    SP,A0,A1
         0000a780     c000  
    1475 0000a790     09e0          MOVI    OBJLST,A0               ;LET US TRAVERSE THE OBJECT LIST
         0000a7a0 00000000! 
    1476 0000a7c0     09c1          MOVI    NSAVOBJS,A1
         0000a7d0     0032  
    1477 0000a7e0           SAVOBJLP
    1478 0000a7e0     8600          MOVE    *A0,A0,L
    1479 0000a7f0     ca09          JRZ     SAVOBJX
    1480 0000a800     0d3f          CALLR   SAVEIT_P                ;SAVEABLE?
         0000a810     000d  
    1481 0000a820     cafb          JRZ     SAVOBJLP
    1482 0000a830     0d3f          CALLR   SAVEIT                  ;YES
         0000a840     001f  
    1483 0000a850     3d01          DSJS    A1,SAVOBJLP
    1484 0000a860           SAVOBJXX
    1485 0000a860     09af          MMFM    SP,A0,A1
         0000a870     0003  
    1486 0000a880     0960          RETS
    1487 0000a890           SAVOBJX
    1488 0000a890     4c21          MOVE    A1,A1
    1489 0000a8a0     cafb          JRZ     SAVOBJXX                ;NO MORE OBJECT SPACE
    1490 0000a8b0           SAVOBJ0L
    1491 0000a8b0     0d3f          CALLR   SAVEIT0                 ;SAVE A NULL ENTRY
         0000a8c0     0034  
    1492 0000a8d0     3c61          DSJS    A1,SAVOBJ0L     
    1493 0000a8e0     c0f7          JRUC    SAVOBJXX
    1494                    
    1495                    **************************************************************************
    1496                    *                                                                        *
    1497                    * SAVEIT_P - IS THIS OBJECT SAVEABLE ON THE OBJECT STACK                 *
    1498                    * A0 = PTR TO OBJECT                                                     *
    1499                    * RETURNS:                                                               *
    1500                    *       Z BIT SET = NOT SAVEABLE                                         *
    1501                    *       Z BIT CLR = SAVEABLE                                             *
    1502                    *                                                                        *
    1503                    **************************************************************************
    1504 0000a8f0           SAVEIT_P
    1505 0000a8f0     098f          MMTM    SP,A1,A2,A3
         0000a900     7000  
    1506 0000a910     09e1          MOVI    OSAVETAB,A1
         0000a920 0000b0e0' 
    1507 0000a940     b402          MOVE    *A0(OID),A2,W
         0000a950     01a0  
    1508 0000a960     2f82          SRL     4,A2
    1509 0000a970     2482          SLL     4,A2                    ;STRIP SUB-TYPE
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   41

    1510 0000a980           SAVITPLP
    1511 0000a980     9423          MOVE    *A1+,A3,W               ;GET THE OBJECT I.D.
    1512 0000a990     ca07          JRZ     SAVITPX
    1513 0000a9a0     2f83          SRL     4,A3
    1514 0000a9b0     2483          SLL     4,A3
    1515 0000a9c0     4862          CMP     A3,A2                   ;MATCH? 
    1516 0000a9d0     ca02          JREQ    SAVITFND                ;YES
    1517 0000a9e0     1001          ADDK    32,A1                   ;SKIP PAST ROUTINE
    1518 0000a9f0     c0f8          JRUC    SAVITPLP
    1519 0000aa00           SAVITFND
    1520 0000aa00     4c42          MOVE    A2,A2                   ;CLR Z BIT
    1521 0000aa10           SAVITPX
    1522 0000aa10     09af          MMFM    SP,A1,A2,A3
         0000aa20     000e  
    1523 0000aa30     0960          RETS
    1524                    
    1525                    **************************************************************************
    1526                    *                                                                        *
    1527                    * SAVEIT - SAVE AN OBJECT ON THE OBJECT STACK                            *
    1528                    * A0 = PTR TO THE OBJECT                                                 *
    1529                    *                                                                        *
    1530                    **************************************************************************
    1531 0000aa40           SAVEIT
    1532 0000aa40     098f          MMTM    SP,A1,A2,A3,A14
         0000aa50     7002  
    1533 0000aa60     07ae          MOVE    @OBJSTAKP,A14,L         ;GET THE OBJECT STACK PTR
         0000aa70 00000000! 
    1534 0000aa90     0b6e          CMPI    OBJSTAKE,A14
         0000aaa0 ffffffff! 
    1535 0000aac0     c211          JRLS    SAVEITX                 ;BR = NO MORE ROOM ON STACK
    1536 0000aad0     b401          MOVE    *A0(OXPOS),A1,W
         0000aae0     0090  
    1537 0000aaf0     b402          MOVE    *A0(OYPOS),A2,W
         0000ab00     00b0  
    1538 0000ab10     2602          SLL     16,A2
    1539 0000ab20     ee41          MOVY    A2,A1                   ;A1 = [Y,X] POSITION
    1540 0000ab30     b402          MOVE    *A0(OID),A2,W
         0000ab40     01a0  
    1541 0000ab50     b403          MOVE    *A0(OZPOS),A3,W
         0000ab60     00d0  
    1542 0000ab70     2602          SLL     16,A2
    1543 0000ab80     ec62          MOVX    A3,A2                   ;A2 = [OID,ZPOS]
    1544 0000ab90     098e          MMTM    A14,A1,A2               ;STORE THIS GIBBERISH
         0000aba0     6000  
    1545 0000abb0     078e          MOVE    A14,@OBJSTAKP,L         ;AND THE OBJSTACK POINTER
         0000abc0 00000000! 
    1546 0000abe0           SAVEITX
    1547 0000abe0     09af          MMFM    SP,A1,A2,A3,A14
         0000abf0     400e  
    1548 0000ac00     0960          RETS
    1549                    
    1550                    **************************************************************************
    1551                    *                                                                        *
    1552                    * SAVEIT0 - SAVE A NULL OBJECT ON THE OBJECT STACK                       *
    1553                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   42

    1554                    **************************************************************************
    1555 0000ac10           SAVEIT0
    1556 0000ac10     098f          MMTM    SP,A1,A2,A14
         0000ac20     6002  
    1557 0000ac30     07ae          MOVE    @OBJSTAKP,A14,L         ;GET THE OBJECT STACK PTR
         0000ac40 00000000! 
    1558 0000ac60     0b6e          CMPI    OBJSTAKE,A14
         0000ac70 ffffffff! 
    1559 0000ac90     c207          JRLS    SAVEIT0X                ;BR = NO MORE ROOM ON STACK
    1560 0000aca0     5621          CLR     A1
    1561 0000acb0     5642          CLR     A2
    1562 0000acc0     098e          MMTM    A14,A1,A2               ;STORE THIS GIBBERISH
         0000acd0     6000  
    1563 0000ace0     078e          MOVE    A14,@OBJSTAKP,L         ;AND THE OBJSTACK POINTER
         0000acf0 00000000! 
    1564 0000ad10           SAVEIT0X
    1565 0000ad10     09af          MMFM    SP,A1,A2,A14
         0000ad20     4006  
    1566 0000ad30     0960          RETS
    1567                    
    1568                    **************************************************************************
    1569                    *                                                                        *
    1570                    * RESTOBJS - RESTORE SAVED OBJECTS                                       *
    1571                    *                                                                        *
    1572                    **************************************************************************
    1573 0000ad40           RESTOBJS
    1574 0000ad40     098f          MMTM    SP,A1,A4,A5,A6,A12,A14
         0000ad50     4e0a  
    1575 0000ad60     07ac          MOVE    @OBJSTAKP,A12,L         ;GET THE OBJECT STACK POINTER
         0000ad70 00000000! 
    1576 0000ad90     09c1          MOVI    NSAVOBJS,A1
         0000ada0     0032  
    1577 0000adb0           RESTOBJL
    1578 0000adb0     0b6c          CMPI    OBJSTAKS,A12
         0000adc0 ffffffff! 
    1579 0000ade0     c915          JRHS    RESTOBJX                ;ALL OUT OF STACK SPACE, HMMM
    1580 0000adf0     09ac          MMFM    A12,A5,A6
         0000ae00     0060  
    1581 0000ae10     eece          MOVY    A6,A14
    1582 0000ae20     0526          ZEXT    A6
    1583 0000ae30     2e0e          SRL     16,A14
    1584 0000ae40     0d3f          CALLR   GOBJCOLD                ;GET THE OBJECTS COLD START ROUTINE
         0000ae50     0014  
    1585 0000ae60     ca0c          JRZ     RESTOCNF                ;NO ROUTINE WAS FOUND
    1586 0000ae70     098f          MMTM    SP,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14
         0000ae80     7ffe  
    1587 0000ae90     099f          MMTM    SP,B0,B1,B2,B3,B4
         0000aea0     f800  
    1588 0000aeb0     1a01          MOVK    10H,A1                  ;JUST CREATE ONE OF THESE
    1589 0000aec0     2601          SLL     16,A1                   
    1590 0000aed0     ee2e          MOVY    A1,A14
    1591 0000aee0     0924          CALL    A4
    1592 0000aef0     09bf          MMFM    SP,B0,B1,B2,B3,B4
         0000af00     001f  
    1593 0000af10     09af          MMFM    SP,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   43

         0000af20     7ffe  
    1594 0000af30           RESTOCNF
    1595 0000af30     3f21          DSJS    A1,RESTOBJL
    1596 0000af40           RESTOBJX
    1597 0000af40     078c          MOVE    A12,@OBJSTAKP,L
         0000af50 00000000! 
    1598 0000af70     09af          MMFM    SP,A1,A4,A5,A6,A12,A14
         0000af80     5072  
    1599 0000af90     0960          RETS
    1600                            
    1601                    **************************************************************************
    1602                    *                                                                        *
    1603                    * GOBJCOLD - GET AN OBJECTS COLD START ROUTINE FROM OSAVETAB             *
    1604                    * A14 = OID                                                              *
    1605                    * RETURNS:                                                               *
    1606                    *       Z BIT SET = NO ROUTINE FOUND, A4 = UNDEFINED                     *
    1607                    *       Z BIT CLR = ROUTINE FOUND, A4 = ROUTINE ADDRESS                  *
    1608                    *                                                                        *
    1609                    **************************************************************************
    1610 0000afa0           GOBJCOLD
    1611 0000afa0     098f          MMTM    SP,A0,A1,A14
         0000afb0     c002  
    1612 0000afc0     2f8e          SRL     4,A14
    1613 0000afd0     248e          SLL     4,A14
    1614 0000afe0     050e          SEXT    A14
    1615 0000aff0     09e1          MOVI    OSAVETAB,A1
         0000b000 0000b0e0' 
    1616 0000b020           GOBJCLP
    1617 0000b020     9420          MOVE    *A1+,A0,W
    1618 0000b030     ca07          JRZ     GOBJCX
    1619 0000b040     2f80          SRL     4,A0
    1620 0000b050     2480          SLL     4,A0
    1621 0000b060     480e          CMP     A0,A14
    1622 0000b070     ca02          JREQ    GOBJCFND
    1623 0000b080     1001          ADDK    32,A1
    1624 0000b090     c0f8          JRUC    GOBJCLP
    1625 0000b0a0           GOBJCFND
    1626 0000b0a0     8624          MOVE    *A1,A4,L        
    1627 0000b0b0           GOBJCX
    1628 0000b0b0     09af          MMFM    SP,A0,A1,A14
         0000b0c0     4003  
    1629 0000b0d0     0960          RETS
    1630                    
    1631                    *
    1632                    *TABLE OF OBJECTS THAT CAN BE SAVED UPON ROOM ENTRY
    1633                    *       .WORD   OID(SUB_TYPE IS IGNORED)
    1634                    *       .LONG   COLD START ROUTINE
    1635                    *       .WORD   0 TERMINATOR
    1636 0000b0e0           OSAVETAB
    1637 0000b0e0     0e00          .WORD   BUGEOID
    1638 0000b0f0 00000000!         .LONG   BUGCOLD
    1639 0000b110     0e10          .WORD   LOFOID
    1640 0000b120 00000000!         .LONG   LOFCOLD
    1641 0000b140     0e20          .WORD   GANGEOID
    1642 0000b150 00000000!         .LONG   GANGCOLD
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   44

    1643 0000b170     0e30          .WORD   PIMPEOID
    1644 0000b180 00000000!         .LONG   PIMPCOLD
    1645 0000b1a0     0e40          .WORD   HYPOEOID
    1646 0000b1b0 00000000!         .LONG   HYPOCOLD
    1647 0000b1d0     0e50          .WORD   DUMPOID
    1648 0000b1e0 00000000!         .LONG   DUMPCOLD
    1649 0000b200     0e60          .WORD   CLOWNOID
    1650 0000b210 00000000!         .LONG   CLWNCOLD
    1651 0000b230     0e70          .WORD   DOGOID
    1652 0000b240 00000000!         .LONG   DOGCOLD
    1653 0000b260     0eb0          .WORD   HOOKEOID
    1654 0000b270 00000000!         .LONG   HOOKCOLD
    1655 0000b290     0ea0          .WORD   MBIGEOID
    1656 0000b2a0 00000000!         .LONG   MBIGCOLD
    1657 0000b2c0     0e80          .WORD   RAMBEOID
    1658 0000b2d0 00000000!         .LONG   RAMBCOLD
    1659 0000b2f0     0000          .WORD   0
    1660                    **************************************************************************
    1661                    *                                                                        *
    1662                    * LAST2E0EF - FILL THE LAST TWO LINES OF THE BIT MAP WITH                *
    1663                    *           E0 - EF REPEATING                                            *
    1664                    *                                                                        *
    1665                    **************************************************************************
    1666 0000b300           LAST2E0EF
    1667 0000b300     098f          MMTM    SP,A1,A2,A3,A6
         0000b310     7200  
    1668 0000b320     05a6          MOVE    @DISPLAYON,A6,W
         0000b330 00000000! 
    1669 0000b350     5621          CLR     A1
    1670 0000b360     0581          MOVE    A1,@DISPLAYON,W
         0000b370 00000000! 
    1671 0000b390     0d5f          CALLA   DMAQWAIT                        ;WAIT ON DMA QUEUES
         0000b3a0 00000000! 
    1672 0000b3c0     5621          CLR     A1
    1673 0000b3d0     0581          MOVE    A1,@CMAPSEL,W
         0000b3e0 01a80080  
    1674 0000b400     09e1          MOVI    510*1000H,A1
         0000b410 001fe000  
    1675 0000b430     09c2          MOVI    1024,A2
         0000b440     0400  
    1676 0000b450           LAST2E0R        
    1677 0000b450     09c3          MOVI    0E0H,A3
         0000b460     00e0  
    1678 0000b470           LAST2E0L
    1679 0000b470     0b43          CMPI    0EFH,A3
         0000b480     ff10  
    1680 0000b490     c7fb          JRGT    LAST2E0R
    1681 0000b4a0     8c61          MOVB    A3,*A1
    1682 0000b4b0     1101          ADDK    8,A1
    1683 0000b4c0     1023          INC     A3
    1684 0000b4d0     3ce2          DSJS    A2,LAST2E0L
    1685 0000b4e0     0586          MOVE    A6,@DISPLAYON,W
         0000b4f0 00000000! 
    1686 0000b510     09af          MMFM    SP,A1,A2,A3,A6
         0000b520     004e  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   45

    1687 0000b530     0960          RETS
    1688                    
    1689                    **************************************************************************
    1690                    *                                                                        *
    1691                    * SETOWIN - SET SCREEN WINDOW TO THE BE THE BOUNDING BOX OF AN OBJECT.   *
    1692                    * A8 = PTR TO OBJECT                                                     *
    1693                    *                                                                        *
    1694                    **************************************************************************
    1695 0000b540           SETOWIN
    1696 0000b540     098f          MMTM    SP,A10,A11
         0000b550     0030  
    1697 0000b560     0d3f          CALLR   GSOCOORD
         0000b570     0009  
    1698 0000b580     078a          MOVE    A10,@SCRNTL,L           ;THESE BECOME WINDOW TOP LEFT
         0000b590 00000000! 
    1699 0000b5b0     078b          MOVE    A11,@SCRNLR,L
         0000b5c0 00000000! 
    1700 0000b5e0     09af          MMFM    SP,A10,A11
         0000b5f0     0c00  
    1701 0000b600     0960          RETS
    1702                    
    1703                    **************************************************************************
    1704                    *                                                                        *
    1705                    * GSOCOORD - GET SCREEN COORDS UL AND LR OF AN OBJECT                    *
    1706                    * A8 = PTR TO OBJECT                                                     *
    1707                    * RETURNS:                                                               *
    1708                    * A10 = UL                                                               *
    1709                    * A11 = LR                                                               *
    1710                    *                                                                        *
    1711                    **************************************************************************
    1712 0000b610           GSOCOORD
    1713 0000b610     098f          MMTM    SP,A0,A1,A2
         0000b620     e000  
    1714 0000b630     4d00          MOVE    A8,A0
    1715 0000b640     0d5f          CALLA   GSCRNREL                ;GET THE SCREEN RELATIVE COORDS.
         0000b650 00000000! 
    1716 0000b670     2e01          SRL     16,A1
    1717 0000b680     ee41          MOVY    A2,A1
    1718 0000b690     4c2a          MOVE    A1,A10
    1719 0000b6a0     b702          MOVE    *A8(OSIZE),A2,L
         0000b6b0     0140  
    1720 0000b6c0     e041          ADDXY   A2,A1
    1721 0000b6d0     4c2b          MOVE    A1,A11
    1722 0000b6e0     09af          MMFM    SP,A0,A1,A2
         0000b6f0     0007  
    1723 0000b700     0960          RETS
    1724                    **************************************************************************
    1725                    *                                                                        *
    1726                    * BBOFSCRN - EACH OBJECT IN THE BACKGROUND BLOCK LIST IS CHECKED TO      *
    1727                    *          SEE IF IT SHOULD GO ON OR OFF THE SCREEN, A 1 IN THE          *
    1728                    *          DATA AREA OF THE BLOCK MEANS IT IS ON SCREEN.                 *
    1729                    *                                                                        *
    1730                    **************************************************************************
    1731 0000b710           BBOFSCRN
    1732 0000b710     07a2          MOVE    @SCRNTL,A2,L
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   46

         0000b720 00000000! 
    1733 0000b740     07a3          MOVE    @SCRNLR,A3,L    ;GET THE SCREEN BOUNDRIES
         0000b750 00000000! 
    1734 0000b770     09e5          MOVI    [32,32],A5
         0000b780 00200020  
    1735 0000b7a0     e0a3          ADDXY   A5,A3
    1736 0000b7b0     e2a2          SUBXY   A5,A2           ;SET UP BUFFER
    1737 0000b7c0           BBOFS2
    1738 0000b7c0     09e1          MOVI    BBACTIVE,A1     ;GET THE BLOCKS
         0000b7d0 00000000! 
    1739                    
    1740 0000b7f0     8621  BBOFS3  MOVE    *A1,A1,L        ;GET NEXT
    1741 0000b800     ca2f          JREQ    BBOFS5          ;BR = THERE ARE NO MORE
    1742                    
    1743 0000b810     b628          MOVE    *A1(NPTR),A8,L  ;GET THE OBJECT PTR
         0000b820     0020  
    1744 0000b830     0d5f          CALLA   SCRTSTG
         0000b840 00000000! 
    1745 0000b860     cb18          JRNE    BBOFS4
    1746                    
    1747                    *OBJECT IS ON SCREEN, ATTEMPT TO ADD IT TO THE OBJECT LIST
    1748                    
    1749 0000b870     b420          MOVE    *A1(NDATA),A0,W
         0000b880     0040  
    1750 0000b890     cbf5          JRNE    BBOFS3                  ;BR = IT'S ALREADY ON SCREEN
    1751                    
    1752 0000b8a0     b700          MOVE    *A8(OIMG),A0,L
         0000b8b0     0180  
    1753 0000b8c0     b600          MOVE    *A0(ICMAP),A0,L         ;GET THE PALETTE TABLE
         0000b8d0     0060  
    1754 0000b8e0     0d5f          CALLA   GETBPAL                 ;NOW ALLOCATE A PALETTE
         0000b8f0 00000000! 
    1755 0000b910     caed          JRZ     BBOFS3                  ;NO PALETTE, DO NOT INSERT
    1756 0000b920     b008          MOVE    A0,*A8(OPAL),W          ;STUFF DA PALETTE
         0000b930     0160  
    1757                    
    1758 0000b940     1820          MOVK    1,A0
    1759 0000b950     b001          MOVE    A0,*A1(NDATA),W         ;FLAG IT ON SCREEN
         0000b960     0040  
    1760                    
    1761 0000b970     4d00          MOVE    A8,A0
    1762 0000b980     0d5f          CALLA   INSOBJ                  ;INSERT IT
         0000b990 00000000! 
    1763 0000b9b0     0d5f          calla   ADDSBOBJ                ;ADD IT TO THE SUPPLEMENTAL LIST
         0000b9c0 00000000! 
    1764 0000b9e0     c0e0          JRUC    BBOFS3
    1765                    
    1766                    *OBJECT IS OFF SCREEN, ATTEMPT TO REMOVE IT FROM THE OBJECT LIST
    1767 0000b9f0           BBOFS4
    1768 0000b9f0     b420          MOVE    *A1(NDATA),A0,W
         0000ba00     0040  
    1769 0000ba10     cadd          JREQ    BBOFS3                  ;BR = IT'S ALREADY OFFSCREEN
    1770                    
    1771 0000ba20     5600          CLR     A0
    1772 0000ba30     b001          MOVE    A0,*A1(NDATA),W         ;FLAG IT OFFSCREEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   47

         0000ba40     0040  
    1773 0000ba50     4d00          MOVE    A8,A0
    1774 0000ba60     0d5f          CALLA   DELPAL                  ;DELETE IT'S PALETTE
         0000ba70 00000000! 
    1775 0000ba90     0d5f          CALLA   DELSBOBJ                ;TAKE IT OFF OF THE SUPPLEMENTAL LIST
         0000baa0 00000000! 
    1776 0000bac0     0d5f          CALLA   PULLOBJ                 ;PULL IT OFF AND PUT IT IN LIMBO
         0000bad0 00000000! 
    1777 0000baf0     c0cf          JRUC    BBOFS3
    1778                    
    1779 0000bb00           BBOFS5
    1780 0000bb00     0d5f          calla   BGND_UD1                                                 
         0000bb10 0000f7f0' 
    1781 0000bb30     0d5f          calla   BGND_UD2                ;UPDATE BGND WITH TODD           
         0000bb40 0000fa90' 
    1782 0000bb60     07c0          MOVE    @WORLDTL,@PREVWTL,L     ;SAVE THESE
         0000bb70 00000000! 
         0000bb90 00000040- 
    1783 0000bbb0     07c0          MOVE    @SCRNTL,@PREVSTL,L
         0000bbc0 00000000! 
         0000bbe0 00000060- 
    1784                    ****    MOVE    @SCRNLR,@PREVSLR,L
    1785 0000bc00           BBOFSL
    1786 0000bc00                   SLEEP   1
    1787                    *DETERMINE IF ENOUGH CHANGE HAS OCCURED TO MERIT UPDATE
    1788 0000bc40     1942          MOVK    10,A2                   ;YES, IT'S BUFFER MAN
    1789 0000bc50     07a0          MOVE    @WORLDTL,A0,L           ;CHECK WORLDTL DELTA Y,X
         0000bc60 00000000! 
    1790 0000bc80     07a1          MOVE    @PREVWTL,A1,L
         0000bc90 00000040- 
    1791 0000bcb0     e201          SUBXY   A0,A1
    1792 0000bcc0     ee20          MOVY    A1,A0
    1793 0000bcd0     0521          ZEXT    A1
    1794 0000bce0     2a00          SRA     16,A0
    1795 0000bcf0     0380          ABS     A0
    1796 0000bd00     0381          ABS     A1
    1797 0000bd10     4840          CMP     A2,A0
    1798 0000bd20     c39e          JRHI    BBOFSCRN                ;ENOUGH DELTA Y
    1799 0000bd30     4841          CMP     A2,A1
    1800 0000bd40     c39c          JRHI    BBOFSCRN                ;ENOUGH DELTA X
    1801 0000bd50     07a0          MOVE    @SCRNTL,A0,L            ;CHECK SCRNTL DELTA Y,X
         0000bd60 00000000! 
    1802 0000bd80     07a1          MOVE    @PREVSTL,A1,L
         0000bd90 00000060- 
    1803 0000bdb0     e201          SUBXY   A0,A1
    1804 0000bdc0     ee20          MOVY    A1,A0
    1805 0000bdd0     0521          ZEXT    A1
    1806 0000bde0     2a00          SRA     16,A0
    1807 0000bdf0     0380          ABS     A0
    1808 0000be00     0381          ABS     A1
    1809 0000be10     4840          CMP     A2,A0
    1810 0000be20     c38e          JRHI    BBOFSCRN                ;ENOUGH DELTA Y
    1811 0000be30     4841          CMP     A2,A1
    1812 0000be40     c38c          JRHI    BBOFSCRN                ;ENOUGH DELTA X
    1813                    *RE-INSERT THE FOLLOWING CODE ONLY IF SCRNLR CHANGES AT A GROSSLY
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   48

    1814                    *DIFFERENT RATE THAN SCRNTL
    1815                    ****    MOVE    @SCRNLR,A0,L            ;CHECK SCRNLR DELTA Y,X
    1816                    ****    MOVE    @PREVSLR,A1,L
    1817                    ****    SUBXY   A0,A1
    1818                    ****    MOVY    A1,A0
    1819                    ****    ZEXT    A1
    1820                    ****    SRA     16,A0
    1821                    ****    ABS     A0
    1822                    ****    ABS     A1
    1823                    ****    CMP     A2,A0
    1824                    ****    JRHI    BBOFSCRN                ;ENOUGH DELTA Y
    1825                    ****    CMP     A2,A1
    1826                    ****    JRHI    BBOFSCRN                ;ENOUGH DELTA X
    1827                    
    1828 0000be50     c0da          JRUC    BBOFSL  
    1829                    
    1830                    **************************************************************************
    1831                    *                                                                        *
    1832                    * ISBAK2 - CHECK TO SEE IF SECONDARY BACKGROUND EXISTS                   *
    1833                    * RETURNS                                                                *
    1834                    * CARRY CLEAR = NO                                                       *
    1835                    * CARRY SET   = YES                                                      *
    1836                    *                                                                        *
    1837                    **************************************************************************
    1838 0000be60           ISBAK2
    1839 0000be60                   PUSH    A0
    1840 0000be70     07a0          MOVE    @BAK2MODS,A0,L
         0000be80 00000000! 
    1841 0000bea0     8600          MOVE    *A0,A0,L
    1842 0000beb0     1020          INC     A0
    1843 0000bec0     cb04          JRNZ    ISBAK2Y
    1844 0000bed0     0320          CLRC
    1845 0000bee0                   PULL    A0
    1846 0000bf00     0960          RETS
    1847 0000bf10           ISBAK2Y
    1848 0000bf10     0de0          SETC
    1849 0000bf20                   PULL    A0
    1850 0000bf40     0960          RETS
    1851                    
    1852                    **************************************************************************
    1853                    *                                                                        *
    1854                    * BSCHK - BACKGROUND SCROLL CHECK AGAINST THE PLAYERS.                   *
    1855                    *         SETS THE GLOBAL FLAG UNIVEND AND DIES                          *
    1856                    *         WHEN THE END IS DETECTED.                                      *
    1857                    *         OH YEAH, THIS SHOULD BE JUMPED TO BY ANY START OF GAME         *
    1858                    *         EFFECT. IT WILL SET THE GAMSTATE TO INPLAY                     *
    1859                    * A9 = ENDING UNIVERSE X COORDINATE, 32 BITS                             *
    1860                    *                                                                        *
    1861                    **************************************************************************
    1862              003c  BRESETIM .EQU   3CH
    1863 0000bf50           BSCHK
    1864 0000bf50     09c0          MOVI    BGNDPID,A0
         0000bf60     0bac  
    1865 0000bf70     b00d          MOVE    A0,*A13(PROCID),W       ;MAKE SURE THE SHOE FITS
         0000bf80     0020  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   49

    1866 0000bf90                   CREATE  MASTERID,MASTERDP       ;MASTER DISPATCHER
    1867 0000c010     09c0          MOVI    INPLAY,A0
         0000c020     0020  
    1868 0000c030     0580          MOVE    A0,@GAMSTATE,W          ;START YOUR ENGINES
         0000c040 00000000! 
    1869 0000c060           BSCHKG
    1870 0000c060     5600          CLR     A0
    1871 0000c070     b00d          MOVE    A0,*A13(PDATA),W        ;CLEAR EDGE RESET COUNTER
         0000c080     0060  
    1872 0000c090     09ea          MOVI    P1DATA,A10              ;INDEX INTO PLAYER ONE DATA      
         0000c0a0 00000000! 
    1873 0000c0c0     09eb          MOVI    P2DATA,A11                                               
         0000c0d0 00000000! 
    1874 0000c0f0     05b1          MOVE    @UNIVENDX,B1,W
         0000c100 00000000! 
    1875 0000c120     2611          SLL     16,B1
    1876 0000c130           BSCHK1 
    1877 0000c130     4e39          MOVE    B1,A9                                            
    1878 0000c140           BSCHK1A
    1879 0000c140                   SLEEP   1                       ;WE DON'T WANT TO MISS A TRICK
    1880 0000c180     b5a0          MOVE    *A13(PDATA),A0,W
         0000c190     0060  
    1881 0000c1a0     ca03          JRZ     BSCHKNTR                ;THE TIMER IS NOT SET
    1882 0000c1b0     1420          DEC     A0                      ;KNOCK THE TIMER DOWN
    1883 0000c1c0     b00d          MOVE    A0,*A13(PDATA),W        
         0000c1d0     0060  
    1884 0000c1e0           BSCHKNTR
    1885 0000c1e0     4f21          MOVE    A9,B1                   ;STORAGE FOR THIS DURING EXECUTION       
    1886                    
    1887 0000c1f0     05a0          MOVE    @BUYNOW,A0,W
         0000c200 00000000! 
    1888 0000c220     cb09          JRNZ    BSCHKSS                 ;SCROLL STOPPER ON BUY-IN WINDOW
    1889                    
    1890 0000c230     05a0          MOVE    @XSCROLLS,A0,W
         0000c240 00000000! 
    1891 0000c260     ca0b          JRZ     BSCHKNXS                ;NO X SCROLL STOPPER
    1892 0000c270     05a6          MOVE    @WORLDTLX+16,A6,W
         0000c280 00000010! 
    1893 0000c2a0     4806          CMP     A0,A6
    1894 0000c2b0     c406          JRLT    BSCHKNXS                ;NOT TIME TO STOP YET
    1895 0000c2c0           BSCHKSS
    1896 0000c2c0     0d3f          CALLR   BSCHKLPEQ
         0000c2d0     0160  
    1897 0000c2e0     0d5f          CALLA   BSTOPX
         0000c2f0 0000da50' 
    1898 0000c310     c0e2          JRUC    BSCHK1A
    1899                    *
    1900                    *LET'S SCROLL SHALL WE
    1901 0000c320           BSCHKNXS
    1902 0000c320     0d5f          CALLA   GETSCRRX                ;GET THE SCREEN RIGHT EDGE
         0000c330 00000000! 
    1903 0000c350     4c06          MOVE    A0,A6                   ;STORE HERE
    1904                    
    1905 0000c360     b748          MOVE    *A10(POBJ),A8,L         ;LOAD PLAYER 1 OBLOCK PTR        
         0000c370     00a0  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   50

    1906 0000c380     b769          MOVE    *A11(POBJ),A9,L         ;NOW FOR PLAYER 2                
         0000c390     00a0  
    1907 0000c3a0     cb04          JRNE    BSCHK2                  ;BR = PLAYER 2 IS ACTIVE         
    1908 0000c3b0     4d08          MOVE    A8,A8                                                    
    1909 0000c3c0     cad6          JREQ    BSCHK1                  ;BOTH ARE DEAD,SO WAIT TO BE KIL 
    1910 0000c3d0     4d09          MOVE    A8,A9                   ;OTHERWISE MAKE HIM LOOK LIKE P1 
    1911 0000c3e0     c003          JRUC    BSCHK3                                                   
    1912 0000c3f0     4d08  BSCHK2  MOVE    A8,A8                   ;CHECK PLAYER 1          
    1913 0000c400     cb01          JRNE    BSCHK3                  ;BR = PLAYER 1 IS ACTIVE         
    1914 0000c410     4d28          MOVE    A9,A8                   ;OTHERWISE HE ISN'T              
    1915 0000c420           BSCHK3
    1916 0000c420     b500          MOVE    *A8(OXPOS),A0,W         ;PLAYER 1 X POSITION     
         0000c430     0090  
    1917 0000c440     b702          MOVE    *A8(OIMG),A2,L
         0000c450     0180  
    1918 0000c460     b442          MOVE    *A2(IANIOFFX),A2,W      ;APOINT ADJUSTMENT
         0000c470     0020  
    1919 0000c480     4040          ADD     A2,A0
    1920 0000c490     b521          MOVE    *A9(OXPOS),A1,W         ;PLAYER 2 X POSITION             
         0000c4a0     0090  
    1921 0000c4b0     b722          MOVE    *A9(OIMG),A2,L
         0000c4c0     0180  
    1922 0000c4d0     b442          MOVE    *A2(IANIOFFX),A2,W      ;ADJUST TO THE A POINT DUDE
         0000c4e0     0020  
    1923 0000c4f0     4041          ADD     A2,A1
    1924 0000c500     05a2          MOVE    @WORLDTL,A2,W           ;GET WORLD TOP LEFT X
         0000c510 00000000! 
    1925 0000c530     4440          SUB     A2,A0                   ;ADJUST PLAYER 1
    1926 0000c540     4441          SUB     A2,A1                   ;ADJUST PLAYER 2                                                
    1927                    
    1928 0000c550     b704          MOVE    *A8(OXVEL),A4,L         ;GET PLAYER 1 X VELOCITY
         0000c560     0040  
    1929 0000c570     0384          ABS     A4                      ;ALWAYS KEEP IT POSITIVE
    1930 0000c580     cb03          JRNZ    BSCHK3A 
    1931 0000c590     0b24          ADDI    [2,0],A4                ;MAKE SURE IT'S AT LEAST THREE
         0000c5a0 00020000  
    1932 0000c5c0           BSCHK3A
    1933 0000c5c0     b725          MOVE    *A9(OXVEL),A5,L         ;AND PLAYER 2 X VELOCITY
         0000c5d0     0040  
    1934 0000c5e0     0385          ABS     A5                      ;HERE TOO
    1935 0000c5f0     cb03          JRNZ    BSCHK3B
    1936 0000c600     0b25          ADDI    [2,0],A5
         0000c610 00020000  
    1937 0000c630           BSCHK3B
    1938 0000c630     05ae          MOVE    @SCRLBIAS,A14,W
         0000c640 00000000! 
    1939 0000c660     cb5a          JRNZ    BSCHKLB
    1940                    
    1941                    *RIGHT SCROLL, RIGHT BIAS
    1942 0000c670     09c7          MOVI    RBOUND,A7
         0000c680     0104  
    1943 0000c690     09c2          MOVI    PXMIN,A2
         0000c6a0     000a  
    1944 0000c6b0     48e0          CMP     A7,A0                   ;P1 HIT RIGHT SCROLL BOUNDRY?    
    1945 0000c6c0     c417          JRLT    BSCHK4                  ;BR = NO                         
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   51

    1946 0000c6d0     4841          CMP     A2,A1                   ;P2 ALL THE WAY LEFT?            
    1947 0000c6e0     c600          JRLE    BSCHKS                  ;BR = YES                        
         0000c6f0     00cf  
    1948 0000c700     4c43          MOVE    A2,A3                                                                    
    1949 0000c710     1003          ADDK    32,A3
    1950 0000c720     0d5f          CALLA   CHKRANGE
         0000c730 00000000! 
    1951 0000c750     c827          JRC     BSCHK4B                 ;BR = PLAYER 2 MAKING WAY OFF LEFT      
    1952                    
    1953 0000c760     48e1          CMP     A7,A1                   ;CHECK P2 
    1954 0000c770     c402          JRLT    BSCHK3C                 ;DON'T WORRY HE'S NO THREAT     
    1955                    
    1956 0000c780     48a4          CMP     A5,A4                   ;WHO'S BETTER? P1 OR P2
    1957 0000c790     c41b          JRLT    BSCHK4A                 ;BR = P2 VEL IS GREATER
    1958 0000c7a0           BSCHK3C
    1959 0000c7a0     4407          SUB     A0,A7
    1960 0000c7b0     0387          ABS     A7
    1961 0000c7c0     0b47          CMPI    20,A7
         0000c7d0     ffeb  
    1962 0000c7e0     c803          JRLO    BSCHK3D
    1963 0000c7f0     0b24          ADDI    [2,0],A4
         0000c800 00020000  
    1964 0000c820           BSCHK3D
    1965                    ***     MOVE    A4,@SCROLLX,L           ;STUFF THE SCROLL RATE
    1966                    ***     ADD     A4,A6
    1967 0000c820     c000          JRUC    BSCHK8                                                   
         0000c830     00a4  
    1968                    
    1969 0000c840           BSCHK4
    1970 0000c840     48e1          CMP     A7,A1                   ;P2 HIT RIGHT SCROLL BOUNDRY?    
    1971 0000c850     c41a          JRLT    BSCHK5                  ;BR = NO                         
    1972 0000c860     4840          CMP     A2,A0                   ;P1 ALL THE WAY LEFT?            
    1973 0000c870     c600          JRLE    BSCHKS                  ;BR = YES                        
         0000c880     00b6  
    1974 0000c890     4c43          MOVE    A2,A3                                                                    
    1975 0000c8a0     1003          ADDK    32,A3
    1976 0000c8b0                   SWAP    A0,A1
    1977 0000c8e0     0d5f          CALLA   CHKRANGE
         0000c8f0 00000000! 
    1978 0000c910                   SWAP    A0,A1
    1979 0000c940     c8ed          JRC     BSCHK3D                 ;BR = PLAYER 1 MAKING WAY OFF LEFT      
    1980                    
    1981 0000c950           BSCHK4A
    1982 0000c950     4427          SUB     A1,A7
    1983 0000c960     0387          ABS     A7
    1984 0000c970     0b47          CMPI    20,A7
         0000c980     ffeb  
    1985 0000c990     c803          JRLO    BSCHK4B
    1986 0000c9a0     0b25          ADDI    [2,0],A5
         0000c9b0 00020000  
    1987 0000c9d0           BSCHK4B
    1988 0000c9d0     4ca4          MOVE    A5,A4
    1989 0000c9e0     c000          JRUC    BSCHK8                                                   
         0000c9f0     0088  
    1990                                                                                             
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   52

    1991                    *LEFT SCROLL, RIGHT BIAS                                                 
    1992 0000ca00           BSCHK5
    1993 0000ca00     09c2          MOVI    RBOUND,A2
         0000ca10     0104  
    1994 0000ca20     4c43          MOVE    A2,A3
    1995 0000ca30     1402          SUBK    32,A2
    1996 0000ca40     1003          ADDK    32,A3                   ;WE MUST BUFFER THE RIGHT SIDE  
    1997                    
    1998 0000ca50     0b40          CMPI    LBOUND,A0               ;P1 HIT LEFT SCROLL BOUNDRY 
         0000ca60     ff0f  
    1999 0000ca70     c70c          JRGT    BSCHK6                  ;BR = NO                         
    2000                                                                                             
    2001 0000ca80     0d5f          CALLA   CHKRANGE
         0000ca90 00000000! 
    2002 0000cab0     c800          JRC     BSCHKS                  ;BR = P2 NEAR THE RIGHT BOUNDRY
         0000cac0     0092  
    2003                    
    2004 0000cad0     0b41          CMPI    LBOUND,A1               ;CHECK P2 
         0000cae0     ff0f  
    2005 0000caf0     c702          JRGT    BSCHK5A                 ;DON'T WORRY HE'S NO THREAT     
    2006                    
    2007 0000cb00     48a4          CMP     A5,A4                   ;WHO'S BETTER? P1 OR P2
    2008 0000cb10     c40c          JRLT    BSCHK6A                 ;BR = P2 VEL IS GREATER
    2009 0000cb20           BSCHK5A
    2010 0000cb20     03a4          NEG     A4                      ;WE MUST GO BACK HANS IS TRAPPED!!
    2011 0000cb30     c068          JRUC    BSCHK7                                                   
    2012 0000cb40           BSCHK6
    2013 0000cb40     0b41          CMPI    LBOUND,A1               ;P2 HIT LEFT SCROLL BOUN 
         0000cb50     ff0f  
    2014 0000cb60     c700          JRGT    BSCHKS                  ;BR = NO                         
         0000cb70     0087  
    2015                                                                                             
    2016 0000cb80     4c01          MOVE    A0,A1                   ;P2 POSITION DESTROYED HERE
    2017 0000cb90     0d5f          CALLA   CHKRANGE
         0000cba0 00000000! 
    2018 0000cbc0     c800          JRC     BSCHKS                  ;BR = P1 NEAR THE RIGHT BOUNDRY
         0000cbd0     0081  
    2019 0000cbe0           BSCHK6A
    2020 0000cbe0     03a5          NEG     A5
    2021 0000cbf0     4ca4          MOVE    A5,A4
    2022 0000cc00     c05b          JRUC    BSCHK7
    2023                    
    2024              0014  LSBUFFER .EQU   20                      ;SIZE OF LEFT SCROLL BUFFER
    2025                    *
    2026                    *LEFT SCROLL, LEFT BIAS
    2027 0000cc10           BSCHKLB
    2028 0000cc10     09c7          MOVI    LBOUND,A7
         0000cc20     00f0  
    2029                    ***     MOVE    A7,A2
    2030                    ***     MOVE    A2,A3
    2031                    ***     ADDK    LSBUFFER,A3
    2032                    ***     SWAP    A0,A1
    2033                    ***     CALLA   CHKRANGE                ;CHECK LBOUND BUFFER TO THE RIGHT
    2034                    ***     SWAP    A0,A1
    2035                    ***     JRC     BSCHKLBL                ;BR = HE'S IN IT
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   53

    2036 0000cc30     48e0          CMP     A7,A0                   ;NOW CHECK LBOUND TO LEFT SCREEN EDGE    
    2037 0000cc40     c71b          JRGT    BSCHKA                  ;BR = NO                         
    2038                    ***BSCHKLBL
    2039 0000cc50     09c3          MOVI    PXMAX-30,A3
         0000cc60     01d6  
    2040 0000cc70     4861          CMP     A3,A1                   ;P2 ALL THE WAY RIGHT?           
    2041 0000cc80     c576          JRGE    BSCHKS                  ;BR = YES                        
    2042                    
    2043 0000cc90     4c62          MOVE    A3,A2                                                                    
    2044 0000cca0     0be2          SUBI    64,A2
         0000ccb0     ffbf  
    2045 0000ccc0     0b03          ADDI    64,A3
         0000ccd0     0040  
    2046 0000cce0     0d5f          CALLA   CHKRANGE
         0000ccf0 00000000! 
    2047 0000cd10     c82b          JRC     BSCHKAB                 ;BR = PLAYER 2 MAKING WAY OFF RIGHT     
    2048                    
    2049 0000cd20     48e1          CMP     A7,A1                   ;CHECK P2 
    2050 0000cd30     c702          JRGT    BSCHK9C                 ;DON'T WORRY HE'S NO THREAT     
    2051                    
    2052 0000cd40     48a4          CMP     A5,A4                   ;WHO'S BETTER? P1 OR P2
    2053 0000cd50     c41f          JRLT    BSCHKAA                 ;BR = P2 VEL IS GREATER
    2054 0000cd60           BSCHK9C
    2055                    ***     ADDI    LSBUFFER-(LSBUFFER/2),A7
    2056 0000cd60     4407          SUB     A0,A7
    2057 0000cd70     0387          ABS     A7
    2058 0000cd80     0b47          CMPI    50,A7
         0000cd90     ffcd  
    2059 0000cda0     c203          JRLS    BSCHK9D
    2060 0000cdb0     0b24          ADDI    [2,0],A4
         0000cdc0 00020000  
    2061 0000cde0           BSCHK9D
    2062 0000cde0     03a4          NEG     A4
    2063 0000cdf0     c03c          JRUC    BSCHK7                                                   
    2064                    
    2065 0000ce00           BSCHKA
    2066                    ***     MOVE    A7,A2
    2067                    ***     MOVE    A2,A3
    2068                    ***     ADDK    LSBUFFER,A3
    2069                    ***     CALLA   CHKRANGE                ;P2 CHECK ON LBOUND BUFFER
    2070                    ***     JRC     BSCHKAL
    2071 0000ce00     48e1          CMP     A7,A1                   ;P2 HIT LEFT SCROLL BOUNDRY?     
    2072 0000ce10     c71e          JRGT    BSCHKB                  ;BR = NO                         
    2073 0000ce20           BSCHKAL
    2074 0000ce20     09c3          MOVI    PXMAX-30,A3
         0000ce30     01d6  
    2075 0000ce40     4860          CMP     A3,A0                   ;P1 ALL THE WAY RIGHT?           
    2076 0000ce50     c559          JRGE    BSCHKS                  ;BR = YES                        
    2077 0000ce60     4c62          MOVE    A3,A2                                                                    
    2078 0000ce70     0be2          SUBI    64,A2
         0000ce80     ffbf  
    2079 0000ce90     0b03          ADDI    64,A3
         0000cea0     0040  
    2080 0000ceb0                   SWAP    A0,A1
    2081 0000cee0     0d5f          CALLA   CHKRANGE
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   54

         0000cef0 00000000! 
    2082 0000cf10                   SWAP    A0,A1
    2083 0000cf40     c8e9          JRC     BSCHK9D                 ;BR = PLAYER 1 MAKING WAY OFF RIGHT     
    2084                    
    2085 0000cf50           BSCHKAA
    2086                    ***     ADDI    LSBUFFER-(LSBUFFER/2),A7
    2087 0000cf50     4427          SUB     A1,A7
    2088 0000cf60     0387          ABS     A7
    2089 0000cf70     0b47          CMPI    50,A7
         0000cf80     ffcd  
    2090 0000cf90     c203          JRLS    BSCHKAB
    2091 0000cfa0     0b25          ADDI    [2,0],A5
         0000cfb0 00020000  
    2092 0000cfd0           BSCHKAB
    2093 0000cfd0     4ca4          MOVE    A5,A4
    2094 0000cfe0     03a4          NEG     A4
    2095 0000cff0     c01c          JRUC    BSCHK7                                                   
    2096                                                                                             
    2097                    *RIGHT SCROLL CHECK, LEFT BIAS                                           
    2098 0000d000           BSCHKB
    2099 0000d000     09c2          MOVI    LBOUND,A2
         0000d010     00f0  
    2100 0000d020     4c43          MOVE    A2,A3
    2101 0000d030     1402          SUBK    32,A2
    2102 0000d040     1003          ADDK    32,A3                   ;WE MUST BUFFER THE LEFT SIDE   
    2103                    
    2104 0000d050     0b40          CMPI    RBOUND,A0               ;P1 HIT RIGHT SCROLL BOUNDRY 
         0000d060     fefb  
    2105 0000d070     c40a          JRLT    BSCHKC                  ;BR = NO                         
    2106                                                                                             
    2107 0000d080     0d5f          CALLA   CHKRANGE
         0000d090 00000000! 
    2108 0000d0b0     c833          JRC     BSCHKS                  ;BR = P2 NEAR THE RIGHT BOUNDRY
    2109                    
    2110 0000d0c0     0b41          CMPI    RBOUND,A1               ;CHECK P2 
         0000d0d0     fefb  
    2111 0000d0e0     c402          JRLT    BSCHKBA                 ;DON'T WORRY HE'S NO THREAT     
    2112                    
    2113 0000d0f0     48a4          CMP     A5,A4                   ;WHO'S BETTER? P1 OR P2
    2114 0000d100     c409          JRLT    BSCHKCA                 ;BR = P2 VEL IS GREATER
    2115 0000d110           BSCHKBA
    2116 0000d110     c016          JRUC    BSCHK8                                                   
    2117 0000d120           BSCHKC
    2118 0000d120     0b41          CMPI    RBOUND,A1               ;P2 HIT RIGHT SCROLL BOUNDRY
         0000d130     fefb  
    2119 0000d140     c42a          JRLT    BSCHKS                  ;BR = NO                         
    2120                                                                                             
    2121 0000d150     4c01          MOVE    A0,A1                   ;P2 POSITION DESTROYED HERE
    2122 0000d160     0d5f          CALLA   CHKRANGE
         0000d170 00000000! 
    2123 0000d190     c825          JRC     BSCHKS                  ;BR = P1 NEAR THE RIGHT BOUNDRY
    2124 0000d1a0           BSCHKCA
    2125 0000d1a0     4ca4          MOVE    A5,A4
    2126 0000d1b0     c00c          JRUC    BSCHK8
    2127                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   55

    2128                    *CHECK FOR UNIVERSE LEFT BOUNDRY HIT
    2129                    *A4 = SCROLL RATE TO STUFF IF O.K.
    2130 0000d1c0           BSCHK7
    2131 0000d1c0     05a3          MOVE    @UNIVSTX,A3,W
         0000d1d0 00000000! 
    2132 0000d1f0     0b03          ADDI    512,A3
         0000d200     0200  
    2133 0000d210     2603          SLL     16,A3
    2134 0000d220     44c3          SUB     A6,A3                   ;LEFT END OF UNIVERSE?
    2135 0000d230     c51b          JRGE    BSCHKS                  ;YES
    2136 0000d240     0784          MOVE    A4,@SCROLLX,L
         0000d250 00000000! 
    2137 0000d270     c01e          JRUC    BSCHKLPL
    2138                    ****BSCHK7A
    2139                    ****    MOVE    *A13(PDATA),A1,W
    2140                    ****    JRNZ    BSCHKS                  ;NO RESET ALLOWED 
    2141                    ****    MOVI    BRESETIM,A1
    2142                    ****    MOVE    A1,*A13(PDATA),W        ;INITIALIZE THE TIMER
    2143                    ****    MOVE    @WORLDTLX,A1,L          ;RESET
    2144                    ****    ADD     A3,A1
    2145                    ****    MOVE    A1,@WORLDTLX,L          ;RE-ADJUST THE LEFT X BOUNDRY
    2146                    ****    JRUC    BSCHK1
    2147                    *CHECK FOR UNIVERSE RIGHT BOUNDRY HIT
    2148                    *A4 = SCROLL RATE TO STUFF IF O.K.
    2149 0000d280           BSCHK8
    2150 0000d280     4e39          MOVE    B1,A9
    2151 0000d290     4d23          MOVE    A9,A3
    2152 0000d2a0     44c3          SUB     A6,A3                   ;RIGHT END OF UNIVERSE?
    2153 0000d2b0     c604          JRLE    BSCHK8A                 ;YES
    2154 0000d2c0     0784          MOVE    A4,@SCROLLX,L
         0000d2d0 00000000! 
    2155 0000d2f0     c02c          JRUC    BSCHKLPR                ;NO, THERE IS MORE SCROLLING TO DO
    2156 0000d300           BSCHK8A
    2157 0000d300     0383          ABS     A3
    2158                    ***     CMPI    [1,0],A3                ;BUFFER US OUT
    2159                    ***     JRLS    BSCHKS  
    2160 0000d310     b5a1          MOVE    *A13(PDATA),A1,W
         0000d320     0060  
    2161 0000d330     cb0b          JRNZ    BSCHKS                  ;NO RESET ALLOWED 
    2162 0000d340     09c1          MOVI    BRESETIM,A1
         0000d350     003c  
    2163 0000d360     b02d          MOVE    A1,*A13(PDATA),W        ;INITIALIZE THE TIMER
         0000d370     0060  
    2164 0000d380     07a1          MOVE    @WORLDTLX,A1,L          ;RESET
         0000d390 00000000! 
    2165 0000d3b0     4461          SUB     A3,A1
    2166 0000d3c0     0781          MOVE    A1,@WORLDTLX,L          ;RE-ADJUST THE RIGHT X BOUNDRY
         0000d3d0 00000000! 
    2167                    
    2168 0000d3f0     0d5f  BSCHKS  CALLA   BSTOP                   ;STOP THE BACKGROUND     
         0000d400 0000d990' 
    2169 0000d420     0d3f          CALLR   BSCHKLPEQ
         0000d430     004a  
    2170 0000d440     c000          JRUC    BSCHK1                                                   
         0000d450     fecd  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   56

    2171                    *CHECK FOR LESSER PLAYER IN THE LEFT DIRECTION                                                          
    2172 0000d460           BSCHKLPL
    2173 0000d460     4c23          MOVE    A1,A3
    2174 0000d470     4403          SUB     A0,A3
    2175 0000d480     ca29          JREQ    BSCHKPLG                ;PLAYERS ARE EQUAL
    2176 0000d490     0383          ABS     A3
    2177 0000d4a0     0b43          CMPI    40,A3
         0000d4b0     ffd7  
    2178 0000d4c0     c200          JRLS    BSCHK1                  ;DON'T ADJUST VELS
         0000d4d0     fec5  
    2179                    
    2180 0000d4e0     4801          CMP     A0,A1   
    2181 0000d4f0     c706          JRGT    BSCHKLPL2               ;PLAYER TWO IS BEHIND
    2182 0000d500     b743          MOVE    *A10(POBJ),A3,L
         0000d510     00a0  
    2183 0000d520     b663          MOVE    *A3(OXVEL),A3,L
         0000d530     0040  
    2184 0000d540     c11d          JRP     BSCHKPLG
    2185 0000d550     c020          JRUC    BSCHKLP1
    2186 0000d560           BSCHKLPL2
    2187 0000d560     b763          MOVE    *A11(POBJ),A3,L
         0000d570     00a0  
    2188 0000d580     b663          MOVE    *A3(OXVEL),A3,L
         0000d590     0040  
    2189 0000d5a0     c117          JRP     BSCHKPLG
    2190 0000d5b0     c026          JRUC    BSCHKLP2
    2191                    
    2192                    *CHECK FOR LESSER PLAYER IN THE RIGHT DIRECTION
    2193 0000d5c0           BSCHKLPR
    2194 0000d5c0     4c23          MOVE    A1,A3
    2195 0000d5d0     4403          SUB     A0,A3
    2196 0000d5e0     ca13          JREQ    BSCHKPLG                ;PLAYERS ARE EQUAL
    2197 0000d5f0     0383          ABS     A3
    2198 0000d600     0b43          CMPI    40,A3
         0000d610     ffd7  
    2199 0000d620     c200          JRLS    BSCHK1                  ;DON'T ADJUST VELS
         0000d630     feaf  
    2200                    
    2201 0000d640     4801          CMP     A0,A1   
    2202 0000d650     c706          JRGT    BSCHKLPR1               ;PLAYER ONE IS BEHIND
    2203 0000d660     b763          MOVE    *A11(POBJ),A3,L
         0000d670     00a0  
    2204 0000d680     b663          MOVE    *A3(OXVEL),A3,L
         0000d690     0040  
    2205 0000d6a0     ce07          JRN     BSCHKPLG
    2206 0000d6b0     c016          JRUC    BSCHKLP2
    2207 0000d6c0           BSCHKLPR1
    2208 0000d6c0     b743          MOVE    *A10(POBJ),A3,L
         0000d6d0     00a0  
    2209 0000d6e0     b663          MOVE    *A3(OXVEL),A3,L
         0000d6f0     0040  
    2210 0000d700     ce01          JRN     BSCHKPLG
    2211 0000d710     c004          JRUC    BSCHKLP1
    2212                    *EQUALIZE PLAYER'S VELS AND RETURN
    2213 0000d720           BSCHKPLG
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   57

    2214 0000d720     0d3f          CALLR   BSCHKLPEQ
         0000d730     001a  
    2215 0000d740     c000          JRUC    BSCHK1
         0000d750     fe9d  
    2216                    *
    2217                    *GIVE PLAYER 1 THE 1.5 X VELOCITY
    2218                    *A10 = P1DATA, A11 = P2DATA
    2219 0000d760           BSCHKLP1
    2220 0000d760     09e3          MOVI    PWXVEL+(PWXVEL/2),A3
         0000d770 00018000  
    2221 0000d790     b26a          MOVE    A3,*A10(PXVEL),L
         0000d7a0     0350  
    2222 0000d7b0     09e3          MOVI    PWXVEL,A3
         0000d7c0 00010000  
    2223 0000d7e0     b26b          MOVE    A3,*A11(PXVEL),L
         0000d7f0     0350  
    2224 0000d800     c000          JRUC    BSCHK1
         0000d810     fe91  
    2225                    *
    2226                    *GIVE PLAYER 2 THE 1.5 X VELOCITY
    2227                    *A10 = P1DATA, A11 = P2DATA
    2228 0000d820           BSCHKLP2
    2229 0000d820     09e3          MOVI    PWXVEL+(PWXVEL/2),A3
         0000d830 00018000  
    2230 0000d850     b26b          MOVE    A3,*A11(PXVEL),L
         0000d860     0350  
    2231 0000d870     09e3          MOVI    PWXVEL,A3
         0000d880 00010000  
    2232 0000d8a0     b26a          MOVE    A3,*A10(PXVEL),L
         0000d8b0     0350  
    2233 0000d8c0     c000          JRUC    BSCHK1
         0000d8d0     fe85  
    2234                    *
    2235                    *MAKE PLAYER VELOCITIES EQUAL 
    2236                    *A10 = P1DATA, A11 = P2DATA
    2237 0000d8e0           BSCHKLPEQ
    2238 0000d8e0                   PUSH    A3
    2239 0000d8f0     09e3          MOVI    PWXVEL,A3
         0000d900 00010000  
    2240 0000d920     b26b          MOVE    A3,*A11(PXVEL),L
         0000d930     0350  
    2241 0000d940     b26a          MOVE    A3,*A10(PXVEL),L
         0000d950     0350  
    2242 0000d960                   PULL    A3
    2243 0000d980     0960          RETS
    2244                    
    2245                    *
    2246                    *STOP THE BACKGROUND ALL TOGETHER
    2247 0000d990     0d5f  BSTOP   CALLA   BSTOPX
         0000d9a0 0000da50' 
    2248                    *STOP Y SCROLLING
    2249 0000d9c0           BSTOPY
    2250 0000d9c0                   PUSH    A0
    2251 0000d9d0     5600          CLR     A0
    2252 0000d9e0     0300          JRUC    BACKLY
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   58

    2253                    *
    2254                    *BACKGROUND VELOCITY LOADER
    2255                    *A0: DESIRED VELOCITY GOES TO SCROLLY
    2256 0000d9f0           BACKLY
    2257 0000d9f0     0780          MOVE    A0,@SCROLLY,L           ;STUFF THE SCROLL RATE
         0000da00 00000000! 
    2258 0000da20                   PULL    A0
    2259 0000da40     0960          RETS
    2260                    
    2261                    *STOP X SCROLLING
    2262 0000da50           BSTOPX
    2263 0000da50                   PUSH    A0
    2264 0000da60     5600          CLR     A0
    2265 0000da70     0300          JRUC    BACKLX
    2266                    *
    2267                    *BACKGROUND VELOCITY LOADER
    2268                    *A0: DESIRED VELOCITY GOES TO SCROLLX
    2269 0000da80           BACKLX
    2270 0000da80     0780          MOVE    A0,@SCROLLX,L           ;STUFF THE SCROLL RATE
         0000da90 00000000! 
    2271 0000dab0                   PULL    A0
    2272 0000dad0     0960          RETS
    2273                    
    2274                    **************************************************************************
    2275                    *                                                                        *
    2276                    * MAKFBOBJ - MAKE A BACKGROUND OBJECT THAT EXISTS IN THE FOREGROUND      *
    2277                    * A14 = PTR TO INIT. TABLE                                               *
    2278                    * RETURNS                                                                *
    2279                    * Z BIT SET FAILURE                                                      *
    2280                    *       A0 = 0                                                           *
    2281                    *       A14 = UNCHANGED                                                  *
    2282                    * Z BIT CLR SUCCESS                                                      *
    2283                    *       A0 = PTR TO OBJECT                                               *
    2284                    *       A14 = NEXT WORD AFTER INIT TABLE                                 *
    2285                    *                                                                        *
    2286                    **************************************************************************
    2287 0000dae0           MAKFBOBJ
    2288 0000dae0     0d5f          CALLA   GETOBJ
         0000daf0 00000000! 
    2289 0000db10     ca40          JRZ     MAKFBX
    2290 0000db20     098f          MMTM    SP,A1,A4,A7,A8
         0000db30     4980  
    2291 0000db40     0d5f          CALLA   STFOBJ                  ;STUFF IT
         0000db50 00000000! 
    2292 0000db70     b604          MOVE    *A0(OZVAL),A4,L
         0000db80     00c0  
    2293 0000db90     cb1f          JRNZ    MAKFB3                  ;HARD CODED Z
    2294 0000dba0     b404          MOVE    *A0(OFLAGS),A4,W
         0000dbb0     0100  
    2295 0000dbc0     4c81          MOVE    A4,A1
    2296 0000dbd0     0b81          ANDI    M_PREVZ|M_PZPLUS,A1
         0000dbe0 ffffedff  
    2297 0000dc00     ca09          JRZ     MAKFBNZ                 ;BR = NO MATCHING Z STUFF
    2298 0000dc10     07a1          MOVE    @PREVZ,A1,L
         0000dc20 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   59

    2299 0000dc40     1ec4          BTST    B_PZPLUS,A4
    2300 0000dc50     ca01          JREQ    MAKFBZS                 ;BR = SAME OLD Z
    2301 0000dc60     1021          INC     A1
    2302 0000dc70           MAKFBZS
    2303 0000dc70     b220          MOVE    A1,*A0(OZVAL),L         ;STUFF OLD Z
         0000dc80     00c0  
    2304 0000dc90     c00f          JRUC    MAKFB3
    2305 0000dca0           MAKFBNZ
    2306 0000dca0     b401          MOVE    *A0(OID),A1,W
         0000dcb0     01a0  
    2307 0000dcc0     ce04          JRN     MAKFB1                  ;BR = GROUND OBJECT BASE Z OFF TOP
    2308 0000dcd0     0d5f          CALLA   SETZPOS                 ;OTHERWISE BASE Z OFF BOTTOM
         0000dce0 00000000! 
    2309 0000dd00     c003          JRUC    MAKFB2
    2310 0000dd10           MAKFB1
    2311 0000dd10     0d5f          CALLA   SETTZPOS
         0000dd20 00000000! 
    2312 0000dd40           MAKFB2
    2313 0000dd40     b604          MOVE    *A0(OZVAL),A4,L
         0000dd50     00c0  
    2314 0000dd60     0784          MOVE    A4,@PREVZ,L
         0000dd70 00000000! 
    2315 0000dd90           MAKFB3
    2316 0000dd90     4c08          MOVE    A0,A8
    2317 0000dda0     5621          CLR     A1                      ;INITIALIZE OFFSCREEN, LIMBO
    2318 0000ddb0     0d5f          calla   ADDBB                   ;ADD IT TO THE BACKGROUND BLOCK LIST
         0000ddc0 00000000! 
    2319 0000dde0     b504          MOVE    *A8(OFLAGS),A4,W
         0000ddf0     0100  
    2320 0000de00     1f04          BTST    B_SPAWNP,A4
    2321 0000de10     ca0d          JREQ    MAKFB4                  ;NOTHING TO SPAWN
    2322 0000de20     0b84          ANDNI   M_SPAWNP,A4
         0000de30 00000080  
    2323 0000de50     b088          MOVE    A4,*A8(OFLAGS),W
         0000de60     0100  
    2324 0000de70     95c1          MOVE    *A14+,A1,W
    2325 0000de80     97c7          MOVE    *A14+,A7,L
    2326 0000de90     0d5f          CALLA   GETPRC
         0000dea0 00000000! 
    2327 0000dec0     b208          MOVE    A0,*A8(OPLINK),L
         0000ded0     01f0  
    2328 0000dee0     4d00          MOVE    A8,A0
    2329 0000def0           MAKFB4
    2330 0000def0     09af          MMFM    SP,A1,A4,A7,A8
         0000df00     0192  
    2331 0000df10     4c00          MOVE    A0,A0                   ;CLR Z BIT
    2332 0000df20           MAKFBX
    2333 0000df20     0960          RETS
    2334                    
    2335                    **************************************************************************
    2336                    *                                                                        *
    2337                    * SKYUP - FADE DOWN THE SKY COLOR AND DIE                                *
    2338                    * A9 = FADER SPEED                                                       *
    2339                    *                                                                        *
    2340                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   60

    2341 0000df30           SKYDOWN
    2342 0000df30     b5a0          MOVE    *A13(PROCID),A0,W
         0000df40     0020  
    2343 0000df50     5621          CLR     A1
    2344 0000df60     03e1          NOT     A1
    2345 0000df70     0d5f          CALLA   KILALL
         0000df80 00000000! 
    2346 0000dfa0     09e8          MOVI    10000H,A8
         0000dfb0 00010000  
    2347 0000dfd0           SKYDOWN1
    2348 0000dfd0     05a0          MOVE    @SKYCOLOR,A0,W
         0000dfe0 00000000! 
    2349 0000e000     4d01          MOVE    A8,A1
    2350 0000e010     0d5f          CALLA   XCOLOR
         0000e020 00000000! 
    2351 0000e040     0580          MOVE    A0,@IRQSKYE,W
         0000e050 00000000! 
    2352 0000e070                   SLEEP   1
    2353 0000e0b0     4528          SUB     A9,A8
    2354 0000e0c0     c7f0          JRGT    SKYDOWN1
    2355 0000e0d0     5621          CLR     A1
    2356 0000e0e0     c000          JRUC    SKYDIE
         0000e0f0     f7f5  
    2357                    
    2358                    **************************************************************************
    2359                    *                                                                        *
    2360                    * EXPANDS - EXPAND THE SCREEN TO THE MAX FROM THE CURRENT SIZE           *
    2361                    * NOTE: CALL WITH JSRP                                                   *
    2362                    *                                                                        *
    2363                    **************************************************************************
    2364 0000e100           EXPANDS
    2365 0000e100     09e8          MOVI    [-3,-5],A8
         0000e110 fffdfffb  
    2366 0000e130     09e9          MOVI    [3,5],A9
         0000e140 00030005  
    2367 0000e160     09ea          MOVI    SCRNST,A10
         0000e170 00500000  
    2368 0000e190     09eb          MOVI    SCRNEND,A11     ;GET THESE FOR PROCESSING
         0000e1a0 01900200  
    2369 0000e1c0     c00c          JRUC    SCBLOWUP
    2370                    
    2371                    **************************************************************************
    2372                    *                                                                        *
    2373                    * SHRINKS - SHRINK THE SCREEN TO THE MIN FROM THE CURRENT SIZE           *
    2374                    * NOTE: CALL WITH JSRP                                                   *
    2375                    *                                                                        *
    2376                    **************************************************************************
    2377 0000e1d0           SHRINKS
    2378 0000e1d0     09e8          MOVI    [3,5],A8
         0000e1e0 00030005  
    2379 0000e200     09e9          MOVI    [-3,-5],A9
         0000e210 fffdfffb  
    2380 0000e230     09ea          MOVI    SCRNMID,A10
         0000e240 00ff0100  
    2381 0000e260     09eb          MOVI    SCRNMID,A11     ;GET THESE FOR PROCESSING
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   61

         0000e270 00ff0100  
    2382                    
    2383                    **************************************************************************
    2384                    *                                                                        *
    2385                    * SCBLOWUP - EXPAND OR CONTRACT SCREEN FROM THE CURRENT SIZE.            *
    2386                    * A8 = [Y,X] INCREMENT OF SCRNTL EACH TICK                               *
    2387                    * A9 = [Y,X] INCREMENT OF SCRNLR EACH TICK                               *
    2388                    * A10 = [Y,X] BOUNDRY OF SCRNTL                                          *
    2389                    * A11 = [Y,X] BOUNDRY OF SCRNLR                                          *
    2390                    *                                                                        *
    2391                    **************************************************************************
    2392 0000e290           SCBLOWUP
    2393 0000e290                   SLEEP   1
    2394 0000e2d0     0d5f          CALLA   SCRNEXPA
         0000e2e0 0000e790' 
    2395 0000e300     c9f8          JRNC    SCBLOWUP
    2396 0000e310           SCRNEXXX
    2397 0000e310                   RETP
    2398                    
    2399                    **************************************************************************
    2400                    *                                                                        *
    2401                    * SCREXP32 - SHRINK OR EXPAND THE SCREEN WINDOW FROM THE CURRENT SIZE    *
    2402                    *             TO THE GIVEN IN A GIVEN AMOUNT OF TICKS                    *
    2403                    * A0 = # OF TICKS                                                        *
    2404                    * A10 = NEW SCRNTL                                                       *
    2405                    * A11 = NEW SCRNLR                                                       *
    2406                    * NOTE: CALL WITH JSRP                                                   *
    2407                    *       TRASHES A8 & A9                                                  *
    2408                    *                                                                        *
    2409                    **************************************************************************
    2410 0000e340           SCREXP32
    2411 0000e340     07ae          MOVE    @SCRNTL,A14,L
         0000e350 00000000! 
    2412 0000e370     edc1          MOVX    A14,A1
    2413 0000e380     2601          SLL     16,A1
    2414 0000e390     5642          CLR     A2
    2415 0000e3a0     efc2          MOVY    A14,A2
    2416 0000e3b0     e34e          SUBXY   A10,A14
    2417 0000e3c0     edc5          MOVX    A14,A5
    2418 0000e3d0     2605          SLL     16,A5
    2419 0000e3e0     5805          DIVS    A0,A5
    2420 0000e3f0     03a5          NEG     A5
    2421 0000e400     4ca6          MOVE    A5,A6
    2422 0000e410     56a5          CLR     A5
    2423 0000e420     efc5          MOVY    A14,A5
    2424 0000e430     5805          DIVS    A0,A5
    2425 0000e440     03a5          NEG     A5
    2426 0000e450     4ca7          MOVE    A5,A7
    2427                    
    2428 0000e460     07ae          MOVE    @SCRNLR,A14,L
         0000e470 00000000! 
    2429 0000e490     edc3          MOVX    A14,A3
    2430 0000e4a0     2603          SLL     16,A3
    2431 0000e4b0     5684          CLR     A4
    2432 0000e4c0     efc4          MOVY    A14,A4
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   62

    2433 0000e4d0     e36e          SUBXY   A11,A14
    2434 0000e4e0     edc5          MOVX    A14,A5
    2435 0000e4f0     2605          SLL     16,A5
    2436 0000e500     5805          DIVS    A0,A5
    2437 0000e510     03a5          NEG     A5
    2438 0000e520     4ca8          MOVE    A5,A8
    2439 0000e530     56a5          CLR     A5
    2440 0000e540     efc5          MOVY    A14,A5
    2441 0000e550     5805          DIVS    A0,A5
    2442 0000e560     03a5          NEG     A5
    2443 0000e570     4ca9          MOVE    A5,A9
    2444 0000e580     4c05          MOVE    A0,A5
    2445 0000e590           SHTIMLP
    2446 0000e590     40c1          ADD     A6,A1                   ;ADD THE TLX INCREMENT
    2447 0000e5a0     40e2          ADD     A7,A2                   ;ADD THE TLY INCREMENT
    2448 0000e5b0     4103          ADD     A8,A3                   ;ADD THE LRX INCREMENT
    2449 0000e5c0     4124          ADD     A9,A4                   ;ADD THE LRY INCREMENT
    2450 0000e5d0     098c          MMTM    A12,A1,A2,A3,A4,A5,A6,A7
         0000e5e0     7f00  
    2451 0000e5f0     2e01          SRL     16,A1
    2452 0000e600     ee41          MOVY    A2,A1
    2453 0000e610     0781          MOVE    A1,@SCRNTL,L    
         0000e620 00000000! 
    2454 0000e640     2e03          SRL     16,A3
    2455 0000e650     ee83          MOVY    A4,A3
    2456 0000e660     0783          MOVE    A3,@SCRNLR,L
         0000e670 00000000! 
    2457 0000e690                   SLEEP   1
    2458 0000e6d0     09ac          MMFM    A12,A1,A2,A3,A4,A5,A6,A7
         0000e6e0     00fe  
    2459 0000e6f0     3ee5          DSJS    A5,SHTIMLP
    2460 0000e700           SHTIMR
    2461 0000e700     078a          MOVE    A10,@SCRNTL,L           ;MATCH WHAT THE CALLER WANTED
         0000e710 00000000! 
    2462 0000e730     078b          MOVE    A11,@SCRNLR,L
         0000e740 00000000! 
    2463 0000e760                   RETP
    2464                    
    2465                    **************************************************************************
    2466                    *                                                                        *
    2467                    * SCRNEXPA - ARBITRARY SCREEN EXPAND OR CONTRACT                         *
    2468                    *                                                                        *
    2469                    * A8 = [Y,X] INCREMENT OF LOCATION SCRNST                                *
    2470                    * A9 = [Y,X] INCREMENT OF LOCATION SCRNEND                               *
    2471                    * A10 = [Y,X] MAX OR MIN OF SCRNST                                       *
    2472                    * A11 = [Y,X] MAX OR MIN OF SCRNEND                                      *
    2473                    * RETURNS                                                                *
    2474                    * A8 = [Y,X] MODIFIED INCREMENT OF SCRNST, PROPER X OR Y ARE ZEROED      *
    2475                    * A9 = [Y,X] MODIFIED INCREMENT OF SCRNEND, PROPER X OR Y ARE ZEROED     *
    2476                    * CARRY SET - ALL BOUNDRIES HAVE BEEN HIT                                *
    2477                    * CARRY CLEAR - THERE'S MORE TO DO                                       *
    2478                    *                                                                        *
    2479                    **************************************************************************
    2480 0000e790           SCRNEXPA
    2481 0000e790     098f          MMTM    SP,A0,A1,A2,A3,A4
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   63

         0000e7a0     f800  
    2482 0000e7b0     07a0          MOVE    @SCRNTL,A0,L
         0000e7c0 00000000! 
    2483 0000e7e0     07a1          MOVE    @SCRNLR,A1,L
         0000e7f0 00000000! 
    2484                    
    2485 0000e810                   TEST    A8                      ;DONE INCREMENTING THIS WAY?
    2486 0000e820     cb06          JRNE    SCEAA81                 ;BR = NO DO IT
    2487 0000e830                   TEST    A9
    2488 0000e840     cb10          JRNE    SCEAA91                 ;BR = NOT DONE WITH A9
    2489                    
    2490 0000e850     0de0          SETC                            ;FLAG SET - ALL BOUNDRIES REACHED
    2491 0000e860     09af          MMFM    SP,A0,A1,A2,A3,A4
         0000e870     001f  
    2492 0000e880     0960          RETS
    2493                    
    2494 0000e890           SCEAA81
    2495 0000e890     4d02          MOVE    A8,A2
    2496 0000e8a0     4c03          MOVE    A0,A3
    2497 0000e8b0     4d44          MOVE    A10,A4
    2498 0000e8c0     0d5f          calla   SCEXPBCK                ;BOUNDRY CHECK
         0000e8d0 0000ea30' 
    2499 0000e8f0     4c48          MOVE    A2,A8
    2500 0000e900     0783          MOVE    A3,@SCRNTL,L            ;NEW SCREEN TOP LEFT
         0000e910 00000000! 
    2501                            
    2502 0000e930                   TEST    A9      
    2503 0000e940     ca0a          JREQ    SCEAEXXX
    2504 0000e950           SCEAA91
    2505 0000e950     4d22          MOVE    A9,A2
    2506 0000e960     4c23          MOVE    A1,A3
    2507 0000e970     4d64          MOVE    A11,A4
    2508 0000e980     0d5f          calla   SCEXPBCK                ;BOUNDRY CHECK
         0000e990 0000ea30' 
    2509 0000e9b0     4c49          MOVE    A2,A9
    2510 0000e9c0     0783          MOVE    A3,@SCRNLR,L            ;NEW SCREEN LOWER RIGHT
         0000e9d0 00000000! 
    2511 0000e9f0           SCEAEXXX
    2512 0000e9f0     0320          CLRC
    2513 0000ea00     09af          MMFM    SP,A0,A1,A2,A3,A4
         0000ea10     001f  
    2514 0000ea20     0960          RETS
    2515                    
    2516                    **************************************************************************
    2517                    *                                                                        *
    2518                    * SCEXPBCK - SCREEN EXPAND BOUNDRY CHECK                                 *
    2519                    * A2 = [Y,X]INCREMENT                                                    *
    2520                    * A3 = [Y,X]CURRENT POSITION                                             *
    2521                    * A4 = [Y,X]BOUNDRY                                                      *
    2522                    * RETURNS                                                                *
    2523                    * A2 = [Y,X]INCREMENT ALTERED IF NECESSARY                               *
    2524                    * A3 = [Y,X]NEW POSITION                                                 *
    2525                    *                                                                        *
    2526                    **************************************************************************
    2527 0000ea30           SCEXPBCK
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   64

    2528 0000ea30                   PUSH    A5
    2529 0000ea40     e043          ADDXY   A2,A3
    2530                    
    2531 0000ea50     56a5          CLR     A5
    2532 0000ea60     e4a2          CMPXY   A5,A2
    2533 0000ea70                   JRXEQ   SCEBK2
    2534 0000ea80                   JRXLT   SCEBK1A
    2535                    
    2536 0000ea90     e483          CMPXY   A4,A3           ;+X INC, USE JRXLT ON COMPARE
    2537 0000eaa0                   JRXLT   SCEBK2          ;BR = HAVEN'T REACHED OR SURPASSED BOUNDRY
    2538 0000eab0     c002          JRUC    SCEBK1B
    2539                    
    2540 0000eac0           SCEBK1A
    2541 0000eac0     e483          CMPXY   A4,A3           ;CHECK X BOUNDRY
    2542 0000ead0     c503          JRXGT   SCEBK2
    2543 0000eae0           SCEBK1B
    2544 0000eae0     ec83          MOVX    A4,A3           ;MATCH BOUNDRY
    2545 0000eaf0     2e02          SRL     16,A2
    2546 0000eb00     2602          SLL     16,A2           ;CLEAR X INC
    2547                    
    2548 0000eb10           SCEBK2
    2549 0000eb10     e4a2          CMPXY   A5,A2
    2550 0000eb20                   JRYEQ   SCEBK9          ;Y INCREMENT IS DONE
    2551 0000eb30                   JRYLT   SCEBK2A
    2552                    
    2553 0000eb40     e483          CMPXY   A4,A3           ;+Y INC, USE JRYLT ON COMPARE
    2554 0000eb50                   JRYLT   SCEBK9          ;BR = HAVEN'T REACHED OR SURPASSED BOUNDRY
    2555 0000eb60     c002          JRUC    SCEBK2B
    2556                    
    2557 0000eb70           SCEBK2A
    2558 0000eb70     e483          CMPXY   A4,A3
    2559 0000eb80     c302          JRYGT   SCEBK9
    2560 0000eb90           SCEBK2B
    2561 0000eb90     ee83          MOVY    A4,A3
    2562 0000eba0     0522          ZEXT    A2              ;CLEAR Y INC
    2563 0000ebb0           SCEBK9
    2564 0000ebb0                   PULL    A5
    2565 0000ebd0     0960          RETS
    2566                    
    2567                    ************* Local Constants for UPD **************
    2568          00300030  DISP_PAD        .set    00300030H         ; Y:X
    2569              00fa  WIDEST_BLOCK    .set    250
    2570                    
    2571                    ;* Must keep the size of these structures a multiple of 16
    2572              0000  map_zflagspal   .set 0
    2573              0000  map_pal         .set 0          ;size 4 - palette select
    2574              0004  map_flags       .set 4          ;size 4 - bit 0 hflip, bit 1 yflip
    2575              0008  map_z           .set 8          ;size 8
    2576              0010  map_x           .set 16         ;size 16
    2577              0020  map_y           .set 32         ;size 16
    2578              0030  map_hdr         .set 48         ;size 16 - offset in long words from block_hdr_tbl
    2579                                                    ; bits 12-15 are bits 4-7 of pal
    2580                                                    ; map_hdr set to 0FFFFH if block is not allocated
    2581              0040  block_size      .set 64         ;* if changed must get rid of shifts by 6
    2582                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   65

    2583                    ;* Offsets for a BLOCK HDR structure
    2584              0000  map_size        .set    0
    2585              0000  map_w           .set    0       ;size 16          ; These fields can't be changed
    2586              0010  map_h           .set    16      ;size 16          ; because they are used as the
    2587              0020  map_animoff     .set    32      ;size 32          ; OIMG block header
    2588              0040  map_dataptr     .set    64      ;size 32          ;
    2589              0060  block_hdr_size  .set    96
    2590                    
    2591                    ************************************************************************
    2592 0000ebe0           BGNDHGHT:
    2593                    ;Parms  A0 - XPOS for which height of BackGround needs to be determined
    2594                    ;Returns A0 -
    2595                    ;       Minimum YPOS (max height) of PRIMARY background which overlaps
    2596                    ;       specified XPOS
    2597                    ;       A0 = 0 if XPOS is invalid
    2598                    
    2599                    ;* Scan a Module list to find out which module contains blocks
    2600                    ;* which need to be checked
    2601 0000ebe0     098f          mmtm    SP,A1,A2,A3,A4,A7,A8,A9,A10,A11
         0000ebf0     79f0  
    2602 0000ec00     4c01          move    A0,A1
    2603                    
    2604 0000ec10     574a          clr     A10                     ;init packed y:x starting position
    2605 0000ec20     576b          clr     A11
    2606                    
    2607 0000ec30     07a0          move    @BAKMODS,A0,L           ;* A0- ptr to the module list
         0000ec40 00000000! 
    2608 0000ec60           ModLp0: 
    2609 0000ec60     9608          move    *A0+,A8,L               ;load module ptr
    2610 0000ec70     0b48          cmpi    0FFFFFFFFH,A8
         0000ec80     0000  
    2611 0000ec90     ca2a          jrz     ModX0                   ;end of the module tbl
    2612 0000eca0     9709          move    *A8+,A9,L               ;load packed y:x size
    2613                    
    2614 0000ecb0     9403          move    *A0+,A3,W               ;X start position
    2615 0000ecc0     0523          zext    A3,W
    2616 0000ecd0     0b63          cmpi    BLSTSTRT,A3
         0000ece0 ffff7fff  
    2617 0000ed00     cb03          jrnz    NotLstStrtX
    2618 0000ed10     4d63          move    A11,A3          
    2619 0000ed20     e323          subxy   A9,A3
    2620 0000ed30     c005          jruc    GotNewX0
    2621 0000ed40           NotLstStrtX:
    2622 0000ed40     0b63          cmpi    BLSTEND,A3
         0000ed50 ffff7ffe  
    2623 0000ed70     cb01          jrnz    GotNewX0
    2624 0000ed80     4d63          move    A11,A3
    2625 0000ed90           GotNewX0:
    2626 0000ed90     9404          move    *A0+,A4,W               ;Y start position
    2627 0000eda0     0524          zext    A4,W
    2628 0000edb0     0b64          cmpi    BLSTSTRT,A4
         0000edc0 ffff7fff  
    2629 0000ede0     cb03          jrnz    NotLstStrtY
    2630 0000edf0     4d64          move    A11,A4          
    2631 0000ee00     e324          subxy   A9,A4
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   66

    2632 0000ee10     c007          jruc    GotNewY0
    2633 0000ee20           NotLstStrtY:
    2634 0000ee20     0b64          cmpi    BLSTEND,A4
         0000ee30 ffff7ffe  
    2635 0000ee50     cb02          jrnz    NotLstEndY
    2636 0000ee60     4d64          move    A11,A4
    2637 0000ee70     c001          jruc    GotNewY0
    2638 0000ee80           NotLstEndY:
    2639 0000ee80     2604          sll     16,A4
    2640 0000ee90           GotNewY0:
    2641 0000ee90     ee83          movy    A4,A3
    2642 0000eea0     4c6a          move    A3,A10
    2643                    
    2644                    ;       cmpxy   A10,A1
    2645                    ;       jrv     ModX0   ;jump to exit loop if Mod start X > X sought
    2646                    
    2647                            ;if Mod end X < X sought keep searching mod list
    2648 0000eeb0     4d4b          move    A10,A11
    2649 0000eec0     e12b          addxy   A9,A11  ;A11 is module y:x end
    2650                    
    2651 0000eed0     9509          move    *A8+,A9,W               ;load # of blocks
    2652 0000eee0     4127          add     A9,A7           ;A7 is new BAKBITS ptr
    2653 0000eef0     e561          cmpxy   A11,A1
    2654 0000ef00     cdd5          jrnv    ModLp0          ;skip if Ax < Bx
    2655                    
    2656 0000ef10     4d40          move    A10,A0
    2657 0000ef20     2e00          srl     16,A0
    2658 0000ef30     c001          jruc    GotHGHT
    2659                    
    2660 0000ef40           ModX0:
    2661 0000ef40     5600          clr     A0
    2662 0000ef50           GotHGHT:
    2663 0000ef50     09af          mmfm    SP,A1,A2,A3,A4,A7,A8,A9,A10,A11
         0000ef60     0f9e  
    2664 0000ef70     0960          rets
    2665                    ************************************************************************
    2666                    
    2667                    **************************** BSrch1stXB ********************************
    2668 0000ef80           BSrch1stXB:
    2669                    ;*** PARMS
    2670                    ;       A0 - x coordinate of a block
    2671                    ;       A1 - Start of background block table
    2672                    ;       A2 - end of block table
    2673                    ;*** Returns
    2674                    ;       A0 - address of first block with x coordinate >= parm
    2675                    ;               if new x is highest returns next empty block
    2676                    ;               if no blocks with >= X, return 0
    2677                    
    2678                    ;* A0 = X val being searched for
    2679                    ;* A1 = Block Table Base + offset to X val
    2680                    ;* A14 - Threshhold for switching from binary to linear search
    2681                    ;* A9 = Low # -- # greatest background block
    2682                    ;* A10 = Mid # -- (High + Low) >> 1
    2683                    ;* A2 = High # -- # of lowest background block
    2684                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   67

    2685 0000ef80     098f          mmtm    SP,A1,A2,A8,A9,A10
         0000ef90     60e0  
    2686 0000efa0     5729          clr     A9              ;* set low = 0
    2687 0000efb0     4422          sub     A1,A2
    2688 0000efc0     2f42          srl     6,A2    ;* div by size of block (64)
    2689 0000efd0     0b01          addi    map_x,A1        ;* block tbl base + X offset
         0000efe0     0010  
    2690 0000eff0     18ae          movk    5,A14   ;* threshhold for switching from binary to linear search
    2691 0000f000           BSRCH:
    2692 0000f000     4c4a          move    A2,A10
    2693 0000f010     452a          sub     A9,A10  ;* if (high - low) <= 5 finish with linear search
    2694 0000f020     49ca          cmp     A14,A10
    2695 0000f030     c60c          jrle    LSRCH
    2696                    
    2697 0000f040     2fea          srl     1,A10
    2698 0000f050     412a          add     A9,A10          
    2699                    
    2700                            ;* get mid->x
    2701 0000f060     4d48          move    A10,A8
    2702 0000f070     24c8          sll     6,A8            ;* multiply by block size (64)
    2703 0000f080     4028          add     A1,A8
    2704 0000f090     8508          move    *A8,A8,W        ;* get x coor of the block
    2705 0000f0a0     4808          cmp     A0,A8
    2706 0000f0b0     c402          jrlt    Blow
    2707 0000f0c0     4d42          move    A10,A2  ;* high = mid
    2708 0000f0d0     c0f2          jruc    BSRCH
    2709 0000f0e0           Blow:
    2710 0000f0e0     4d49          move    A10,A9  ;* low = mid
    2711 0000f0f0     c0f0          jruc    BSRCH
    2712 0000f100           LSRCH:
    2713                            ;* finish with a linear search of block table from low to high
    2714                            ;* ending with first block x coor that is >= A0
    2715                    ;* A0 = X val being searched for
    2716                    ;* A9 = Low Address -- pts to X offset of block
    2717                    ;* A2 = High Address -- pts to X offset of block
    2718 0000f100     24c9          sll     6,A9            ;* low block # to low block offset
    2719 0000f110     24c2          sll     6,A2            ;* high block # to high block offset
    2720 0000f120     4029          add     A1,A9
    2721 0000f130     4022          add     A1,A2
    2722 0000f140     09c8          movi    block_size,A8
         0000f150     0040  
    2723 0000f160           LSRCHLP:
    2724 0000f160     852a          move    *A9,A10,W       ;* X coor
    2725 0000f170     480a          cmp     A0,A10
    2726 0000f180     c505          jrge    GotB            ;* if low->x >= A0 goto found
    2727 0000f190     4109          add     A8,A9
    2728 0000f1a0     4849          cmp     A2,A9
    2729 0000f1b0     c6fa          jrle    LSRCHLP
    2730                    ;* block not found, return 0
    2731 0000f1c0     5600          clr     A0
    2732 0000f1d0     c003          jruc BSrchDone
    2733 0000f1e0           GotB:
    2734                            ;* return a ptr to the block
    2735 0000f1e0     4d20          move    A9,A0
    2736 0000f1f0     0be0          subi    map_x,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   68

         0000f200     ffef  
    2737                    
    2738 0000f210           BSrchDone:
    2739 0000f210     09af          mmfm    SP,A1,A2,A8,A9,A10
         0000f220     0706  
    2740 0000f230     0960          rets
    2741                    **************************** BSrch1stXB ********************************
    2742                    
    2743                    
    2744                    *********************** BAK END *******************************
    2745                    ;* Scan a Module list and return the packed Y:X end point
    2746                    ;PARMS
    2747                            ;A0 - Module list
    2748                    ;RETURNS
    2749                            ;A0 - PACKED Y:X end of wave
    2750 0000f240           BAK_END:
    2751 0000f240     098f          mmtm    SP,A3,A4,A8,A9,A10,A11
         0000f250     18f0  
    2752                    
    2753 0000f260     574a          clr     A10     ;clr packed y:x starting position
    2754 0000f270     576b          clr     A11
    2755 0000f280           WEModLp:        
    2756 0000f280     9608          move    *A0+,A8,L               ;load module ptr
    2757 0000f290     0b48          cmpi    0FFFFFFFFH,A8
         0000f2a0     0000  
    2758 0000f2b0     ca24          jrz     WEModX                  ;end of the module tbl
    2759 0000f2c0     9709          move    *A8+,A9,L               ;load packed y:x size
    2760                    
    2761 0000f2d0     9403          move    *A0+,A3,W               ;X start position
    2762 0000f2e0     0523          zext    A3,W
    2763 0000f2f0     0b63          cmpi    BLSTSTRT,A3
         0000f300 ffff7fff  
    2764 0000f320     cb03          jrnz    WENotLastStartX
    2765 0000f330     4d63          move    A11,A3          
    2766 0000f340     e323          subxy   A9,A3
    2767 0000f350     c005          jruc    WEGotNewX
    2768 0000f360           WENotLastStartX:
    2769 0000f360     0b63          cmpi    BLSTEND,A3
         0000f370 ffff7ffe  
    2770 0000f390     cb01          jrnz    WEGotNewX
    2771 0000f3a0     4d63          move    A11,A3
    2772 0000f3b0           WEGotNewX:
    2773 0000f3b0     9404          move    *A0+,A4,W               ;Y start position
    2774 0000f3c0     0524          zext    A4,W
    2775 0000f3d0     0b64          cmpi    BLSTSTRT,A4
         0000f3e0 ffff7fff  
    2776 0000f400     cb03          jrnz    WENotLastStartY
    2777 0000f410     4d64          move    A11,A4          
    2778 0000f420     e324          subxy   A9,A4
    2779 0000f430     c007          jruc    WEGotNewY
    2780 0000f440           WENotLastStartY:
    2781 0000f440     0b64          cmpi    BLSTEND,A4
         0000f450 ffff7ffe  
    2782 0000f470     cb02          jrnz    WENotLastEndY
    2783 0000f480     4d64          move    A11,A4
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   69

    2784 0000f490     c001          jruc    WEGotNewY
    2785 0000f4a0           WENotLastEndY:
    2786 0000f4a0     2604          sll     16,A4
    2787 0000f4b0           WEGotNewY:
    2788 0000f4b0     ee83          movy    A4,A3
    2789 0000f4c0     4c6a          move    A3,A10
    2790                            
    2791 0000f4d0     4d4b          move    A10,A11
    2792 0000f4e0     e12b          addxy   A9,A11  ;A11 is module y:x end
    2793 0000f4f0     c0d8          jruc    WEModLp
    2794                    
    2795 0000f500           WEModX:
    2796 0000f500     4d60          move    A11,A0
    2797 0000f510     09af          mmfm    SP,A3,A4,A8,A9,A10,A11
         0000f520     0f18  
    2798 0000f530     0960          rets
    2799                    ***********************************************************************
    2800                    
    2801                    *********************** BAK START *******************************
    2802                    ;* Scan a Module list and return the packed Y:X starting point
    2803                    ;PARMS
    2804                            ;A0 - Module list
    2805                    ;RETURNS
    2806                            ;A0 - PACKED Y:X start of wave
    2807 0000f540           BAK_STRT:
    2808 0000f540     098f          mmtm    SP,A3,A4,A8,A9,A11
         0000f550     18d0  
    2809                    
    2810 0000f560     576b          clr     A11
    2811 0000f570     9608          move    *A0+,A8,L               ;load module ptr
    2812 0000f580     0b48          cmpi    0FFFFFFFFH,A8
         0000f590     0000  
    2813 0000f5a0     ca21          jrz     WSModX                  ;end of the module tbl
    2814 0000f5b0     9709          move    *A8+,A9,L               ;load packed y:x size
    2815                    
    2816 0000f5c0     9403          move    *A0+,A3,W               ;X start position
    2817 0000f5d0     0523          zext    A3,W
    2818 0000f5e0     0b63          cmpi    BLSTSTRT,A3
         0000f5f0 ffff7fff  
    2819 0000f610     cb03          jrnz    WSNotLastStartX
    2820 0000f620     4d63          move    A11,A3          
    2821 0000f630     e323          subxy   A9,A3
    2822 0000f640     c005          jruc    WSGotNewX
    2823 0000f650           WSNotLastStartX:
    2824 0000f650     0b63          cmpi    BLSTEND,A3
         0000f660 ffff7ffe  
    2825 0000f680     cb01          jrnz    WSGotNewX
    2826 0000f690     4d63          move    A11,A3
    2827 0000f6a0           WSGotNewX:
    2828 0000f6a0     9404          move    *A0+,A4,W               ;Y start position
    2829 0000f6b0     0524          zext    A4,W
    2830 0000f6c0     0b64          cmpi    BLSTSTRT,A4
         0000f6d0 ffff7fff  
    2831 0000f6f0     cb03          jrnz    WSNotLastStartY
    2832 0000f700     4d64          move    A11,A4          
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   70

    2833 0000f710     e324          subxy   A9,A4
    2834 0000f720     c007          jruc    WSGotNewY
    2835 0000f730           WSNotLastStartY:
    2836 0000f730     0b64          cmpi    BLSTEND,A4
         0000f740 ffff7ffe  
    2837 0000f760     cb02          jrnz    WSNotLastEndY
    2838 0000f770     4d64          move    A11,A4
    2839 0000f780     c001          jruc    WSGotNewY
    2840 0000f790           WSNotLastEndY:
    2841 0000f790     2604          sll     16,A4
    2842 0000f7a0           WSGotNewY:
    2843 0000f7a0     ee83          movy    A4,A3
    2844 0000f7b0     4c60          move    A3,A0
    2845                    
    2846 0000f7c0           WSModX:
    2847 0000f7c0     09af          mmfm    SP,A3,A4,A8,A9,A11
         0000f7d0     0b18  
    2848 0000f7e0     0960          rets
    2849                    ***********************************************************************
    2850                    
    2851                    ****************  U P D A T E   D I S P   L I S T **********************
    2852                    ;* deletes all display objects which are not on the screen
    2853                    ;* insures all background blocks on screen are on the disp list
    2854 0000f7f0           BGND_UD1:               ;* call to update main background
    2855                    ;* input, WORLDTL, SCRNTL, SCRNLR, BAKLST, BAKBITS, BAKMODS
    2856                            ;* this protects DISP_MOD and DISP_DEL TOO!
    2857 0000f7f0     098f          mmtm    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14
         0000f800     fffe  
    2858 0000f810     099f          mmtm    SP,B0
         0000f820     8000  
    2859                    
    2860                            ;* Get coors of area to be put on display list.
    2861 0000f830     07a3          move    @WORLDTL,A3,1
         0000f840 00000000! 
    2862 0000f860     4c64          move    A3,A4
    2863 0000f870     07a0          move    @SCRNTL,A0,1
         0000f880 00000000! 
    2864 0000f8a0     e003          addxy   A0,A3           
    2865 0000f8b0     07a0          move    @SCRNLR,A0,1
         0000f8c0 00000000! 
    2866 0000f8e0     e004          addxy   A0,A4           
    2867 0000f8f0     09e0          movi    DISP_PAD,A0
         0000f900 00300030  
    2868 0000f920     e203          subxy   A0,A3           ;A3 - disp_tl
    2869 0000f930     e004          addxy   A0,A4           ;A4 - disp_lr
    2870 0000f940     09e8          movi    BAKLST,A8       ;A8 - bakground list
         0000f950 00000000! 
    2871 0000f970     0d3f          callr   DISP_DEL
         0000f980     0128  
    2872                    
    2873                            ;* determine which module
    2874 0000f990     07a0          move    @BAKMODS,A0,L           ;A0- ptr to the module list
         0000f9a0 00000000! 
    2875 0000f9c0     09f0          movi    INSBOBJ,B0              ;B0 - which insert routine
         0000f9d0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   71

    2876 0000f9f0     09e7          movi    BAKBITS,A7              ;A7 - bit table for block being on disp list
         0000fa00 00000000! 
    2877 0000fa20     0d3f          callr   DISP_MOD
         0000fa30     0034  
    2878 0000fa40     09bf          mmfm    SP,B0
         0000fa50     0001  
    2879 0000fa60     09af          mmfm    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14
         0000fa70     7fff  
    2880 0000fa80     0960          rets
    2881                    
    2882 0000fa90           BGND_UD2:               ;* call to update secondary background
    2883                    ;* input, BAK2TLX, BAK2TLY, SCRNTL, SCRNLR, BAK2LST, BAK2BITS, BAK2MODS
    2884 0000fa90     098f          mmtm    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14
         0000faa0     fffe  
    2885 0000fab0     099f          mmtm    SP,B0
         0000fac0     8000  
    2886                            ;* Get coors of area to be put on display list.
    2887 0000fad0     05a3          move    @BAK2TLX+16,A3,W
         0000fae0 00000010! 
    2888 0000fb00     05a0          move    @BAK2TLY+16,A0,W
         0000fb10 00000010! 
    2889 0000fb30     2600          sll     16,A0
    2890 0000fb40     ee03          movy    A0,A3
    2891 0000fb50     4c64          move    A3,A4
    2892 0000fb60     07a0          move    @SCRNTL,A0,L
         0000fb70 00000000! 
    2893 0000fb90     e003          addxy   A0,A3           
    2894 0000fba0     07a0          move    @SCRNLR,A0,L
         0000fbb0 00000000! 
    2895 0000fbd0     e004          addxy   A0,A4           
    2896 0000fbe0     09e0          movi    DISP_PAD,A0
         0000fbf0 00300030  
    2897 0000fc10     e203          subxy   A0,A3           ;A3 = disp_tl
    2898 0000fc20     e004          addxy   A0,A4           ;A4 = disp_lr
    2899 0000fc30     09e8          movi    BAK2LST,A8              ;A8 - bakground list
         0000fc40 00000000! 
    2900 0000fc60     0d3f          callr   DISP_DEL
         0000fc70     00f9  
    2901                    
    2902 0000fc80     09f0          movi    INSB2OBJ,B0             ;B0 - which insert routine
         0000fc90 00000000! 
    2903 0000fcb0     07a0          move    @BAK2MODS,A0,L          ;* A0- ptr to the module list
         0000fcc0 00000000! 
    2904 0000fce0     09e7          movi    BAK2BITS,A7
         0000fcf0 00000000! 
    2905 0000fd10     0d3f          callr   DISP_MOD
         0000fd20     0005  
    2906 0000fd30     09bf          mmfm    SP,B0
         0000fd40     0001  
    2907 0000fd50     09af          mmfm    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14
         0000fd60     7fff  
    2908 0000fd70     0960          rets
    2909                    ***********************************************************************
    2910                    
    2911                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   72

    2912                    *********************** D I S P   M O D *******************************
    2913                    ;* Scan a Module list to find out which modules contain blocks
    2914                    ;* which need to be checked for addition to the display list.
    2915                    ;       B0 - which insert routine
    2916                    ;       A0 - Module list
    2917                    ;       A3 - disp_tl
    2918                    ;       A4 - disp_lr
    2919                    ;       A7 - BAKBITS    ;A7 - bit table for block being on disp list
    2920                    
    2921                    ;PARMS For DISP_ADD
    2922                    ;       A1 - Background Block table
    2923                    ;       A2 - End of Background Block table
    2924                    ;       A5 - Background hdr table
    2925                    ;       A9 - Module Start Position Y:X
    2926                    ;       A10 - ptr to palette table for new block
    2927                    ;           ;passed from above
    2928                    ;       A3 - disp_tl
    2929                    ;       A4 - disp_lr
    2930                    ;       A6 - which bakground insert routine primary|secondary
    2931                    ;       A7 - bit table for block being on disp list
    2932                    
    2933                    ;* caller is responsible for pushing and popping all A-registers
    2934                    
    2935 0000fd80           DISP_MOD:
    2936 0000fd80     5729          clr     A9                      ;init y:x starting position
    2937 0000fd90     576b          clr     A11                     ;ending y:x pos
    2938 0000fda0     4ce6          move    A7,A6                   ;A6 will point to BakBits after Mod
    2939                    
    2940 0000fdb0           ModLp:  
    2941 0000fdb0           SkDAdd:
    2942 0000fdb0     4cc7          move    A6,A7
    2943 0000fdc0     9608          move    *A0+,A8,L               ;load module ptr
    2944 0000fdd0     0b48          cmpi    0FFFFFFFFH,A8
         0000fde0     0000  
    2945 0000fdf0     ca38          jrz     ModX                    ;end of the module tbl
    2946 0000fe00     970a          move    *A8+,A10,L              ;load y:x size
    2947                    
    2948 0000fe10     940e          move    *A0+,A14,W              ;X start position
    2949 0000fe20     052e          zext    A14,W
    2950 0000fe30     0b6e          cmpi    BLSTSTRT,A14
         0000fe40 ffff7fff  
    2951 0000fe60     cb03          jrnz    NotLastStartX
    2952 0000fe70     4d6e          move    A11,A14         
    2953 0000fe80     e34e          subxy   A10,A14
    2954 0000fe90     c005          jruc    GotNewX
    2955 0000fea0           NotLastStartX:
    2956 0000fea0     0b6e          cmpi    BLSTEND,A14
         0000feb0 ffff7ffe  
    2957 0000fed0     cb01          jrnz    GotNewX
    2958 0000fee0     4d6e          move    A11,A14
    2959 0000fef0           GotNewX:
    2960 0000fef0     9405          move    *A0+,A5,W               ;Y start position
    2961 0000ff00     0525          zext    A5,W
    2962 0000ff10     0b65          cmpi    BLSTSTRT,A5
         0000ff20 ffff7fff  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   73

    2963 0000ff40     cb03          jrnz    NotLastStartY
    2964 0000ff50     4d65          move    A11,A5          
    2965 0000ff60     e345          subxy   A10,A5
    2966 0000ff70     c007          jruc    GotNewY
    2967 0000ff80           NotLastStartY:
    2968 0000ff80     0b65          cmpi    BLSTEND,A5
         0000ff90 ffff7ffe  
    2969 0000ffb0     cb02          jrnz    NotLastEndY
    2970 0000ffc0     4d65          move    A11,A5
    2971 0000ffd0     c001          jruc    GotNewY
    2972 0000ffe0           NotLastEndY:
    2973 0000ffe0     2605          sll     16,A5
    2974 0000fff0           GotNewY:
    2975 0000fff0     eeae          movy    A5,A14
    2976 00010000     4dc9          move    A14,A9
    2977                    
    2978 00010010     4d2b          move    A9,A11
    2979 00010020     e14b          addxy   A10,A11 ;A11 is module y:x end
    2980 00010030     950a          move    *A8+,A10,W              ;load # of blocks
    2981 00010040     4146          add     A10,A6          ;A6 is new BAKBITS ptr
    2982                    
    2983                    ;       cmpxy   A9,A4
    2984                    ;       jrxle   ModX    ;jump to exit loop if Mod start X > Screen End X
    2985                    
    2986 00010050     e46b          cmpxy   A3,A11
    2987 00010060                   jrxlt   SkDAdd          ;skip if Mod X End < TL X
    2988 00010070                   jrylt   SkDAdd          ;skip if Mod Y End < TL Y
    2989                    
    2990 00010080     e524          cmpxy   A9,A4
    2991 00010090                   jrxlt   SkDAdd  ;use this if modules aren't sorted left to right
    2992                                                    ;jump to if Mod start X > Screen End X
    2993 000100a0                   jrylt   SkDAdd          ;skip if Mod Y Start > BR Y
    2994                    
    2995 000100b0     9701          move    *A8+,A1,L               ;A1-block table 
    2996 000100c0     4d42          move    A10,A2
    2997 000100d0     24c2          sll     6,A2                    ;each block is 4 words long
    2998 000100e0     4022          add     A1,A2                   ;A2-block table end
    2999 000100f0     9705          move    *A8+,A5,L               ;A5-Hdrs
    3000 00010100     970a          move    *A8+,A10,L              ;A10-Pal tbl
    3001 00010110     e323          subxy   A9,A3
    3002 00010120     e324          subxy   A9,A4
    3003 00010130     0d3f          callr   DISP_ADD
         00010140     0004  
    3004 00010150     e123          addxy   A9,A3
    3005 00010160     e124          addxy   A9,A4
    3006 00010170     c0c3          jruc    ModLp
    3007                    
    3008 00010180           ModX:
    3009 00010180     0960          rets
    3010                    ***********************************************************************
    3011                    
    3012                    *********************** D I S P   A D D *******************************
    3013                    ;* This function adds all module blocks in the given range of Module
    3014                    ;* relative coors to the display list.
    3015                    ;* The boundries are included in the group to add.
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   74

    3016 00010190           DISP_ADD:
    3017                    ;***    PARMS:
    3018                    ;       B0 - which bakground insert routine primary|secondary
    3019                    ;       A5 - Background hdr table
    3020                    ;       A7 - bit table for block being on disp list
    3021                    ;       A9 - Module Start Position Y:X
    3022                    ;       A10 - ptr to palette table for new block
    3023                    ;       A1 - Background Block table
    3024                    ;       A2 - End of Background Block table
    3025                    ;       A3 - disp_tl    - relative to the Module start POS
    3026                    ;       A4 - disp_lr    - " 
    3027                    ;*** RETURNS nothing
    3028                    
    3029                    ;thrashes A1,A8,A14
    3030 00010190     098f          mmtm    SP,A0,A6,A7,A11
         000101a0     8310  
    3031                    
    3032                            ;* Find first universe block with an X coor >= A9
    3033 000101b0     ec60          movx    A3,A0
    3034 000101c0     0500          sext    A0,W
    3035 000101d0     0be0          subi    WIDEST_BLOCK,A0
         000101e0     ff05  
    3036                    ;A0 - x coordinate of a block
    3037                    ;A1 - Start of background block table
    3038                    ;A2 - end of block table
    3039 000101f0     0d3f          callr   BSrch1stXB
         00010200     fed7  
    3040                    ;A0 is now the address of a block
    3041 00010210     ca4b          jrz     DADONE  ;* no blocks with gtr Xcoor
    3042                            
    3043 00010220     09c6          movi    block_size,A6
         00010230     0040  
    3044                    
    3045 00010240     4c08          move    A0,A8
    3046 00010250     4428          sub     A1,A8   ;* subtract off start of table
    3047 00010260     2f48          srl     6,A8    ;* divide by block size (64)
    3048 00010270     40e8          add     A7,A8   ;* A8 - ptr to bit which indicates block on list
    3049 00010280     1508          subk    8,A8    ;* after inc A8, use movb *A8 to load sign bit
    3050 00010290     44c0          sub     A6,A0   ;subtract block size
    3051 000102a0           BScanLP0:
    3052 000102a0     1028          inc     A8
    3053 000102b0     40c0          add     A6,A0   ;* get next block
    3054                            ;* check if there are no more bgnd blocks
    3055 000102c0     4840          cmp     A2,A0
    3056 000102d0     c53f          jrge    DADONE
    3057                    
    3058                            ;* if block already on display list try again
    3059 000102e0     8f0b          movb    *A8,A11
    3060 000102f0     cefa          jrn     BScanLP0
    3061                    
    3062                            ;* check if x to big
    3063 00010300     b40b          move    *A0(map_x),A11,W
         00010310     0010  
    3064 00010320     e46b          cmpxy   A3,A11
    3065 00010330                   jrxge   BScan1          ;* Jump if BlockX >= TL X
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   75

    3066                    
    3067                            ;* load map header
    3068 00010340     b40e          move    *A0(map_hdr),A14,W
         00010350     0030  
    3069 00010360     268e          sll     20,A14  ;* only want bottom 12 bits, top 4 are pal bits
    3070 00010370     2e2e          srl     15,A14  ;* leaves B9 << 5 == long word offset
    3071 00010380     40ae          add     A5,A14  ;* A14 now pts to block hdr
    3072                    
    3073                            ;* check if right end of block hangs onto screen
    3074 00010390     85c1          move    *A14,A1,W       ;A1 is now the width of the block
    3075 000103a0     4161          add     A11,A1
    3076 000103b0     e461          cmpxy   A3,A1   ;* right end of block doesn't hang on to screen
    3077 000103c0                   jrxlt   BScanLP0                ;* jump if Block X+W < TL X
    3078                    
    3079                            ;* if ycoor to big try again
    3080 000103d0     b401          move    *A0(map_y),A1,0
         000103e0     0020  
    3081 000103f0     2601          sll     16,A1
    3082 00010400     e424          cmpxy   A1,A4
    3083 00010410                   jrylt BScanLP0          ;* Jump if Block Y > BR Y
    3084                    
    3085                            ;* if ycoor+height to small try again
    3086 00010420     b5cb          move    *A14(map_h),A11,0
         00010430     0010  
    3087 00010440     260b          sll     16,A11
    3088 00010450     4161          add     A11,A1
    3089 00010460     e461          cmpxy   A3,A1
    3090 00010470                   jrylt BScanLP0          ;* Jump if Block Y+H < TL Y
    3091                    
    3092 00010480     4c07          move    A0,A7
    3093 00010490     0d3f          callr   ADDBLOCK        ;Thrashes A1,A14
         000104a0     0025  
    3094 000104b0     c9de          jrnc BScanLP0
    3095 000104c0     c020          jruc    DADONE          ;* was unable to add block - no blocks left
    3096                    
    3097 000104d0           BScan1:
    3098 000104d0     1428          dec     A8              ;* bit ptr for block on disp list
    3099 000104e0     44c0          sub     A6,A0           ;subtract off block size
    3100 000104f0           BScanLP1:
    3101 000104f0     1028          inc     A8
    3102 00010500     40c0          add     A6,A0   ;Get next block
    3103                            ;* check if there are no more bgnd blocks
    3104 00010510     4840          cmp     A2,A0
    3105 00010520     c51a          jrge    DADONE
    3106                    
    3107                            ;* if block already on display list try again
    3108 00010530     8f0b          movb    *A8,A11
    3109 00010540     cefa          jrn     BScanLP1
    3110                    
    3111                            ;* if ycoor to big try again
    3112 00010550     b401          move    *A0(map_y),A1,W
         00010560     0020  
    3113 00010570     2601          sll     16,A1
    3114 00010580     e424          cmpxy   A1,A4
    3115 00010590                   jrylt BScanLP1          ;* Jump if Block Y > BR Y
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   76

    3116                    
    3117                            ;* if ycoor+height to small try again
    3118 000105a0     b40e          move    *A0(map_hdr),A14,W
         000105b0     0030  
    3119 000105c0     268e          sll     20,A14  ;* only want bottom 12 bits, top 4 are pal bits
    3120 000105d0     2e2e          srl     15,A14  ;* leaves B9 << 5 == long word offset
    3121 000105e0     40ae          add     A5,A14  ;* B9 now pts to block hdr
    3122 000105f0     b5cb          move    *A14(map_h),A11,W
         00010600     0010  
    3123 00010610     260b          sll     16,A11
    3124 00010620     4161          add     A11,A1
    3125 00010630     e461          cmpxy   A3,A1
    3126 00010640                   jrylt BScanLP1          ;* Jump if Block Y+H < TL Y
    3127                    
    3128                            ;* if xcoor to big quit
    3129 00010650     b401          move    *A0(map_x),A1,W
         00010660     0010  
    3130 00010670     e424          cmpxy   A1,A4
    3131 00010680                   jrxlt DADONE    ;* Jump if Block X > BR X
    3132                    
    3133 00010690     4c07          move    A0,A7
    3134 000106a0     0d3f          callr   ADDBLOCK
         000106b0     0004  
    3135 000106c0     c9e2          jrnc    BScanLP1
    3136                    
    3137 000106d0           DADONE:
    3138 000106d0     09af          mmfm    SP,A0,A6,A7,A11
         000106e0     08c1  
    3139 000106f0     0960          rets
    3140                    ***********************************************************************
    3141                    
    3142                    ***********************************************************************
    3143 00010700           ADDBLOCK:
    3144                    ;* PARMS
    3145                    ; B0 - which INS routine
    3146                    ; A5 - base of background block hdr
    3147                    ; A7 - ptr to background block
    3148                    ; A8 - ptr to bit map for block on disp list
    3149                    ; A9 - Module Start Position Y:X
    3150                    ; A10 - ptr to palette table for new block
    3151                    
    3152                    ;* Returns carry set if GETOBJ fails...
    3153                            ;* Also Destroys A1,A14 but they are used as temps in DISP_ADD
    3154 00010700     098f          mmtm    SP,A0,A2,A3,A4
         00010710     b800  
    3155                    
    3156 00010720     0d5f          calla   GETOBJ
         00010730 00000000! 
    3157 00010750     ca47          jrz     ADDX
    3158                    
    3159                            ;* set bit in bitmap for block on list
    3160 00010760     8f0e          movb    *A8,A14
    3161 00010770     0bae          ori             80H,A14
         00010780 00000080  
    3162 000107a0     8dc8          movb    A14,*A8
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   77

    3163 000107b0     b300          move    A8,*A0(OPLINK),L ;set OPLINK to be a ptr to the disp list bit
         000107c0     01f0  
    3164                            
    3165 000107d0     b6e1          move    *A7(map_x),A1,L ;A1 ypos:xpos of block from Mod Base
         000107e0     0010  
    3166 000107f0     e121          addxy   A9,A1           ;Add in Module Base Position
    3167 00010800     b020          move    A1,*A0(OXPOS),W
         00010810     0090  
    3168 00010820     2e01          srl     16,A1
    3169 00010830     b020          move    A1,*A0(OYPOS),W
         00010840     00b0  
    3170 00010850     84e4          move    *A7,A4,W        ;A4 - map_z,8:map_flags,4:map_pal,4
    3171 00010860     4c83          move    A4,A3
    3172 00010870     2f03          srl     8,A3
    3173 00010880     2703          sll     24,A3
    3174 00010890     2f03          srl     8,A3
    3175 000108a0     b260          move    A3,*A0(OZVAL),L
         000108b0     00c0  
    3176                    
    3177 000108c0     b4e1          move    *A7(map_hdr),A1,W
         000108d0     0030  
    3178 000108e0     ec2e          movx    A1,A14
    3179 000108f0     260e          sll     16,A14
    3180 00010900     2c8e          srl     28,A14
    3181 00010910     248e          sll     4,A14           ;* bits 12-15 are bits 4-7 of pal index
    3182                            
    3183 00010920     2681          sll     20,A1           ;* bits 0-11 are hdr ptr;
    3184 00010930     2e21          srl     15,A1           ;* A1-long word offset into block hdr tbl
    3185 00010940     40a1          add     A5,A1           ;* A1 - Ptr to oimg hdr - input to GSAGOF
    3186                    
    3187                            ;A4 - map_z,8:map_flags,4:map_pal,4
    3188 00010950     4c83          move    A4,A3
    3189 00010960     2784          sll     28,A4           ;* last four bits for pal
    3190 00010970     2c84          srl     28,A4
    3191 00010980     41c4          add     A14,A4  
    3192 00010990     24a4          sll     5,A4            ;* A4 is lword ptr from pal tbl
    3193 000109a0     4144          add     A10,A4          ;* add in pal tbl
    3194 000109b0     4c02          move    A0,A2           ;save A0
    3195 000109c0     8680          move    *A4,A0,L        ;* get palette
    3196 000109d0     0d5f          calla   GETBPAL
         000109e0 00000000! 
    3197 00010a00     cb01          jrnz    BSetPal
    3198 00010a10     5600          clr     A0
    3199 00010a20           BSetPal:
    3200 00010a20     b002          move    A0,*A2(OPAL),W
         00010a30     0160  
    3201 00010a40     4c40          move    A2,A0           ;restore A0
    3202                    
    3203 00010a50     09e4          movi    8002H,A4        ;08000H DMA GO, 2
         00010a60 00008002  
    3204 00010a80     2f83          srl     4,A3    ;* remove palette bits
    3205 00010a90     27c3          sll     30,A3           
    3206 00010aa0     c801          jrc     SKIP0   ;* carry bit is the transparency bit
    3207 00010ab0     1024          addk    1,A4
    3208 00010ac0           SKIP0:
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   78

    3209 00010ac0     2cc3          srl     26,A3   ;* line up flip h,v bits
    3210 00010ad0     4064          add     A3,A4   ;A4 - Flags for GSAGOF
    3211 00010ae0     b220          move    A1,*A0(OIMG),L
         00010af0     0180  
    3212                    *A1=DATA BLOCK POINTER
    3213                    *A4=OBJECT FLAGS
    3214 00010b00     0d5f          calla   GSAGOF
         00010b10 00000000! 
    3215                    *A2=RETURNED WITH NEW OSIZE
    3216                    *A3=RETURNED WITH NEW SAG
    3217                    *A4=RETURNED WITH NEW OFFSET:OFLAGS
    3218 00010b30     4c01          move    A0,A1
    3219 00010b40     0b01          addi    OSIZE+20H,A1
         00010b50     0160  
    3220 00010b60     0981          mmtm    A1,A2,A3,A4             ;Stuff OSIZE,OSAG,OFFSET,OFLAGS
         00010b70     3800  
    3221                    
    3222 00010b80     0930          call    B0
    3223 00010b90     0320          clrc
    3224 00010ba0     09af          mmfm    SP,A0,A2,A3,A4
         00010bb0     001d  
    3225 00010bc0     0960          rets
    3226 00010bd0           ADDX: ;failure to get object
    3227 00010bd0     0de0          setc
    3228 00010be0     09af          mmfm    SP,A0,A2,A3,A4
         00010bf0     001d  
    3229 00010c00     0960          rets
    3230                    **********************************************************************
    3231                    
    3232                    
    3233                    ************************ D I S P   D E L *****************************
    3234                    ;* This function deletes all objs outside the given range
    3235                    ;* of coors from the display list.
    3236                    ;* The boundries are not included in the group to delete.
    3237 00010c10           DISP_DEL:
    3238                    ;***    PARMS:
    3239                    ;       A8 - bak list   
    3240                    ;       A3 - disp_tl
    3241                    ;       A4 - disp_lr
    3242                    ;*** RETURNS nothing
    3243                    
    3244                    ;Thrashes A0,A6,A7,A8,A9        ;all of which are pushed by caller
    3245                    
    3246 00010c10           del_loop:
    3247 00010c10     4d09          move    A8,A9           ; ptr to PREV in A9
    3248 00010c20     8728          move    *A9,A8,L        ; ptr to NEXT in A8
    3249 00010c30     ca2d          jrz     del_done                ; QUIT if at end of list
    3250                    
    3251                            ;if X > Xmax continue
    3252 00010c40     b507          move    *A8(OXPOS),A7,W
         00010c50     0090  
    3253 00010c60     e4e4          cmpxy   A7,A4
    3254 00010c70                   jrxlt   DEL_IT          ;* jump if BR X < Block X
    3255                    
    3256                            ;if Y > Ymax continue
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:18:49 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- BACKGROUND HANDLERS >>>                          PAGE   79

    3257 00010c80     b500          move    *A8(OYPOS),A0,W
         00010c90     00b0  
    3258 00010ca0     2600          sll     16,A0
    3259 00010cb0     e404          cmpxy   A0,A4
    3260 00010cc0                   jrylt   DEL_IT          ;* jump if BR Y < Block y
    3261                    
    3262 00010cd0     b701          move *A8(OIMG),A1,L
         00010ce0     0180  
    3263                            ;if X+width < Xmin continue
    3264 00010cf0     8426          move    *A1,A6,W                ;A6 block width
    3265 00010d00     40c7          add     A6,A7
    3266 00010d10     e467          cmpxy   A3,A7
    3267 00010d20                   jrxlt   DEL_IT          ;* jump if TL X > Block X+W
    3268                    
    3269                            ;if Y+height < Ymin continue
    3270 00010d30     b427          move    *A1(map_h),A7,0         ;A7 block height
         00010d40     0010  
    3271 00010d50     2607          sll     16,A7
    3272 00010d60     40e0          add     A7,A0
    3273 00010d70     e460          cmpxy   A3,A0
    3274 00010d80                   jrylt   DEL_IT          ;* jump if TL Y > Block Y+H
    3275                    
    3276 00010d90     c0e7          jruc    del_loop
    3277                    
    3278 00010da0           DEL_IT: ;* DELETE the OBJ
    3279                        ;* free the palette
    3280 00010da0     b500          move    *A8(OPAL),A0,W
         00010db0     0160  
    3281 00010dc0     ca03          jrz     NoFreeP
    3282 00010dd0     0d5f          calla   FREEPAL
         00010de0 00000000! 
    3283 00010e00           NoFreeP:
    3284                    
    3285                            ;* unset the on display list bit
    3286 00010e00     b700          move    *A8(OPLINK),A0,L
         00010e10     01f0  
    3287 00010e20     8e07          movb    *A0,A7
    3288 00010e30     0b87          andi    7FH,A7
         00010e40 ffffff80  
    3289 00010e60     8ce0          movb    A7,*A0
    3290                                    
    3291 00010e70     8b09          move    *A8,*A9,L       ; put NEXT link in PREV obj
    3292 00010e80     07a0          move    @OFREE,A0,L                             
         00010e90 00000000! 
    3293 00010eb0     8208          move    A0,*A8,L
    3294 00010ec0     0788          move    A8,@OFREE,L     ; Return deleted block to free stack
         00010ed0 00000000! 
    3295 00010ef0     4d28          move    A9,A8           ;A1- points to last obj
    3296 00010f00     c0d0          jruc    del_loop
    3297                    
    3298 00010f10           del_done:
    3299 00010f10     0960          rets
    3300                    
    3301                            .END

 No Errors,  No Warnings
