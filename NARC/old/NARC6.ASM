	.FILE	"NARC6.ASM"
	.TITLE	" <<< N  A  R  C  -- THE eugene ENEMY >>>"
	.WIDTH	132
	.OPTION	B,D,L
	.MNOLIST

*	GET THE SYSTEM STUFF
	.INCLUDE	"\video\MPROCEQU.ASM"	;MPROC equates
	.INCLUDE	"\video\DISPEQU.ASM"	;Display processor equates
	.INCLUDE	"\video\GSP.INC"	;GSP assembler equates
	.INCLUDE	"\video\SYS.INC"	;Zunit system equates
	.INCLUDE	"\video\MACROS.HDR"	;Macros, Yeah!
*	LOCAL STUFF
	.INCLUDE	"NARCEQU.ASM"		;NARC Equates
	.INCLUDE	"NARCTEQU.ASM"		;TODD JIZZ
	.INCLUDE	"IMGTBL.GLO"		;Image Label Equates
	.INCLUDE	"NARCFRAG.GLO"
	.INCLUDE	"NARCLOAF.TBL"		;LOFFREDO IMAGE HEADERS
	.INCLUDE	"narcxtra.glo"		;Get the Xtra image palettes	
	.GLOBAL		GETSUBDR,SUBOPEN
	.GLOBAL		ZCHK,SWAPAL0,CARCHK
	.GLOBL	LOFFCRM1,BOZCHK
	.GLOBAL	LOFDEXP,LDEXP1,OIDATA,LOFRAG1,LOFRAG2,LOFRAG3,LOFRAG4
	.GLOBAL	LOFDEXP1,LOFDFLA,LOFDROCK
	.TEXT								 
*
*LOFFREDO DISPATCHER
*
*EUGDISP
* 	MOVI	7,A0
*	MOVE	A0,@LOFMAX,W		;MAX LOF COUNT
*	MOVI	100,A0
*	MOVE	A0,@LOFFIRE,W		;LOFFREDO FIRE PROBABILITY
*	CREATE	0,DASDIS3
*	RETS
*DASDIS3
*	CLR	A5
*	MOVI	>00450E10,A14
*	CALLR	LOFCOLD
*	SLOOP	320,DASDIS3		;WAIT FOR THEM TO DIE
*
*LOAF COLD START
*A5=Y:X COORD; IF ZERO THEN MAKE-UP COORDINATE
*A6=0:Z COORD
*A14= 0; FIX NUMBER:RANDOM NUMBER; 0E; ENEMY TYPE:ENEMY SUBTYPE (BYTE FIELDS)
*
LOFCOLD:
	MMTM	SP,A0,A5,A11,A14
	MOVE	A14,A10			;SAVE OID
	MOVE	A5,A9
	MOVE	A14,A2	
	SLL	8,A2			;GET FIXED COUNT
	SRL	28,A2
	MOVE	A14,A0
	SLL	12,A0			;GET RANDOM COUNT
	SRL	28,A0
	JRZ	LOFCLD0			;BR = NO RANDOM GUYS
	CALLA	RANDU
	ADD	A0,A2
LOFCLD0
	MOVE	A14,A11			;GET SUBTYPE CODE
	SLL	28,A11
	SRL	28,A11	

*CHECK BOZO MODE
	CMPI	5,A11
	JRNE	LOFCLD00   		;RED DUDE?
	MOVE	@WAVE,A0,W
	CMPI	1,A0			;WAVE 1?
	JRNE	LOFCLD00
	MOVI	P1DATA,A0	       
	CALLR	BOZCHK
	JRC	LFCLD000
	MOVI	P2DATA,A0	       
	CALLR	BOZCHK
	JRNC	LOFCLD00
LFCLD000
	MOVI	3,A11			;CONVERT TO GREENER
LOFCLD00
	MOVI	>B0,A0
	MPYU	A0,A11
	ADDI	LTTAB,A11		;FORM TABLE REFERENCE BASE ADDR
LOFCLD1:
        CREATE	LOFPID,DAS1X		;MAKE 'EM
	DSJS	A2,LOFCLD1
	MMFM	SP,A0,A5,A11,A14
	RETS
*
*BOZO CHECK
*A0=PDATA POINTER
*CS IF PLAYER IS A BOZO
*
BOZCHK
	MMTM	SP,A1
	MOVE	*A0(POBJ),A1,L
	JREQ	BOZFAIL
	MOVE	*A0(PBUYINS),A1,W
	CMPI	IBUYINS,A1
	JRNE	BOZCK1			;BUYIN BOZO
	MOVE	*A0(PLIVES),A1,W
	CMPI	1,A1
	JRHI	BOZFAIL
BOZCK1
	MOVE	*A0(PBUSTS),A1,W
	CMPI	8,A1
	JRLS	BOZOK
BOZFAIL
	CLRC
	MMFM	SP,A1
	RETS
BOZOK
	SETC
	MMFM	SP,A1
	RETS
*
*LOAF TYPES
*DOOR PROB, KNEEL PROB, LAY PROB, CASH PROB, DRUG PROB, AMMO PROB
*
DORPRB	EQU	0
KNLPRB	EQU	>10
LAYPRB	EQU	>20
BUKPRB	EQU	>30
DRGPRB	EQU	>40
CLPPRB	EQU	>50	
ROKCNT	EQU	>60
LSPEED	EQU	>70
ANIRATE	EQU	>80
SWPAL	EQU	>90
*
LTTAB:
	.WORD	300,000,000,000,200,000,000,>0100,>0005		;"0" STANDUP DUDE
	.LONG	0
	.WORD	999,000,000,200,000,000,000,>0100,>0005		;"1" DOOR STANDUP
	.LONG	0
	.WORD	999,400,400,150,150,100,000,>0140,>0004		;"2" DOOR  KNEEL/LAYDOWN
	.LONG	fnklof
	.WORD	300,400,400,150,150,100,000,>0140,>0004		;"3" KNEEL/LAYDOWN
	.LONG	fnklof
	.WORD	300,000,000,000,000,000,002,>0100,>0005		;"4" ROCKET MAN STANDUP 
	.LONG	blulof	
	.WORD	300,400,400,000,200,000,000,>0200,>0003		;"5" SUPER LOAF KNEEL/LAYDOWN
	.LONG	pnklof
	.WORD	300,000,000,000,000,999,000,>0100,>0005		;"6" bullet MAN STANDUP 
	.LONG	blulof	
	.WORD	000,400,400,000,200,000,000,>0200,>0003		;"7" CHOP SUPER LOAF 
	.LONG	pnklof
	.WORD	000,400,400,150,150,100,000,>0140,>0004		;"8" JUMPERS
	.LONG	fnklof
*
*DISPATCH YOUR LOFS
*A9=Y:X COORD
*A10=OID
*A11=LTTAB TYPE ADDRESS
DAS1X:
	MOVE	@LOFCNT,A0,W
	MOVE	@LOFMAX,A1,W
	CMP	A0,A1
	JRGT	DAS10
	MOVE	@LOFWAIT,A0,W
	CMPI	8,A0
	JAHS	SUCIDE			;DIE, MANY WAITING
	INC	A0
	MOVE	A0,@LOFWAIT,W
	CLR	A9			;WIPE OUT PREFAB COORD.
	SLEEP	3
	MOVE	@LOFWAIT,A0,W
	DEC	A0
	MOVE	A0,@LOFWAIT,W
	JRUC	DAS1X			;CHECK FOR WAKEUP
DAS10
	MOVE	A9,A9 			;COORD PREFAB?
	JRNE	LOFWST			;YES

	MOVE	@WORLDTL,A1,W		;COME FROM EDGE OF SCREEN
	MOVE	@SCROLLX,A2,L
	MOVI	250,A0
	CALLA	RANDPER
	JRNC	DAS2X 		
	NEG	A2			;COME FROM BEHIND
DAS2X:
	MOVE	A2,A2
	JRN	DAS3X
      	ADDI	512,A1			;START HIM AT RIGHT SCREEN EDGE
DAS3X:
	ZEXT	A1			;Y COORDINATE
	MOVE	@PLYMIN,B0,W
	MOVE	@PLYMAX,B1,W
	CALLA	RANGRAND
	SUBI	72,A0
	SLL	16,A0
	ADD	A0,A1
	MOVE	A1,A9
*
*WARM START A LOAF
*A9=Y:X POSITION
*A10=OID
*A11=PARAMETER LIST
LOFWST:
	MMTM	A12,A10,A11		;SAVE STUFF ON PROCESS STACK
	MOVE	*A11(KNLPRB),A0,L	;GET KNLPRB, LAYPRB
	MOVE	A0,*A13(ETEMP1),L
	MOVE 	*A11(DORPRB),A0,W	;COME OUT OF A DOOR?
	CALLA	RANDPER
	JRNC	LOFFF0		;NO

*DISPATCH FROM SUBWAY DOOR	
	CALLA	GETSUBDR
	JREQ	LOFFF00
	MOVE	A6,A9
	CREATE	INDPID,SUBOPEN	
	MOVI	LOFINIT,A14
	CALLA	DOORRITE
	MOVI	[1,1],A5	;NORMAL SPEED LOFFREDO
	MOVI	LOFTAB,A6
	CALLA	ESINITUL	;CREATE DAS LOFF
	JAEQ	SUCIDE		;CREATE BOMBED
	MMFM	A12,A10,A11	;GET BACK JIVE
	CALLR	SWAPAL
	MOVE	A10,*A8(OID),W	;SAVE OBJECT ID
	SLEEP	20		;WAIT FOR DOOR TO OPEN
	JRUC	LOFFF01

*DISPATCH FROM A REGULAR DOOR
LOFFF00
	CALLA	GETDOOR			;GO GET YOUR DOOR
	JREQ	LOFFF0			;NO DOORS AVAILABLE
	JSRP	DOOROPEN		;OPEN SEZ-A-ME
	CREATE 	INDPID,CLOZDOOR		;CLOSE THE DOOR
	MOVI	LOFINIT,A14
	CALLA	DOORRITE
	MOVI	[1,1],A5	;NORMAL SPEED LOFFREDO
	MOVI	LOFTAB,A6
	CALLA	ESINITUL	;CREATE DAS LOFF
	JAEQ	SUCIDE		;CREATE BOMBED
	MMFM	A12,A10,A11		;GET BACK JIVE
	CALLR	SWAPAL
	MOVE	A10,*A8(OID),W	;SAVE OBJECT ID
	MOVI	[-1,0],A2	;X VELOCITY
	MOVI	LOFWLR,A9      	;GET ANIMATION SCRIPT
	MMTM	A12,A10,A11  	;SAVE JIVE
	JSRP	OUTDOOR
	MMFM	A12,A10,A11  	;GET BACK JIVE
	JRUC	LOFINC

*
*GET A DIFFERENT PALETTE
*A8=OBJECT, A0=NEW PALETTE
SWAPAL:
	move	*A11(SWPAL),A0,L
SWAPAL0:
	MOVE	A0,A0
	JRZ	SWPLX			;NO NEW PALETTE
	calla	GETFPAL
	jrz	SWPLX
	move	A0,A1
	move	*A8(OPAL),A0,W
	calla	FREEPAL
	move	A1,*A8(OPAL),W
SWPLX
	RETS

* THE LOFFREDO ENEMY PROCESS						 *
* A1  = Y:X INITIAL ENEMY POSITION
* A5  = Y:X SPEED	
* A6  = PTR TO MAIN ANIMATION TABLE
* A10 = OID
* A11 = INIT TABLE
LOFFF0:
	MOVE	A9,A1
	MOVI	[1,1],A5	;NORMAL SPEED LOFFREDO
	MOVI	LOFTAB,A6
	MOVI	LOFINIT,A14	;LOFFREDO ENEMY INIT
	CALLA	ESINITUL	;CREATE DAS LOFF
	JAEQ	SUCIDE		;CREATE ERROR, EXIT
	MMFM	A12,A10,A11	;GET BACK JIVE
	CALLR	SWAPAL
	MOVE	A10,*A8(OID),W	;SAVE OBJECT ID
LOFFF01:
	MOVI	LOFWLR,A9      	;GET ANIMATION SCRIPT
LOFINC:
	MOVE	@LOFCNT,A0,W
	INC	A0
	MOVE	A0,@LOFCNT,W 	;INCREMENT THE GLOBAL LOF COUNT

	MOVE	*A11(BUKPRB),A0,W	;GIVE HIM SOME MONEY?
	CALLA	RANDPER
*	JRNC	LOFFF1			;NO
	MOVK	1,A0
	CALLA	ADDBUCKS
LOFFF1:
	MOVE	*A11(DRGPRB),A0,W   	;GIVE HIM SOME BUCKS?
	CALLA	RANDPER
	JRNC	LOFFF2		;NO
	MOVK	1,A0
	CALLA	ADDDRUGS
LOFFF2: 
	MOVE	*A11(CLPPRB),A0,W
	CALLA	RANDPER
	JRNC	LOFFF3
	MOVK	1,A0
	CALLA	ADDCLIPS
LOFFF3:
	MOVE	*A11(ROKCNT),A0,W	;GET ROCKETS
	CALLA	ADDROCKS

	MOVE	*A11(LSPEED),A0,W	;GET SPEED
	SLL	8,A0
	MOVE	A0,*A13(ETEMP2),L
	
	MOVE	*A11(ANIRATE),A0,W	;GET SLEEP TIME
	MOVE	A0,*A13(ETEMP3),W

	
	MOVE 	*A8(OID),A0,W
	SLL	28,A0
	SRL	28,A0
	CMPI	7,A0
	JRHS	LOFCHOP		;CHOPPER DUDE

	MOVI	120,A0
	CALLA	RANDPER
	JRNC	LOFLOOP0
	CALLA	SELCTPLY	;TARGET PLAYER IN A11
	JSRP	LOFHANG		;HANG OUT FOR A BIT

LOFLOOP0:
	CALLA	SELCTPLY	;TARGET PLAYER IN A11
LOFLOOP:
	JSRP	CKLBUST
	JSRP	CKGVUP1

*GET VELOCITY

LOFLOOP1:
	MOVE	A11,A0		;TARGET PLAYER IN A0
	CALLA	GETPLYR
	MOVE	*A0(POBJ),A0,L 	;PLAYER OBJECT
	CALLA	XZCHK
	MOVE	*A13(ETEMP2),A5,L	;GET Z VEL
	MOVE	A5,A6			;GET X VEL
	MOVE	A2,A2
	JRNN	LOFZ1
	NEG	A5		
LOFZ1:
	CMPI	4,A4		;IF TOO CLOSE, ZERO OUT	ZVEL
	JRHI	LOFX0
	CLR	A5
LOFX0:
	MOVE	A1,A1
	JRNN	LOFX1
	NEG	A6		
LOFX1:
	CMPI	80,A3		;IF TOO CLOSE, ZERO OUT	XVEL
	JRHI	LOFX2
	CLR	A6
LOFX2:
	MOVE	A5,*A8(OYVEL),L
	MOVE	A5,*A8(OZVEL),L
	MOVE	A6,*A8(OXVEL),L
	OR	A6,A5		 ;STOPPED?
	JRNE	LOFX3		 ;NO
	MOVI	LOFSTND,A9	 ;SET HIS STOPPED FRAME

	MOVI	15,A0
	CALLA	RANDPER
	JRNC	LOFX3
	JSRP	LOFHANG	         ;HANG OUT FOR A BIT
	JRUC	LOFLOOP

LOFX3:
	MOVE	A6,A6
	JREQ	LOFX5
*	JRNE	LOFX4
*	MOVI	50,A0
*	CALLA	RANDPER
*	JRNC	LOFX5
*	JRUC	LOFBAK		;BACK OFF, DUDE
LOFX4:
	CALLA	FLP
LOFX5:
	CALLA	SHVELCPY	 

*CHECK OUT A SHOT

	JSRP	LOFSHOOT
	JRNC	LOFLP1

	MOVI	LOFSTND,A9
	JRUC	LOFLP2
	
LOFLP0:
	MOVI	LOFWLR,A9
LOFLP1:
	CALLA	ZCHK
	MOVI	4,A1
	JSRP	FRANIM			;WALK AROUND A BIT
	JRC	LOFLP0
	MOVE	*A13(ETEMP3),A0,W
	CALLA	PRCSLP
LOFLP2:
	CALLR	OFSCRCK			;OFF SCREEN CHECK
	JRUC	LOFLOOP
*
*LOF BACK OFF
*
*LOFBAK:	
*	MOVI	30,A0
*	CALLA	RANDU
*	ADDI	10,A0
*	MOVE	A0,A10		;BACKOFF COUNT
*	MOVI	LOFBKOF,A9	;GET ANIMATION SEQUENCE
*LOFBAK0:
*	JSRP	CKLBUST
*	MOVE	A11,A0		;TARGET PLAYER IN A0
*	CALLA	GETPLYR
*	MOVE	*A0(POBJ),A0,L 	;PLAYER OBJECT
*	CALLA	XZCHK
*	MOVI	>10000,A5	;GET Z VEL
*	MOVE	A2,A2
*	JRNN	LOFBZ1
*	NEG	A5		
*LOFBZ1:
*	CMPI	6,A4		;IF TOO CLOSE, ZERO OUT	ZVEL
*	JRHI	LOFBX0
*	CLR	A5
*LOFBX0:
*	MOVI	>10000,A6	;GET X VEL
*	MOVE	A1,A1
*	JRN	LOFBX1
*	NEG	A6		
*LOFBX1:
*	MOVE	A5,*A8(OYVEL),L
*	MOVE	A5,*A8(OZVEL),L
*	MOVE	A6,*A8(OXVEL),L
*	MMTM	SP,A3
*	MOVE	A6,A6
*	JRN	LOFBX2
*	CALLA	YFLP
*	JRUC	LOFBX3
*LOFBX2:
*	CALLA	NOYFLP
*LOFBX3:
*	CALLA	SHVELCPY	 
*	MMFM	SP,A3
*	JSRP	LOFSHOOT
*	JRNC	LOFBAK2
*
*	MOVI	LOFBSTND,A9
*	JRUC	LOFBAK3
*
*LOFBAK1:
*	MOVI	LOFBKOF,A9
*	MOVI	0,A1
*LOFBAK2:
*	JSRP	FRANIM			;WALK AROUND A BIT
*	JRC	LOFBAK1
*LOFBAK3:
*	CALLR	OFSCRCK			;OFF SCREEN CHECK
*	DSJ	A10,LOFBAK0
*	MOVI	LOFWLR,A9		;TIME OUT, SPLIT
*	JRUC	LOFLOOP0
*
*LOFFREDO HANG OUT
*
LOFHANG:
	CALLA	PSTOP
	MOVI	4,A0
	CALLA	RANDU
	DEC	A0
	SLL	5,A0
	ADDI	HANGTAB,A0
	MOVE	*A0,A9,L	;GET YOUR HANG OUT FRAME
LOFHNG1
	JSRP	CKLBUST
	JSRP	CKGVUP1
	CLR	A1
	JSRP	FRANIM
	JRNC	LOFHNG1
	MOVI	LOFSTND,A9	 ;SET HIS STOPPED FRAME
	RETP
*
*LOFREDO SHOOT
*A8=OBJ, A3=ABS DX, A11=PLAYER
*RETURNS CC= NO SHOT, CS = SHOOT
*
LOFSHOOT:
	MOVE	@WAVE,A0,W
	CMPI	1,A0		;WAVE 1?
	JRNE	LOFSH00		;NO
	MOVE	A11,A0		;TARGET PLAYER IN A0
	CALLA	GETPLYR
	CALLR	BOZCHK
	JRNC	LOFSH00		;NO BOZO TARGET
	MOVE	@LOFFIRE,A0,W
	SRL	1,A0	
	JRUC	LOFSH01		;SHOOT HALF AS OFTEN
LOFSH00
	MOVE	@LOFFIRE,A0,W
LOFSH01
	CALLA	RANDPER
	JRNC	LOFSHX		;NO GO
	CMPI	30,A3		;TOO CLOSE FOR A SHOT?
	JRLS	LOFSHX
	CALLA	ZCHK
	MOVI	LOFSS,A9

	MOVE	*A13(ETEMP1),A0,W	;GO FOR A SQUAT SHOT?
	CALLA	RANDPER
	JRNC	LOFSH0		;NO
	CMPI	40,A3		;TOO CLOSE FOR A DOWNER?
	JRLS	LOFSH0
	MOVI	LOFKS,A9
	JRUC	LOFSH1
LOFSH0:
	MOVE	*A13(ETEMP1+>10),A0,W	;GO FOR A DOWN SHOT?
	CALLA	RANDPER
	JRNC	LOFSH1		;NO
	CMPI	70,A3		;TOO CLOSE FOR A DOWNER?
	JRLS	LOFSH1
	MOVI	LOFSL,A9
LOFSH1:
	CALLA	PSTOP
	MOVE	A11,A0
	CALLA	FACEPLYR		;FACE THE PLAYER BOYS
	MOVI	1,A1
	JSRP	FRANIM	     
	SETC
	RETP
LOFSHX:
	CLRC
	RETP
*
*LOAFER ON A CHOPPER
*A8  = LOF
*A10 = CHOPPER MAIN
*A11 = PLAYER SELECTED
*
LOFCHOP:
*FIND A CHOPPER
	MOVE	@CARLIST,A10,L
	JREQ	LOFLOOP0
CSCL1
	MOVE	*A10(OID),A1,W
	CMPI	CAR3OID|CBODYID,A1
	JREQ	CSCLX

	MOVE	*A10(OSLINK),A10,L
	JRNE	CSCL1
	JRUC	LOFLOOP0		
CSCLX
	CLR	A0   		;COUNT CHOPPER LOFS
	MOVE	@ENEMIES,A1,L
	JREQ	CSCL3
CSCL20
	MOVE	*A1(OID),A2,W
	CMPI	>0E18,A2
	JRNE	CSCL200
	INC	A0
CSCL200
	CMPI	>0E17,A2
	JRNE	CSCL2
	INC	A0
CSCL2	MOVE	*A1(OSLINK),A1,L
	JRNE	CSCL20
CSCL3	
	DEC	A0   			;COMPUTE OFFSET
	MOVI	21,A1
	MPYU	A1,A0
	MOVI	6,A0
	CALLA	SRAND
	SUBK	4,A0
	ADD	A1,A0
	MOVE	A0,*A13(ETEMP4),W	;OFFSET FROM CENTER
	MOVI	LOFLY,A9		;MAKE THE DUDE FLY
	MOVK	4,A1
	JSRP	FRANIM
LOFCHLP:
	CALLR	LOFCH1
	CALLA	SCRTST		;ONLY JUMP ON SCREEN
	JRNE	LOFCHSL
	MOVI	4,A0		;JUMP EVERY NOW AND THEN FOR FUN
	MOVE	*A8(OID),A1,W
	CMPI	>E18,A1
	JRLO	LOFCHS7
	MOVE	*A8(OXVEL+>10),A1,W
	JRLE	LOFCHS7
	MOVE	@WORLDTL,A1,W		;COME FROM EDGE OF SCREEN
	ADDI	80,A1
	MOVE	*A8(OXPOS),A2,W
	CMP	A2,A1
	JRHS	LOFCHS7
	MOVI	999,A0	       	;JUMPERS REALLY GO FOR IT!!!!
LOFCHS7
	CALLA	RANDPER
	JRC	LDOWN
	JSRP	LCHFIRE
LOFCHSL
	SLEEP	2
	JRUC	LOFCHLP
*
*LOF FIRE FROM CHOPPER
*
LCHFIRE
	CALLA	SELCTPLY	;TARGET PLAYER IN A11
	MOVE	A11,A0		;TARGET PLAYER IN A0
	CALLA	GETPLYR
	MOVE	*A0(POBJ),A0,L 	;PLAYER OBJECT
	CALLA	XZCHK		;COMPUTE DELTA X,Z
	CMPI	40,A4
	JRLS	LCHF0		;OK FOR SHOT
	MOVI	P1DATA,A0	;TRY THE OTHER ONE
	CMP	A0,A11
	JRNE	LCHF00
	MOVI	P2DATA,A0	;CHECK OTHER
LCHF00
	MOVE	*A0(POBJ),A0,L 	;PLAYER OBJECT
	JREQ	LCHFX
	CALLA	XZCHK		;COMPUTE DELTA X,Z
	CMPI	40,A4
	JRHS	LCHFX		;Z TOO FAR OFF FOR SHOT
LCHF0
	MOVE	A1,A1
	CALLA	FLP		;FLIP PROPERLY
	MOVI	LOFHF,A9
	MOVE	*A8(OYPOS),A3,W
	MOVE	*A0(OYPOS),A4,W
	SUB	A3,A4
	ABS	A4
	CMPI	30,A4
	JRHS	LCHF1
	MOVI	LOFKS,A9
LCHF1
	CALLA	DFRMGRND        ;IS HE ON THE GROUND?
	CMPI	20,A1
	JRHS	LCHF2		;NO
	MOVI	LOFKS,A9	;YES, DONT SHOOT DOWN
LCHF2
	CALLR	LOFCH1		;DO YOUR SHOOT DUDE
	SLEEP	4
	MOVK	4,A1
	JSRP	FRANIM
	JRNC	LCHF2
	RETP
LCHFX
	MOVI	LOFLY,A9  	;DEFAULT FRAME
	MOVK	4,A1
	JSRP	FRANIM
	SLEEP	10
	RETP
*
*CHECK LOF VELOCITY, POSTION AND JUMP
*A8=LOAF
*A10=CHOPPER
LOFCH1
	MOVE	*A10(OCVECT),A0,L
	CMPI	DUMCOLL,A0
	JREQ 	LDOWN0	  	;JUMP OFF THE DEAD CHOPPER

*GET X COORD STRAIGHT
	SWAP	A10,A8
	CALLA	GETANIXY
	SWAP	A10,A8
	MOVE	*A8(OSIZEX),A0,W
	SLL	15,A0
	SUB	A0,A3
	MOVE	*A13(ETEMP4),A1,W	   	;ADD IN YOUR OFFSET
	MOVE	*A10(OFLAGS),A0,W 		;CHECK HELI-FLIP
	BTST	B_FLIPH,A0
	JREQ	LOFCH10
	NEG	A1
LOFCH10
	SLL	16,A1
	ADD	A1,A3
	MOVE	A3,*A8(OXVAL),L

*GET Y COORD STRAIGHT
	MOVE	A2,A1
	CALLA	GETANIXY
	ADDI	>FFC00000,A2
	SUB	A2,A1
	MOVE	*A8(OYVAL),A0,L
	ADD	A1,A0
	MOVE	A0,*A8(OYVAL),L
*GET Z COORD STRAIGHT
	MOVE	*A10(OZPOS),A2,W	
	ADDI	4,A2
	MOVE	A2,*A8(OZPOS),W
*GET VELOCITIES STRAIGHT
	MOVE	*A10(OXVEL),A3,L	
	MOVE	*A10(OYVEL),A4,L	
	MOVE	*A10(OZVEL),A5,L	
	MOVE	A3,*A8(OXVEL),L	
	MOVE	A4,*A8(OYVEL),L	
	MOVE	A5,*A8(OZVEL),L	
	RETS
*
*LOF JUMP DOWN AND LAND
*A8=OBJECT SITTING ON CHOPPER WITH CHOPPER XVEL
*
LDOWN0
	MOVE	A13,A12
	ADDI	PRCSIZ,A12	;FORM PROCESS STACK POINTER
	ADDK	32,SP		;PULL OFF CALL
LDOWN:
	CALLR	LSHADST
	MOVI	LOFJMP,A9     	;JUMP ON THE DUDE
	MOVI	->20000,A0	;JUMP UP A SMIDGE
	MOVE	A0,*A8(OYVEL),L
	CLR	A0
	MOVE	A0,*A8(OZVEL),L
	CALLA	SHVELCPY	;COPY VELOCITY TO SHADOW
JUMP0:
	MOVK	4,A1   		;DO YOUR ANIMATION
	JSRP	FRANIM
	JRNC	JUMP1
	MOVI	LOFJMP0,A9	;HOLDING FRAME
	JRUC	JUMP0
*FALLING GRAVITY PROCESS
JUMP1:
	SLEEP	3
	MOVE	*A8(OXVEL),A0,L		;DAMP OUT XVEL
	MOVE	A0,A1
	SRA	5,A1
	SUB	A1,A0
	MOVE	A0,*A8(OXVEL),L
	CALLA	SHVELCPY		;COPY VELOCITY TO SHADOW
	MOVE	*A8(OYVEL),A0,L		;EFFECT OF GRAVITY
	ADDI	>5000,A0
	MOVE	A0,*A8(OYVEL),L
	JRN	JUMP0			;UPWARD VEL, NO LAND
	CALLA	DFRMGRND
	CMPI	10,A1
	JRGT	JUMP0			;IN THE AIR STILL

	MOVI	>E15,A0			;CHANGE ID TO SUPER LOAF
	MOVE	A0,*A8(OID),W
	MOVI	LOFLND,A9	     ;LANDING FRAMES
	MOVK	1,A1
	JSRP	FRANIM

	CALLA	PSTOP			;STOP THE SUCKER   
	MOVE	A8,A0			;OBJECT IN A0 FOR SETZPOS
	CALLA	DELSHAD
	CALLA	SETZPOS			;ADJUST THE MUTHA
	JRUC	LOFLOOP0
*
*START A SHADOW IF NONE EXISTS
*A8=OBJECT TO BE SHADOWED
LSHADST:
	MMTM	SP,A0
	MOVE	*A8(OSHAD),A0,L
	JRNE	LSHADSX		;ALREADY GOT ONE
	CALLA	SHADST
LSHADSX
	MMFM	SP,A0
	RETS

*
*LOF RUN AWAY
*CHANGE YOUR SPEED
*GET DIRECTION
*RUN OFF SCREEN
*
LOFRUN:
	MOVI	500,A0
	CALLA	RANDPER
	JRNC	LOFR00
	MOVI	FREZSND,A0
	CALLA 	ONESND
LOFR00:
	MOVE	A11,A0
	CALLA	XZCHK
	MOVI	>20000,A0	;GET FLEE VELOCITY
	MOVE	A1,A1
	JRNN	LOFR01
	NEG	A0
LOFR01:
	MOVE	A0,*A8(OXVEL),L
	CALLA	SHVELFLP		;DO SHADOW VELOCITY AND FLIP
	MOVI	2,A11			;GET # OF STEPS
LOFRUNL:	
	CALLA	ZCHK
	MOVI	LOFWLR,A9
	MOVI	1,A1
	JSRP	FRANIM
	CALLR	OFSCRCK			;OFF SCREEN CHECK
	DSJS	A11,LOFRUNL

	MOVI	2,A0			;GET RANDOM # OF STEPS
	CALLA	RANDU
	ADDI	1,A0
	MOVE	A0,A11
LOFRNL:	
	MOVI	LOFWLR,A9
	MOVI	1,A1
	JSRP	FRANIM
	CALLR	OFSCRCK			;OFF SCREEN CHECK
	JSRP	CKGVUP
	DSJS	A11,LOFRNL
	MOVI	LOFWLR,A9
	JRUC	LOFLOOP0 		;HE GOT AWAY...
*
*CHECK GIVE UP
*CALLED FROM MAIN LOOP
CKGVUP1:
	MOVE	@DEATHCNT,A0,W
	CMPI	3,A0
	JRLS	CKGVX
	MOVE	@LOFCNT,A0,W
	CMPI	2,A0
	JRHI	CKGVX
	MOVI	600,A0
	CALLA	RANDPER
	JRNC	CKGVX
	CALLA	PSTOP
	MOVI	10,A10
CKGV1L:
	SLEEP	2
	MOVI	CHANCVSD,A0
	MOVI	EXPLOPRI,A1	
	CALLA	CKSNDPRI
	JRNC	GIVUP
	DSJS	A10,CKGV1L
	JRUC	GIVUP

*CALLED FROM LOFRUN
CKGVUP:
	CALLA	GETCPLY
	MOVE	*A0(POBJ),A0,L
	MOVI	20,A6
	MOVI	90,A5
	CALLA	XZCHK
	JRNC	CKGVX

*IS PLAYER FACING YOU ?
	SRA	31,A1
	MOVE	*A0(OFLAGS),A2,W
	XOR	A1,A2
	BTST	B_FLIPH,A2
	JREQ	CKGVX		;PLAYER NOT FACING ENEMY
	MOVI	>300,A0
	CALLA	RANDPER
	JRNC	CKGVX

GIVUP:
	CALLA	PSTOP 		;STOP THE DUDE
	MOVI	IGIVSND,A0
	CALLA	ONESND
	CLR	A1
	MOVI	LOFBUST,A9	;GIVE UP POSE
	JSRP	FRANIM
	MOVI	10,A0		;GET TIME TO WAIT
	CALLA	RANDU
	ADDI	30,A0
	MOVE	A0,A10
CKGVL:
	CALLA	CKBUST		;WAIT TO BE BUSTED
	JRC	CKGV0
	SLEEP	5
	DSJS	A10,CKGVL
	MOVE	A13,A12
	ADDI	PRCSIZ,A12	;FORM PROCESS STACK POINTER
*	MMFM	A12,A0		;PULL CALL OFF STACK
	JRUC	LOFR00		;RUN AWAY, NO BUST
CKGV0:
	MOVI	LOFBUST,A9	;GET ANIMATION FOR BUST
	MOVI	>10,A2		;ESCAPE PROBABILITY
	JSRP	GBUST		;GET BUSTED
	JRC	CKGV1		
*	MMFM	A12,A0		;PULL CALL OFF STACK
	MOVE	A13,A12
	ADDI	PRCSIZ,A12	;FORM PROCESS STACK POINTER
	JRUC	LOFRUN		;NO LONGER BUSTED, RUN AWAY
CKGV1:
	DECW    @LOFCNT
	JAUC	SUCIDE		;WE'RE TOTALLY BUSTED, DIE
CKGVX:
	RETP
*
*CHECK IF LOF BUSTED
*A8=OBJECT
CKLBUST:
	CALLA	CKBUST		;ARE WE BUSTED?
	JRNC	CKLBSTX    	;NO WE ARE NOT...
	CALLA	ZCHK
	MOVI	LOFBUST,A9	;GET ANIMATION FOR BUST
	MOVI    70,A2		;BUST PROBABILITY
	JSRP	GBUST		;GET BUSTED
	JRC	CKLBST1		;NO LONGER BUSTED, RUN AWAY
	ADDK	>20,A12		;PULL CALL OFF STACK
	JRUC	LOFRUN
CKLBST1:
	DECW    @LOFCNT
	JAUC	SUCIDE		;WE'RE TOTALLY BUSTED, DIE
CKLBSTX:
	RETP
*
*CHECK IF LOAF OFFSCREEN AND DIE
*A8=LOAF OBJECT
OFSCRCK:
	MOVE	@WORLDTL,A0,W		;CHECK FOR FAR OFF SCREEN
	ADDI	256,A0			;NORMALIZE FOR SCREEN CENTER
	MOVE	*A8(OXPOS),A1,W	
	SUB	A0,A1
	ABS	A1
	CMPI	330,A1
	JRLS	LOFOFOK			;NOT OFF SCREEN
	MOVE	@LOFWAIT,A0,W
	JRNE	LOFOFFX			;GUYS WAITING, CAN IT
LOFOFOK
	RETS
LOFOFFX:
	MOVE	*SP+,A0,L	;PULL CALL OFF STACK
	DECW    @LOFCNT
	MOVE	A8,A0
	CALLA	DELENEMY	;OFF ENEMY
	JAUC	SUCIDE		;BAG IT...
*
*LOFFREDO HIT BY A CAR
*A0 = PTR TO LOF OBJECT
*A8 = PTR TO OBJECT THAT SMASHED HIM
*
LOFCAR:
	CALLA	CARCHK
	JRC	LOFCSND
	RETS
LOFCSND:
	PUSH	A0
	SOUND1	LCARSND			;THUD!
	PULL	A0
	JRUC	LOFBUL

LCARSND
	.WORD	>F000|SPEAKPRI,>A,>8044,>8011,0
LFALSND
	.WORD	>F000|SPEAKPRI+1,>20,>8016,0

*
*LOFFREDO HIT BY A BULLET
*A0 = PTR TO LOF OBJECT
*A8 = PTR TO OBJECT THAT SMASHED HIM
*
LOFBUL:
*MAKE A BLOOD SPLAT
	MMTM	SP,A0,A1,A3,A8
	MOVE	*A8(OYPOS),A9,W
	MOVE	*A8(OID),A11,W
	MOVE	A0,A8
	CREATE	0EDH,SPLATBOX
	MMFM	SP,A0,A1,A3,A8
*DEATH BY BULLET
	MOVE	*A8(OXVEL),A1,L		;GIVE HIM BULLET VELOCITY
	SRA	1,A1
	MOVE	*A8(OID),A2,W
	ANDI	>FF0,A2
	CMPI	TRAN1OID,A2  		;IF CAR GIVE HIM MORE OF A HIT
	JREQ	LOFBUL1
	SRA	1,A1
LOFBUL1
	MOVE	A1,*A0(OXVEL),L
	MOVE	*A0(OSHAD),A2,L
	JREQ	LOFBL000
	MOVE	A1,*A2(OXVEL),L
LOFBL000:
	MOVE	@LOFCNT,A1,W		;DECREMENT CLOWN COUNT
	DEC	A1
	MOVE	A1,@LOFCNT,W
*	MOVI	SPLTCOLBOX,A14
	MOVI	DUMCOLL,A14
	MOVE	A14,*A0(OCVECT),L	;COLLISION POINTER NULL FOR NOW
	MOVE	A0,A8
	CALLA	SCRKIL			;SCORE YOUR POINTS

	MOVE 	*A8(OID),A0,W
	SLL	28,A0
	SRL	28,A0
	CMPI	7,A0
	JRNE	LOFBL001		;CHOPPER DUDE

	CALLA 	OIDATA 			;GET PLAYER DATA FROM OID
	JRC	LOFBL001		;NOT PLAYER KILL
	MOVI	>2500,A1
	CALLA	SCORE			;GET YOUR BONUS FOR DUDE
	CALLA	PUT2x5K			;DO A FLOATER

LOFBL001
	MOVE	*A8(OPLINK),A0,L
	MOVI	0EDh,A1
	MOVI	LOFDIE1,A7
	CALLA	XFERPROC		;CREATE A NEW ENEMY DEATH PROCESS
	CLRC				;TELL COLLISION SCANNER NOT TO DELETE
	RETS
*
*FALL DOWN DEAD
*A8=LOF OBJECT
*
LOFDIE1:
	CALLA   GRUNTRND
	CALLA	DROPSTUF
	CALLA	DFRMGRND
	CMPI	10,A1
	JRLT	LOFDIE2			;ON THE GROUND	BYPASS

	CALLA	PSTOP
	MOVI	>18000,A2
	MOVE	@WORLDTL,A1,W		;GO TOWARD CENTER SCREEN
	ADDI	250,A1
	MOVE	*A8(OXPOS),A0,W
	SUB	A0,A1
	JRNN	LOFDIE0
	NEG	A2
LOFDIE0
	MOVE	A2,*A8(OXVEL),L
	MOVI	>20000,A0	
	MOVE	A0,*A8(OYVEL),L
	CALLA	LSHADST
LOFDIE1L:
	SOUND1	LFALSND
	MOVI	LOFALL,A9
	MOVK	4,A1
	JSRP	FRANIM
LOFDIE10
	MOVE	*A8(OYVEL),A0,L		;EFFECT OF GRAVITY
	ADDI	>7FFF,A0
	MOVE	A0,*A8(OYVEL),L
	SLEEP	6
	CALLA	DFRMGRND
	CMPI	10,A1
	JRGT	LOFDIE10		;STILL IN THE AIR
	MOVE	A8,A0  			;GET RID OF SHADOW IF ANY
	CALLA	SETZPOS			;ADJUST THE MUTHA
LOFDIE2	
	MOVE	A8,A0  			;GET RID OF SHADOW IF ANY
	CALLA	DELSHAD
	MOVI	LOFDBUL,A9      	;DO YOUR DEATH ANIMATION
LOFDIE3
	CALLA	ZCHK
	CLR	A1
	JSRP	FRANIM
	JRNC	LOFDIE3
*
*SINK INTO THE GROUND
*A8=LOF OBJECT
*
	MOVI	[1,1],A9
	CREATE	0DFh,ESINK     	;CREATE THE DEADMAN SINK	 
	JAUC	SUCIDE		;DIE
*
*ROCKET,EXPLODE COLLISION ROUTINE
*A0 = PTR TO LOFFREDO OBJECT
*A8 = PTR TO OBJECT THAT SMASHED HIM
*ENEMY EXPLODE
LOFCOLE
	MOVE 	*A0(OID),A1,W
	SLL	28,A1
	SRL	28,A1
	CMPI	7,A1
	JREQ	LOFCOLX		;NO CHOPPER DUDE ON ENEMY EXPLODE
	
LOFCOL0
	MOVE	*A8(OXVEL),A9,L		;GET PROJECTILE DATA
	MOVE	*A8(OYVEL),A10,L
	MOVE	*A8(OID),A11,W		

	MOVE	A8,A6			;STORE KILLERS OBLOCK
	MOVE	A0,A8       		;PASS WASTED GUYS POINTER
	CALLA	DELSHAD
	MOVI	DUMCOLL,A14
	MOVE	A14,*A0(OCVECT),L	;COLLISION POINTER NULL FOR NOW

	MOVE	*A0(OPLINK),A0,L
	MOVI	0EDh,A1
	MOVI	WENDIE,A7
	CALLA	XFERPROC			;CREATE A NEW ENEMY DEATH PROCESS

	MOVE	*A6(ODMAXY),*A0(PDATA),L	;PASS KILLERS DMA XY POSITION
	MOVE	*A6(OSIZE),*A0(PDATA+20H),L	;AND KILLERS XY SIZE

	MOVE	@LOFCNT,A9,W
	DEC	A9
	MOVE	A9,@LOFCNT,W
LOFCOLX
	CLRC			;TELL COLLISION SCANNER NOT TO DELETE
	RETS

*
*STFOBJ INITIALIZING DATA
*	.LONG	OXVEL,OYVEL,OXVAL,OYVAL
*	.WORD	OZPOS,OZVEL
*	.LONG	OIMG,OZSIZ,OCVECT
*	.WORD	OFLAGS,OID
LOFINIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	lfwk5,LOFZ,LOFCOLL
	.WORD	DMAWNZ,>E01
	.LONG	LOFBLIP
*COLLISION TABLE
LOFCOLL	
	.WORD	B1OID|BULLETID
	.LONG	LOFBUL
	.WORD	B1OID|EXPLODID
	.LONG	LOFCOL0
	.WORD	B1OID|ROCKETID
	.LONG	LOFCOL0
	.WORD	B2OID|BULLETID
	.LONG	LOFBUL
	.WORD	B2OID|EXPLODID
	.LONG	LOFCOL0
	.WORD	B2OID|ROCKETID
	.LONG	LOFCOL0
	.WORD	BEOID|EXPLODID
	.LONG	LOFCOLE
	.WORD	TRAN1OID+CBODYID
	.LONG	LOFCAR
	.WORD	TRAN2OID+CBODYID
	.LONG	LOFCAR
	.WORD	TRAN2OID+WSHLDID
	.LONG	LOFCAR
	.WORD	C1OID+CBODYID
	.LONG	LOFCAR
	.WORD	0
	.LONG	DUMRTSG
*
*ENEMY ANIMATION TABLE OFFSETS

LOFOFF	.WORD	1,3,4,9,19,19,19,19
*
*THE LOFFREDO ENEMY, ANIMATION PTR TABLE, FIRST LONG WORD IS THE OFFSET PTR
*
LOFTAB	.LONG	LOFOFF
	.LONG	LOFWLR,LOFWLR,LOFWLR,LOFDBUL,LOFDFLA,LOFDEXP,LOFDEXP1,LOFDROCK

	.LONG	LOFRAG1,LOFRAG2,LOFRAG2,LOFRAG3
	.LONG	LOFRAG1,LOFRAG2,LOFRAG2,LOFRAG3
	.LONG	LOFRAG4,0

	.LONG	LOFSTAND

*LOFFREDO FRAME TABLES
*NORMAL TABLE ENTRY:
*	.LONG	FRAME1
*	.WORD	SLEEPT,FLIP_FACTOR
*	.LONG	FRAME2
*	.
*	.
*	.
*SPECIAL ENTRY(FOR STORED OFFSETS AND PROCESSES)
*	.LONG	FRAME1
*	.WORD	-SLEEPT,XOFF,YOFF,PROC. ID
*	.LONG	PROCESS STARTING ADDRESS
*	.WORD	FLIP_FACTOR
*	.LONG	FRAME2
*	.
*	.
*	.
*standing loffredo
LOFSTAND
	.LONG	lfwk5
	.WORD	3
	.LONG 	0
*walking loffredo
LOFWLR:
	.LONG	lfwk5
	.WORD	5
	.LONG	lfwk2
	.WORD	5
	.LONG	lfwk3
	.WORD	5
	.LONG	lfwk4
	.WORD	5
LOFSTND:
	.LONG	lfwk5
	.WORD	5
	.LONG	lfwk6
	.WORD	5
	.LONG	lfwk1
	.WORD	5
	.LONG 	0

*WALK BACKWARDS

*LOFBKOF:
*	.LONG	lfwk1
*	.WORD	5
*	.LONG	lfwk6
*	.WORD	5
*LOFBSTND:
*	.LONG	lfwk5
*	.WORD	5
*	.LONG	lfwk4
*	.WORD	5
*	.LONG	lfwk3
*	.WORD	5
*	.LONG	lfwk2
*	.WORD	5
*	.LONG	lfwk5
*	.WORD	5
*	.LONG   0
*
**LOF JUMP TAKE OFF
LOFJMP:
	.LONG	ljmp1
	.WORD	6
LOFJMP0:
	.LONG	ljmp6
	.WORD	3
	.LONG	0
**LOF LANDING SEQUENCE
LOFLND:
	.LONG	ljmp1
	.WORD	4
	.LONG	0
*
*LOF FLYING
*
LOFLY:
	.LONG	hell1
	.WORD	2
	.LONG	0
*	
*LOF FALLING
*
LOFALL:
	.LONG	hell7
	.word	2
	.long	0

*LOFFREDO DIE FROM A BULLET

LOFDBUL:
	.LONG	ldth2
	.WORD	8
	.LONG	ldth4
	.WORD	8
	.LONG	ldth6
	.WORD	8
LOFDEAD:
	.LONG	ldth7
	.WORD	1
	.LONG	0

LOFDFLA:				;DEATH BY FLAME
	.long	BGDTHF1
	.word	NEWPALET|6
	.LONG	NARCS
	.LONG	BGDTHF2
	.WORD	4
	.LONG	BGDTHF3
	.WORD	4
	.LONG	BGDTHF4
	.WORD	4
LDEXP1
	.long	BGDTHF5
	.word	NEWPALET|4
	.LONG	NARCS
	.LONG	BGDTHF6
	.WORD	3
	.LONG	BGDTHF7
	.WORD	3
	.LONG	BGDTHF8
	.WORD	3
	.LONG	BGDTHF9
	.WORD	3
	.LONG	BGDTHF10
	.WORD	4
	.LONG	BGDTHF9
	.WORD	4
	.LONG	BGDTHF10
	.WORD	4
	.LONG	BGDTHF11
	.WORD	4
	.LONG	BGDTHF12
	.WORD	4
	.LONG	BGDTHF13
	.WORD	4
	.LONG	BGDTHF14
	.WORD	2
	.LONG	BGDTHF15
	.WORD	2
	.LONG	0

LOFDROCK:				;LOF HIT BY ROCKET
	.long	LCREOSOTE
	.word	NEWPALET|7
	.LONG	NARCS
	.LONG	0

LOFRAG1	.LONG	LLEG1
	.word	NEWPALET|2
	.LONG	NARCS
	.LONG	LLEG2
	.WORD	2
	.LONG	LLEG3
	.WORD	2
	.LONG	LLEG4
	.WORD	2
	.LONG	LLEG5
	.WORD	2
	.LONG	LLEG6
	.WORD	2
	.LONG	LLEG7
	.WORD	2
	.LONG	LLEG8
	.WORD	2
	.LONG	0


LOFRAG2	.LONG	L4ARM1
	.word	NEWPALET|2
	.LONG	NARCS
	.LONG	L4ARM2
	.WORD	2
	.LONG	L4ARM3
	.WORD	2
	.LONG	L4ARM4
	.WORD	2
	.LONG	L4ARM5
	.WORD	2
	.LONG	L4ARM6
	.WORD	2
	.LONG	L4ARM7
	.WORD	2
	.LONG	L4ARM8
	.WORD	2
	.LONG	0

LOFRAG3	.LONG	LSHIN1
	.word	NEWPALET|2
	.LONG	NARCS
	.LONG	LSHIN2
	.WORD	2
	.LONG	LSHIN3
	.WORD	2
	.LONG	LSHIN4
	.WORD	2
	.LONG	LSHIN5
	.WORD	2
	.LONG	LSHIN6
	.WORD	2
	.LONG	LSHIN7
	.WORD	2
	.LONG	LSHIN8
	.WORD	2
	.LONG	0

LOFRAG4	.LONG	LGOAT1
	.word	NEWPALET|2
	.LONG	NARCS
	.LONG	LGOAT2
	.WORD	2
	.LONG	LGOAT3
	.WORD	2
	.LONG	LGOAT4
	.WORD	2
	.LONG	LGOAT5
	.WORD	2
	.LONG	LGOAT6
	.WORD	2
	.LONG	LGOAT7
	.WORD	2
	.LONG	LGOAT8
	.WORD	2
	.LONG	LGOAT9
	.WORD	2
	.LONG	LGOAT10
	.WORD	2
	.LONG	0

LOFDEXP:				;DEATH BY EXPLOSION CLOCKWISE SPIN
	.long	BGDF1C
	.word	FLIPBITS|NEWPALET|2
	.WORD	0
	.LONG	NARCS
	.LONG	BGDF2C
	.WORD	FLIPBITS|2,0
	.LONG	BGDF3C
	.WORD	FLIPBITS|2,0
	.LONG	BGDF4C
	.WORD	FLIPBITS|2,0
	.LONG	BGDF3C
	.WORD	FLIPBITS|2,M_FLIPV
	.LONG	BGDF2C
	.WORD	FLIPBITS|2,M_FLIPV
	.LONG	BGDF1C
	.WORD	FLIPBITS|2,M_FLIPV
	.LONG	BGDF1C
	.WORD	FLIPBITS|2,(M_FLIPH+M_FLIPV)
	.LONG	BGDF2C
	.WORD	FLIPBITS|2,(M_FLIPH+M_FLIPV)
	.LONG	BGDF3C
	.WORD	FLIPBITS|2,(M_FLIPH+M_FLIPV)
	.LONG	BGDF4C
	.WORD	FLIPBITS|2,(M_FLIPH)
	.LONG	BGDF3C
	.WORD	FLIPBITS|2,(M_FLIPH)
	.LONG	BGDF2C
	.WORD	FLIPBITS|2,(M_FLIPH)
	.LONG	BGDF1C
	.WORD	FLIPBITS|2,(M_FLIPH)
	.LONG	0

LOFDEXP1:				;DEATH BY EXPLOSION COUNTER-CLOCK SPIN
	.long	BGDF1C
	.word	FLIPBITS|NEWPALET|2
	.WORD	M_FLIPH
	.LONG	NARCS
	.LONG	BGDF2C
	.WORD	FLIPBITS|2,(M_FLIPH)
	.LONG	BGDF3C
	.WORD	FLIPBITS|2,(M_FLIPH)
	.LONG	BGDF4C
	.WORD	FLIPBITS|2,(M_FLIPH)
	.LONG	BGDF3C
	.WORD	FLIPBITS|2,(M_FLIPH+M_FLIPV)
	.LONG	BGDF2C
	.WORD	FLIPBITS|2,(M_FLIPH+M_FLIPV)
	.LONG	BGDF1C
	.WORD	FLIPBITS|2,(M_FLIPH+M_FLIPV)
	.LONG	BGDF1C
	.WORD	FLIPBITS|2,M_FLIPV
	.LONG	BGDF2C
	.WORD	FLIPBITS|2,M_FLIPV
	.LONG	BGDF3C
	.WORD	FLIPBITS|2,M_FLIPV
	.LONG	BGDF4C
	.WORD	FLIPBITS|2,0
	.LONG	BGDF3C
	.WORD	FLIPBITS|2,0
	.LONG	BGDF2C
	.WORD	FLIPBITS|2,0
	.LONG	BGDF1C
	.WORD	FLIPBITS|2,0
	.LONG	0

*LOFFREDO SHOOT AIR DOWN 45
LOFHF
	.LONG	hell2
	.WORD	4
	.LONG	hell2
	.WORD	SPAWNP|2,>D,>FFFC,0EBH
	.LONG	EBULL45
	.LONG	hell3
	.WORD	8
	.LONG   0

*LOFFREDO SHOOT STAND
LOFSS:			       
	.LONG	lsho4
	.WORD	6
	.LONG	lsho4
	.WORD	SPAWNP|2,>1B,>FFE6,0EBH
	.LONG	EBULLET
	.LONG	lsho5
	.WORD	8
	.LONG   0

*LOFFREDO KNEELING SHOOT
LOFKS:
	.LONG	lsho1
	.WORD	6
	.LONG	lsho1
	.WORD	SPAWNP|2,>1C,-20,0EBH
	.LONG	EBULLET
	.LONG	lsho2
	.WORD	8
	.LONG	0

*shoot laying down
LOFSL:
	.LONG	lsho2
	.word	8
	.LONG	lsho6
	.WORD	6
	.LONG	lsho6
	.WORD	SPAWNP|2,>32,-4,0EBH
	.LONG	EBULLET
	.LONG	lsho7
	.WORD	8
	.LONG	lsho2
	.WORD	8
	.LONG	0

*GET BUSTED DUDE
LOFBUST:	
	.LONG	lcuf2
	.WORD	10
	.LONG	lcuf4
	.WORD	10
	.LONG	lcuf5
	.WORD	10
	.LONG	lcuf8
	.word	10
	.LONG	0
	
*LOF LOOK AROUND	
LOFLOOK:
LOFLK1:
	.LONG	hang1
	.word	10
	.LONG	hang2
	.word	10
	.LONG	hang3
	.word	15
	.LONG	hang2
	.word	10
	.LONG	hang1
	.word	10
        .LONG	0
LOFLK2:
	.LONG	hang3
	.word	10
	.LONG	hang2
	.word	10
	.LONG	hang4
	.word	10
	.LONG	hang5
	.word	20
	.LONG	hang4
	.word	10
        .LONG	0
LOFLK3:
	.LONG	hang1
	.word	20
	.LONG	hang2
	.word	20
	.LONG	hang1
	.word	20
	.LONG	hang2
	.word	10
	.LONG	hang3
	.word	20
        .LONG	0
LOFLK4:
	.LONG	hang1
	.word	10
	.LONG	hang4
	.word	10
	.LONG	hang5
	.word	10
	.LONG	hang4
	.word	10
	.LONG	hang2
	.word	10
        .LONG	0
HANGTAB:
	.LONG	LOFLK1,LOFLK2,LOFLK3,LOFLK4

*
*THE LOFFREDO CRIME ROUTINE
OHNOSND .WORD	>F000|SPEAKPRI,>5D,>801E,0	;"OH NO! THE NARCS MAN"
LOFFCRM1:
	SOUND1	ALARMSND
	SLEEP	20
	calla	GETDOOR
	JSRP	DOOROPEN		;OPEN SEZ-A-ME
	CREATE 	INDPID,CLOZCRMD		;CLOSE THE DOOR
	movi	LOFINIT,A14
	calla	DOORRITE	;rets upper Y,X start pos in A1
	clr	A6
	calla	ENINITUL
	clr	A0
	move	A0,*A8(OBLIPIMG),L
	move	A8,A0
	calla	DELSHAD
	movi	->10000,A2	;X VELOCITY
	movi	LOFWLR,A9     	;GET ANIMATION SCRIPT
	JSRP	OUTDOOR
	calla	ClrVel
	SOUND1	OHNOSND	

	movi	LOFLK1,A9,L
	movk	1,A1
	JSRP	FRANIM

LOFCL1
	MOVI	CHANCVSD,A0
	MOVK	SPEAKPRI,A1	
	CALLA	CKSNDPRI
	JRNC	LOFCX			;SPEAKING IS DONE
	SLOOP	1,LOFCL1
LOFCX
	SOUND1	YAMOFF			;TURN OFF THE YAMAHA SIDE

	MOVI	ENEMIES,A1
	MOVE	A8,A0
	CALLA	DELSUPP
	move	*A8(OPAL),A1,W
	move	A1,@CRIMEPAL,W
	CALLA	DELSOBJ
	RETP

*CLOZCRMD - PROCESS TO CLOSE THE DOOR
*A8=DOOR OBJECT
CLOZCRMD:
	SLEEP	20H
	JSRP	DOORCLOZ
	JAUC	SUCIDE

