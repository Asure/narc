	.FILE	'NARCBULL.ASM'
	.TITLE	" <<< N  A  R  C  -- BULLETS AND OTHER PROJECTILES >>>"

**************************************************************************
*                                                                        *
* 	COPYRIGHT (C) 1988 WILLIAMS ELECTRONICS GAMES, INC. 		 *
* 	ALL RIGHTS RESERVED.						 *
*                                                                        *
**************************************************************************

	.WIDTH	132
	.OPTION	B,D,L
	.MNOLIST	

*	GET THE SYSTEM STUFF
	.INCLUDE	"\video\MPROCEQU.ASM"	;MPROC equates
	.INCLUDE	"\video\DISPEQU.ASM"	;Display processor equates
	.INCLUDE	"\video\GSP.INC"	;GSP assembler equates
	.INCLUDE	"\video\SYS.INC"	;Zunit system equates
	.INCLUDE	"\video\MACROS.HDR"	;Macros, Yeah!
*	LOCAL STUFF
	.INCLUDE	"NARCEQU.ASM"		;NARC Equates
	.INCLUDE	"NARCTEQU.ASM"		;TODD JIZZ
	.INCLUDE	"IMGTBL.GLO"		;Image Label Equates

*
*GLOBALS IN THIS FIEL
	.GLOBAL	BCOLDDMP,BCOLDCAN,BCOLDPST,BCOLDSID,BCOLL1,BULLRET1,BULLRET2

	.EVEN
	.TEXT

**************************************************************************
*                                                                        *
* PLAYER/ENEMY BULLET, FLAME THROWER AND ROCKET LAUNCHER ROUTINES	 *
*                                                                        *
**************************************************************************
**************************************************************************
*                                                                        *
* EBULL45 - ENEMY BULLET AT 45 DEGREES DOWN 				 *
* A8 = OBLOCK OF ENEMY							 *
* A10 = [Y,X] OFFSET							 *
*                                                                        *
**************************************************************************
EBULL45
	MOVI	[EDBULVEL,EDBULVEL],A5
	CLR	A11
	MOVI	BEOID,B1
	MOVE	A8,B2
	MOVE	*B2(OPLINK),B2,L
	MOVE	*B2(EFLAGS),B2,L
	MOVI	ENEMY_BULLETS,B5
	MOVI	EBSND,B0
	MOVI	BL45INIT,A14
	MOVI	BULL45D,B4
	MOVI	EBULLETF,A9
	JRUC	GBULLET

**************************************************************************
*                                                                        *
* EDBULLET - DRIVING ENEMY BULLET ENTRY POINT  				 *
* A8  = OBLOCK PTR OF ENEMY						 *
* A10 = XY OFFSETS							 *
*                                                                        *
**************************************************************************
EDBULLET
	MOVK	EDBULVEL,A5		;DRIVING ENEMY BULLET VELOCITY
     	JRUC	EBULLET1
**************************************************************************
*                                                                        *
* EBULLET - ENEMY BULLET ENTRY POINT LEFT/RIGHT				 *
* A8  = OBLOCK PTR OF ENEMY						 *
* A10 = XY OFFSETS							 *
*                                                                        *
**************************************************************************
EBULLET
	MOVI	EBULVEL,A5
EBULLET1
	CLR	A11
	MOVI	BEOID,B1
	MOVE	A8,B2
	MOVE	*B2(OPLINK),B2,L
	MOVE	*B2(EFLAGS),B2,L
	MOVI	ENEMY_BULLETS,B5
	MOVI	EBSND,B0
	MOVI	BLEINIT,A14
	MOVI	NORMBULL,B4
	MOVI	EBULLETF,A9
	JRUC	GBULLET

**************************************************************************
*                                                                        *
* EROCKET - ENEMY ROCKET ENTRY POINT LEFT/RIGHT				 *
* A8  = OBLOCK PTR OF ENEMY						 *
* A10 = XY OFFSETS							 *
*                                                                        *
**************************************************************************
EROCKET
	MOVI	EBULVEL,A5
	CLR	A11
	MOVI	BEOID,B1
	MOVE	A8,B2
	MOVE	*B2(OPLINK),B2,L
	MOVE	*B2(EFLAGS),B2,L
	MOVI	ENEMY_BULLETS,B5
	MOVI	SND4,B0
	MOVI	ROCKINIT,A14
	MOVI	ROCKET_MAN,B4
	MOVI	ROCKET,A9
	JRUC	GBULLET

*
*PLAYER ONE BULLET
P1BULL
	MOVI	P1DATA,A11
	MOVI	BLP1INIT,A14
	MOVI	SND3A,B0
	MOVI	B1OID,B1		;BULLET ID PLAYER #1
	JRUC	PBULLET
*
*PLAYER TWO BULLET
P2BULL
	MOVI	P2DATA,A11
	MOVI	BLP2INIT,A14
	MOVI	SND3B,B0
	MOVI	B2OID,B1		;BULLET ID PLAYER #2
	JRUC	PBULLET
*
*PLAYER ONE IN CAR BULLET
P1CARBUL
	MOVI	P1DATA,A11
	MOVI	BLP1INIT,A14
	MOVI	SND3A,B0
	MOVI	B1OID,B1		;BULLET ID PLAYER #1
	JRUC	PGCARBUL
*
*PLAYER TWO IN CAR BULLET
P2CARBUL
	MOVI	P2DATA,A11
	MOVI	BLP2INIT,A14
	MOVI	SND3B,B0
	MOVI	B2OID,B1		;BULLET ID PLAYER #2
*GENERIC CAR BULLET ENTRY
PGCARBUL
	MOVE	@PLAYCAR,A8,L		;GET THE CURRENT PLAYER CAR POINTER
	JRZ	BULLETDI
	MOVE	*A8(OXVEL+16),A1,W
	ABS	A1
	MOVE	*A8(OYVEL+16),A0,W
	ABS	A0			;NEGATED LATER
	SLL	16,A0
	MOVX	A1,A0
	MOVI	PBULVEL,A5		;LOAD BULLET VELOCITY
	ADDXY	A0,A5
	JRUC	PBULLET1
**************************************************************************
*                                                                        *
* PLAYER BULLET PROCESS ENTRY POINT					 *
* A11 = PLINDX PTR TO PLAYER DATA AREA					 *
* A14 = BULLET INIT TABLE						 *
* B0 = RELEASE SOUND							 *
* B1 = BULLET I.D.							 *
*                                                                        *
**************************************************************************
PBULLET
	MOVK	PBULVEL,A5		;LOAD BULLET VELOCITY
	MOVE	*A11(POBJ),A8,L	    	;GET THE PLAYER OBJECT BLOCK
PBULLET1
	MOVE	*A11(POFFSET),A10,L	;GET THE CURRENT BULLET OFFSET
	MOVE	A11,B2
	MOVE	*B2(PFLAGS),B2,L	;GET THE FLAGS
	MOVI	PLAYER_BULLETS,B5

	BTST	BROCKET,B2						 
	JRNE	PBULLET2		;BR = ROCKET LAUNCHER		 
	MOVI	NORMBULL,B4
	MOVI	PBULLETF,A9
	JRUC	GBULLET
PBULLET2
	MOVI	SND4,B0
	CMPI	P1DATA,A11
	JRNE	PROCKP2			;BR = PLAYER TWO ROCKET
	MOVI	P1RCKINI,A14
	JRUC	PROCK1
PROCKP2
	MOVI	P2RCKINI,A14
PROCK1
	MOVI	ROCKET_MAN,B4
	MOVI	ROCKET,A9

**************************************************************************
*                                                                        *
* GENERIC BULLET ENTRY POINT						 *
* A8  = PTR TO OBLOCK OF THE OBJECT DOING THE FIRING			 *
* A5  = BULLET VELOCITY [Y,X]						 *
* A9  = ANIMATION TABLE							 *
* A10 = BULLET OFFSET							 *
* A11 = PLAYER DATA PTR(0 = ENEMY NOT A PLAYER)				 *
* A14 = OBJECT INIT. TABLE						 *
* B0  = RELEASE SOUND TO MAKE						 *
* B1  = BULLET I.D.							 *
* B2  = CURRENT PLAYER/ENEMY FLAGS					 *
* B4  = PLACE TO JUMP TO FINISH ANIMATION OF PROJECTILE			 *
* B5  = LOCATION OF SUPPLEMENTAL LIST TO ADD TO				 *
*                                                                        *
**************************************************************************
GBULLET
	CALLA	GPALOBJ			;GET THE PALETTE
	JRZ	BULLETDI		;BR = PALETTE/OBJECT CREATION FAILURE
	CALLA	STFOBJ			;STUFF IT

	CALLA	GETCPNT			;GET PLAYER'S CENTER POINT
	MOVE	A1,A14			;KEEP CENTER POINT HERE

	MOVE	*A0(OFLAGS),A4,W	;BRING THESE FLAGS

	MOVE	*A8(OFLAGS),A6
	BTST	B_FLIPH,A6		;FLIPPED ABOUT Y?
	JREQ	GBULNFH			;BR = NO

       	ORI	M_FLIPH,A4
	MOVY	A5,A1
	NEG	A5			;NEGATE X VELOCITY
	MOVY	A1,A5  	
	MOVY	A10,A1
	NEG	A10			;NEGATE X OFFSET
	MOVY	A1,A10
GBULNFH
	BTST	B_FLIPV,A6		;FLIPPED ABOUT X? 	
	JREQ	BULTNORM		;BR = NOPE

	ORI	M_FLIPV,A4
	MOVY	A5,A1
	NEG	A1   			;NEGATE Y VELOCITY
	MOVY	A1,A5
	MOVY	A10,A1
	NEG	A1
	MOVY	A1,A10			;NEGATE Y OFFSET
BULTNORM
	MOVE	*A0(OIMG),A1,L		
	CALLA	GSAGOF
	MOVE	A0,A6
	ADDI	OSIZE+20H,A6
	MMTM	A6,A2,A3,A4 		;STUFF THIS SHIT
	ADDXY	A10,A14
	CALLA	GANIOF			;GET ADJUSTED ANIMATION POINT
	CLR	A2
	MOVY	A14,A2
	MOVX	A14,A1
	SLL	16,A1			;UNPACK BULLSHIT
	SUB	A7,A2			;SUBTRACT FOR ULY
	SUB	A6,A1			;SUBTRACT FOR ULX
	MOVE	A2,*A0(OYVAL),L		;RE-STUFF
	MOVE	A1,*A0(OXVAL),L
	MOVE	A13,*A0(OPLINK),L	;LINK TO THE CONTROLLING PROC
	MOVE	A0,A14
	MOVE	B0,A0
	CALLA	ONESND			;MAKE THE RELEASE SOUND
	MOVE	A8,A0
	MOVE	A14,A8
	MOVE	A11,A11
	JRZ	CARBULL2		;THIS IS NOT A PLAYER
	MOVE	*A11(PIRQFLAG),A14,W
	ANDI	MDRIVER|MPASSEN,A14	
	JREQ	CARBULL2		;BR = NOT IN THE CAR
	MOVE	*A11(PFIRENXT),A14,W
	JRZ	CARBULL1		;BR = FIRE FROM THE DRIVER'S SIDE
	MOVE	*A0(OZVAL),A3,L
	MOVE	*A0(OZPLUS),A14,W
	SLL	16,A14
	ADD	A14,A3
	MOVE	A3,*A8(OZVAL),L
	JRUC    CARBULLX
CARBULL1
	MOVE	*A0(OZVAL),A3,L
	MOVE	*A0(OZMINUS),A14,W
	SLL	16,A14
	SUB	A14,A3
	MOVE	A3,*A8(OZVAL),L
	JRUC	CARBULLX
CARBULL2
	MOVE	*A0(OZVAL),*A8(OZVAL),L	;JUST STUFF STRAIGHT Z VALUES		
CARBULLX
	JUMP	B4
*JUMP HERE FOR A NORMAL BULLET
NORMBULL
	MOVE	A0,A14			;STORE PLAYER PTR HERE
	CALLA	GETOBJ			;GET A BULLET
	JRNZ	NORMBCO
       	MOVE	A8,A0
	CALLA	DELPAL
	CALLA	FREESOBJ		;FREE THE CURRENT FLAME OBJECT
	JRUC	BULLETDI
NORMBCO
	CALLA	COPYOBJ			;COPY THE FLAME PARAMS
	MOVE	*A9(0),*A0(OIMG),L	;STUFF THE BULLET IMAGE

	ADD	A7,A2			;PUT THE ANIMATION POINT BACK,'CAUSE
	MOVE	A1,A3
	ADD	A6,A3			;THIS IS THE PLACE WE REALLY WANT TO
	MOVE	*A8(OFLAGS),A4,W	;AND FLAGS
	CALLA	GANISAG			;ADJUST FOR NEW IMAGE AND POSS. FLIP

	MOVE	B1,A1
	MOVE	A1,*A0(OID),W		;STUFF THE I.D.

	CLR	A1
	MOVY	A5,A1
	MOVE	A1,*A0(OYVEL),L		;STUFF THE Y VELOCITY
	MOVE	*A14(OXVEL),A1,L
	SLL	16,A5
	XOR	A5,A1			;DIFFERING SIGNS ?
	MOVE	A1,A1			;SET SIGN BIT FOR JAGOFFS AT TI
	JRN	NORMBC1			;YES, CAN OBJECT VELOCITY
	XOR	A5,A1		  
	ADD	A5,A1
	JRUC	NORMBC2
NORMBC1
	MOVE	A5,A1
NORMBC2
	MOVE	A1,*A0(OXVEL),L		;STUFF THE X VELOCITY

	CALLA	INSOBJ
	MOVE	B5,A1
	MOVE	A1,A10			;KEEP HERE FOR GOOD MEASURE
	CALLA	ADDSUPP			;ADD TO SUPPLEMENTAL LIST
	MOVE	A8,A9
	MOVE	A0,A8
	CALLA	MAKSHAD
	
	MOVE	A11,A2
	JREQ	NORMBUL1
	MOVE	*A2(PBULLONS),A1,W
	INC	A1
	MOVE	A1,*A2(PBULLONS),W	;INCREMENT THE # ON SCREEN
	CALLA	OUTBULLS		;OUTPUT THE # OF BULLETS
NORMBUL1
	MOVK	2,A11
	CREATE	0EFFH,LURKER		;SOMETHING TO WATCH THE FLASH
	JRZ	LURKMISS
	MOVE	A0,*A9(OPLINK),L
	MOVE	*A14(OXVEL),*A9(OXVEL),L
	MOVE	*A14(OYVEL),*A9(OYVEL),L
	MOVE	*A14(OZVEL),*A9(OZVEL),L
	JRUC	NORMBUL2
LURKMISS
	MOVE	A9,A0
	CALLA	FREESOBJ		;FREE UP THE FLASH
NORMBUL2
	MOVE	A2,A11			;RESTORE A11
	MOVE	A5,A9			;STORE BASE X VELOCITY HERE
*WATCH BULLET OBJECT TO GO OFF SCREEN, TRAVELING LINEARLY IN X
*A8 = PTR TO PROJECTILE OBJECT BLOCK
*A9 = BASE X VELOCITY OF OBJECT
*A10 = PTR TO SUPPLEMENTAL LIST
*A11 = PTR TO PLAYER DATA STRUCTURE, IF = 0 THEN ENEMY
BULLUPD
	CALLA	SCRTST		;OFFSCREEN?
	JRNZ	BULLUPD2	;YES!
       	MOVE	A11,A11
	JRZ	BULLUPD1	;BR = NO PLAYER TO WATCH	
	MOVE	*A11(POBJ),A0,L
	MOVE	*A0(OXVEL),A0,L
	ADD	A9,A0		;KEEP SAME BULLET VEL. RELATIVE TO PLAYER
	MOVE	A0,*A8(OXVEL),L
BULLUPD1
	SLOOP	7,BULLUPD
BULLUPD2
	MOVE	A8,A0 		;GET THE BLOCK
	MOVE	A10,A1
	CALLA	DELPAL
	CALLA	DELSUPP		;SUPPLEMENTAL DE-LINK
	CALLA	DELSOBJ		;ZAP IT	& ITS SHADOW
BULLRET1
	MOVE	A11,A2
	JRZ	BULLETDI
	MOVE	*A2(PBULLONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PBULLONS),W	;DECREMENT THE # ON SCREEN
BULLETDI
	DIE
*
*BULLET 45 DEGREES DOWN
BULL45D
	MOVE	B1,A1
	MOVE	A1,*A8(OID),W
	CLR	A1
	MOVY	A5,A1
	MOVE	A1,*A8(OYVEL),L		;STUFF THE Y VELOCITY
	SLL	16,A5
	MOVE	A5,*A8(OXVEL),L		;STUFF THE X VELOCITY
	MOVE	A8,A0
	CALLA	INSOBJ
	MOVE	B5,A1
	MOVE	A1,A10			;KEEP HERE FOR GOOD MEASURE
	CALLA	ADDSUPP			;ADD TO SUPPLEMENTAL LIST
	CALLA	MAKSHAD
	
*WATCH OBJECT TO HIT THE GROUND
*A8 = PTR TO PROJECTILE OBJECT BLOCK
*A10 = PTR TO SUPPLEMENTAL LIST
*A11 = PTR TO PLAYER DATA STRUCTURE, IF = 0 THEN ENEMY
BULL45CK
	SLEEP	1
	CALLA	DFRMGRND
	JRN	BULL45G
	MOVE	*A8(OYVEL+16),A2,W
	ABS	A2
	CMP	A2,A1
	JRGT	BULL45CK
BULL45G
	MOVE	A8,A0 		;GET THE BLOCK
	CALLA	SETZPOS		;RESET THE Z POSITION
	MOVE	A10,A1
	CALLA	DELSUPP		;SUPPLEMENTAL DE-LINK
	JRUC	DING45

**************************************************************************
*                                                                        *
* LURKER - THIS PROCESS INSERTS AN OBJECT THEN SLEEPS			 *
* 	 THEN DELETES THE OBJECT, USEFUL HUH?				 *
* A9 = OBJECT TO CREATE							 *
* A11 = SLEEP TIME							 *
*                                                                        *
**************************************************************************
LURKER
	MOVE	A9,A0
	MOVE	A13,*A0(OPLINK),L	;LINK UP
	CALLA	INSOBJ
	MOVE	A11,A0
	CALLA	PRCSLP			;O.K., LURK!
	MOVE	A9,A0
	CALLA	DELSOBJ
	DIE

*
*ROCKET LAUNCHER PROCESS
*A0  = PTR TO PLAYER/ENEMY/THING DOING THE FIRING
*A5  = [Y,X] VELOCITIES, CORRECT DIRECTION
*A8  = OBLOCK
*A9  = POINTER TO ANIMATION TABLE
*A11 = PTR TO PLAYER DATA STRUCTURE(0 = NOT A PLAYER)
*B0  = GUNSHOT SOUND TO MAKE
*B1  = BULLET I.D.
*B2  = PLAYER/ENEMY FLAGS
*B5  = ADDRESS OF SUPPLEMENTAL LIST
ROCKET_MAN:
	MOVE	A0,A10			;MUST HOLD HERE FOR SLEEPS
	MOVE	A8,A0
	CALLA	INSOBJ
	MOVE	B5,A1			;SUPP LIST INTO A1

	TEST	A11
	JREQ	ROCKETM1		;BR = THIS IS NOT A PLAYER

	MOVE	*A11(PROCKONS),A14,W
	INC	A14			;INDICATE ANOTHER ROCKET ON SCREEN
	MOVE	A14,*A11(PROCKONS),W

	MOVE	B2,A14
	SRL	16,A14
	ORI	MFHOLD,A14
	MOVE	A14,*A11(PEXEFLAG),W	;SET THE FIRE HOLD FLAG

ROCKETM1
	SOUND1	RLNCHSND		;SOUND AWAY

	MOVE	B1,A14
	PUSHP	A14			;SAVE THE ROCKET BOMB I.D.
	PUSHP	A1	

RSLPLOOP
***	MOVE	@OVERLOAD,A1,W
***	CMPI	3,A1
***	JRLE	RSLPOK			;NOT OVERLOADED, GO AHEAD AND ANIMATE
***    	MOVI	ROCKIMM,A9		;LAUNCH ROCKET IMMEADIATELY
***	MOVK	4,A1
***	JSRP	FRANIM			;ANIMATE THE PICTURE IN, NO SLEEP	
***	JRUC	RELROCK			;RELEASE THE ROCKET
***RSLPOK
	MOVK	4,A1
	JSRP	FRANIM	
	JRC	RELROCK			;RELEASE THE ROCKET
RSLPILP
	MOVE	*A10(OXVEL),*A8(OXVEL),L ;XFER VELS
	MOVE	*A10(OYVEL),*A8(OYVEL),L
	MOVE	*A10(OZVEL),*A8(OZVEL),L
	PUSHP	A0
	SLEEP	1
	PULLP	A0	
	DSJS	A0,RSLPILP
	JRUC	RSLPLOOP
*
*RELEASE THE ROCKET HERE
RELROCK
	CALLA	PSTOPYZ
	MOVE	A8,A0
	PULLP	A10			;KEEP SUPP LIST HERE FOR SLEEPS
	MOVE	A10,A1
	CALLA	ADDSUPP			;ADD TO SUPPLEMENTAL LIST
*ADD VELOCITY FOR ROCKET TAKEOFF

	MOVE	*A8(OFLAGS),A14,W
	BTST	B_FLIPH,A14
	JREQ	ROCKADD
	
	MOVI	[-ROCKVEL,0],A5	
	JRUC	ROCKSVEL
ROCKADD
	MOVI	[ROCKVEL,0],A5
ROCKSVEL
	MOVE	*A8(OXVEL),A14,L
	ADD	A5,A14			;ADD VELS TOGETHER.
	MOVE	A14,A4	
	ABS	A4
	CMPI	[ROCKMINV,0],A4		;MINIMUM ROCKET VELOCITY
	JRHS	ROCKSVOK		;BR = IT'S GOING FAST ENOUGH
	MOVE	A14,A14
	JRN	ROCKSVN			;BR = STUFF IT MINUS
	MOVI	[ROCKMINV,0],A14
	JRUC	ROCKSVOK	
ROCKSVN
	MOVI	[-ROCKMINV,0],A14
ROCKSVOK
	MOVE	A14,*A8(OXVEL),L	;AND STICK IT

	CALLA	MAKSHAD

	PULLP	A14			;GET THE I.D. BACK
	ADDK	ROCKETID,A14		;ADD ROCKET IDENTIFIER
	MOVE	A14,*A8(OID),W

	CREATE	0EFFH,TRAILER						 
	MOVE	A0,A9			;KEEP THIS AS AN EFFECT PTR	 
									 
	CREATE	0EFFH,PUFFER		;MAKE THE ROCKET PUFF

	TEST	A11
	JREQ	ROCKETM2		;BR = ENEMY, NOT A PLAYER

	MOVE	A11,A2
	CALLA	SUBROCK			;SUBTRACT A ROCKET

	MOVE	*A11(PEXEFLAG),A0,W	;GET THE FLAGS
	ANDNI	MFHOLD,A0
	MOVE	A0,*A11(PEXEFLAG),W	;AND CLEAR THE FIRE HOLD FLAG
*WAIT FOR THE ROCKET TO GO OFFSCREEN
*A8  = OBJECT BLOCK
*A10 = SUPPLEMENTAL LIST
*A11 = PTR TO PLAYER DATA BLK. (ENEMIES = 0)
*PDATA = SHADOW OBJECT
ROCKETM2
	SLEEP	10
	CALLA	SCRTST		;OFFSCREEN?
	JREQ	ROCKETM2	;NO!
	MOVE	A8,A0 		;GET THE BLOCK
	MOVE	A10,A1
	CALLA	DELPAL
	CALLA	DELSUPP		;SUPPLEMENTAL DE-LINK
	CALLA	DELSOBJ		;ZAP IT & SHADOW
	MOVE	A11,A2
	JREQ	ROCKETDI
	MOVE	*A2(PROCKONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PROCKONS),W	;DECREMENT THE # ON SCREEN
ROCKETDI
	DIE

*
*PROJECTILE INIT. TABLES
BLEINIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	SFLAME,PBULZ,BCOLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0
BL45INIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	BULLET45,PBULZ,BCOLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0
BLP1INIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	SFLAME,PBULZ,BP1COLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0
BLP2INIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	SFLAME,PBULZ,BP2COLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0
ROCKINIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	ROCKET1,PROCKZ,RCOLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0
P1RCKINI
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	ROCKET1,PROCKZ,P1RCOLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0
P2RCKINI
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	ROCKET1,PROCKZ,P2RCOLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0
REXINIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	BLAM1,REXZ,REXCOLL
	.WORD	DMAWNZ,0
	.LONG	0
PUFFINIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	PUF1,0,DUMCOLL
	.WORD	DMAWNZ,0EFFH
	.LONG	0

*
*ROCKET LAUNCHER EXPLOSION ROUTINE
*A8 = PTR TO OBJECT THAT GOT HIT
*A9 = OFLAGS:OZPOS OF ROCKET
*A10 = OID OF ROCKET
*A11 = YX POSITION OF ROCKET
REXPLODE:
	MOVI	REXINIT,A14
	CALLA	GPALOBJ
	JRZ	REXXXDI		;BR = THERE'S NO PALETTES HERE	
	CALLA	STFOBJ
	MOVE	A13,*A0(OPLINK),L	;LINK IT TO THIS PROCESS

	SRL	4,A10
	SLL	4,A10
	ADDK	EXPLODID,A10	;MAKE THIS AN EXPLOSION
	MOVE	A10,*A0(OID),W	;STUFF I.D.
	SUBK	EXPLODID,A10	;BACK HOME AGAIN	

	MOVE	A9,*A0(OZPOS),W	;GONNA SET US A Z POSITION, YESIREE
	MOVI	REXOFF,A8
	SRL	20,A9		;GET FLAGS INTO POSITION
	SLL	4,A9
	ORI	DMAWNZ,A9	;MAKE SURE THE WRITE IS CORRECT
	BTST	B_FLIPH,A9	;AND TEST FOR FLIP
	JREQ	REX2		;BR = ROCKET NOT FLIPPED
	NEG	A8
REX2
	ADDXY	A8,A11		;ADD IN THE OFFSET

	CLR	A2
	MOVY	A11,A2		;SET Y POSITION
	MOVX	A11,A3
	SLL	16,A3		;SET X POSITION
	MOVE	A9,A4
	CALLA	GANISAG		;ADJUST

	CALLA	INSOBJ
* SELECT THE CORRECT SUPPLEMENTAL LIST
	MOVI	EXPLOSIONS,A1	;INSERT ON THE EXPLOSIONS LIST	
	CALLA	ADDSUPP		;ADD IT TO THE CORRECT SUPPLEMENTAL LIST
	MOVE	A1,A10
	MOVE	A0,A8
	
	MOVI	EXPLODA,A9		;GET ANIMATION TABLE

	MOVI	SND1,A0
	CALLA	ONESND		;EXPLODE WITH NOISE

	CLR	A1
REX3	JSRP	FRANIM
	JRC	REXXX
	MOVE	*A8(OID),A0,W
	SRL	4,A0
	SLL	4,A0
	CMPI	BEOID,A0
	JREQ	REX3		;DON'T EXPLODE OUTWARDS IF IT'S AN ENEMY
	MOVE	*A8(OZPOS),A0,W
	ADDK	8,A0
	MOVE	A0,*A8(OZPOS),W	;EXPLODE OUTWARDS PLEASE
	JRUC	REX3
REXXX
	MOVE	*A8(OID),A0,W
	SRL	4,A0
	SLL	4,A0
	CMPI	BEOID,A0
	JREQ	REXXNCNT

	MOVE	@DEATHCNT,A0,W
	CMPI	7,A0
	JRLO	REXXDLO	;BR = NOT ENOUGH DEATHS
	CLR	A0
	MOVE	A0,@DEATHCNT,W
	SOUND1	THECROWD
	JRUC	REXXNCNT
REXXDLO
	CREATE	0DEAH,DEATHCLR	;WAIT BEFORE YOU CLEAR THE DEATH COUNT
REXXNCNT
	MOVE	A8,A0		;GET BACK FOR DELETE
	MOVE	A10,A1
	CALLA	DELPAL
	CALLA	DELSUPP		;UN-SUPP ME
	CALLA	DELOBJ		;TAKE IT AWAY
REXXXDI
	JAUC	SUCIDE

*
*DEATHCLR - PROCESS TO CLEAR THE EXPLOSION DEATH COUNT AFTER TIME
*I.D. = $0DEA
DEATHCLR
	MOVE	*A13(PROCID),A0,W
	CLR	A1
	NOT	A1
	CALLA	KILALL		;KILL THE OTHER CLEARERS
	SLEEP	03CH
	CLR	A0
	MOVE	A0,@DEATHCNT,W
	DIE
**************************************************************************
*                                                                        *
* ROCKWRLD - ROCK THE WORLD, YEAH SHAKE IT UP BABY			 *
* I.D. MUST EQUAL ROCKWPID, COOL?					 *
*                                                                        *
**************************************************************************
ROCKWRLD
	MOVI	ROCKWPID,A0
	MOVE	A0,A4
	CLR	A1
	NOT	A1
	CALLA	EXISTP
	JRZ	ROCKWLD1	;BR = GO THE GO AHEAD
	CALLA	GETA8
	CALLA	GETA9		;GET CURRENT GUYS RESTORE PTRS
	CALLA	KILL		;SLICE 'IM
ROCKWLD0
	MOVE	A4,A0
	CALLA	EXISTP		;CLEAR THE REST
	JRZ	ROCKWLD2	;IF THERE ARE ANY
	CALLA	KILL
	JRUC	ROCKWLD0
ROCKWLD1
	MOVE	@WORLDTLX,A8,L	;KEEP THESE HERE S.V.P
	MOVE	@WORLDTLY,A9,L
ROCKWLD2
	MOVE	A8,A2
	MOVE	A9,A3
	MOVK	5,A0
	CALLA	RANDU		;RANDOM SHOCK
	SLL	16,A0		;UP HERE!
	SUB	A0,A2
	SUB	A0,A3		;ROCK IT THIS WAY
	MOVE	A0,A10
	MOVE	A2,@WORLDTLX,L	
	MOVE	A3,@WORLDTLY,L
	MOVK	3,A11
ROCKWLD3
	MOVE	@SCROLLX,A4,L
	ADD	A4,A8		;MATCH VELOCITIES
	MOVE	@SCROLLY,A4,L
	ADD	A4,A9
	SLEEP	1
	DSJS	A11,ROCKWLD3	;SLEEP THIS HERE
	MOVE	A8,A2
	MOVE	A9,A3
	ADD	A10,A2		;AND ROCK IT THAT ...
	ADD	A10,A3
	MOVE	A2,@WORLDTLX,L	
	MOVE	A3,@WORLDTLY,L
	MOVK	3,A11
ROCKWLD4
	MOVE	@SCROLLX,A4,L
	ADD	A4,A8		;MATCH VELOCITIES
	MOVE	@SCROLLY,A4,L
	ADD	A4,A9
	SLEEP	1
	DSJS	A11,ROCKWLD4	;SLEEP THIS HERE
	MOVE	A8,@WORLDTLX,L		;RESTORE ALL TO NORMAL	
	MOVE	A9,@WORLDTLY,L
	DIE

**************************************************************************
*                                                                        *
* CEXPLODE - ROCKET BOMB EXPLOSION AGAINST A CAR			 *
* A8 = PTR TO CAR OBJECT        					 *
* A9 = FLAGS:ZPOS OF ROCKET						 *
* A10 = OID OF ROCKET							 *
* A11 = XY POSITION OF ROCKET						 *
*                                                                        *
**************************************************************************
CEXPLODE:  
	CALLA	SCRTST
	JRNZ	CEXNRK1
	CREATE	ROCKWPID,ROCKWRLD	;ROCK THE WORLD
CEXNRK1
	SOUND1	CEXSND2
	CREATE	REXPID,MULTIXP	;EXPLODE ONE ON THE ROCKET
	SLEEP	16
	MOVE	*A8(OZPOS),A2,W		;CAR Z
	MOVE	*A8(OFLAGS),A9,W
	SLL	16,A9
	MOVX	A2,A9			;A9 = OFLAGS:OZPOS
	MOVE	*A8(OXVAL),A3,L
	MOVE	*A8(OYVAL),A2,L
	MOVY	A2,A11
	SRL	16,A3
	MOVX	A3,A11			;PACK CAR UL [Y,X] 

	MOVE	A11,A3
	MOVE	*A8(OFLAGS),A4,W
	BTST	B_FLIPH,A4
	JRNE	CEXFTRK	
	ADDI	[20,20],A11		;FUDGE TO GAS TANK ON UNFLIPPED THANG
	JRUC	CEXBTRK
CEXFTRK
	MOVE	*A8(OSIZE),A2,L
	ADDXY	A2,A11
	SUBI	[20,20],A11		;FUDGE TO THE GAS TANK ON FLIPPED CAR
CEXBTRK
	CALLA	SCRTST
	JRNZ	CEXNRK2
	CREATE	ROCKWPID,ROCKWRLD	;ROCK THE WORLD
CEXNRK2
	CREATE	REXPID,MULTIXP		;EXPLODE ON THE REAR
	MOVE	A3,A11			;RESTORE A11
CEXPG
	SOUND1	CEXSND1
	MOVK	10,B0
	MOVI	25,B1
	CALLA	RANGRAND
	SLEEPR	A0
	MOVK	3,A0			;DO THIS MANY SMALL EXPLOSIONS
CEXNEW1
*RE-SELECT A STARTING POINT IN CASE OF VELOCITY
	PUSHP	A0			;KEEP THE EXPLOSION COUNT
	MOVE	*A8(OZPOS),A2,W		;CAR Z
	MOVE	*A8(OFLAGS),A9,W
	SLL	16,A9
	MOVX	A2,A9			;A9 = OFLAGS:OZPOS
	MOVE	*A8(OXVAL),A3,L
	MOVE	*A8(OYVAL),A2,L
	MOVY	A2,A11
	SRL	16,A3
	MOVX	A3,A11			;PACK CAR UL [Y,X] 
	MOVE	A11,B2
	CLR	B0
	MOVX	B2,B0
	MOVE	B0,B1
	ADDI	240,B1
	CALLA	RANGRAND	;RANDOM X CENTER
	MOVX	A0,A11
	CLR	B0	
	MOVY	B2,B0
	MOVE	B0,B1
	ADDI	[40,0],B1
	CALLA	RANGRAND	;RANDOM Y CENTER
	MOVY	A0,A11
	MOVE	A9,B0
	ZEXT	B0
	MOVE	B0,B1
	SUBK	10,B0	
	ADDK	10,B1
	CALLA	RANGRAND
	MOVX	A0,A9		;RANDOM Z CENTER
	MOVE	*A12,A0,L	;GET THE COUNT BACK
	CMPI	2,A0
	JRLO	CEXNROCK
	CALLA	SCRTST
	JRNZ	CEXNROCK
	CREATE	ROCKWPID,ROCKWRLD	;ROCK THE WORLD AGAIN
CEXNROCK
	DEC	A0
	JRNZ	CEXNSND
	SOUND1	CEXSND2
	JRUC	CEXKICK
CEXNSND
	SOUND1	CEXSND1
CEXKICK
	CREATE	REXPID,MULTIXP
	MOVK	10,B0
	MOVI	25,B1
	CALLA	RANGRAND
	SLEEPR	A0
	PULLP	A0
	DSJ	A0,CEXNEW1
	DIE

**************************************************************************
*                                                                        *
* TEXPLODE - TIME-OUT CAR EXPLODE					 *
* A8 = PTR TO CAR OBJECT        					 *
* A9 = FLAGS:ZPOS OF ROCKET						 *
* A10 = BASE OID OF EXPLOSION						 *
* A11 = XY POSITION OF ROCKET						 *
*                                                                        *
**************************************************************************
TEXPLODE
	MOVE	*A8(OZPOS),A2,W		;CAR Z
	MOVE	*A8(OFLAGS),A9,W
	SLL	16,A9
	MOVX	A2,A9			;A9 = OFLAGS:OZPOS
	MOVE	*A8(OXVAL),A3,L
	MOVE	*A8(OYVAL),A2,L
	MOVY	A2,A11
	SRL	16,A3
	MOVX	A3,A11			;PACK CAR UL [Y,X] 

	MOVE	A11,A3
	MOVE	*A8(OFLAGS),A4,W
	BTST	B_FLIPH,A4
	JRNE	TEXFTRK	
	ADDI	[20,20],A11		;FUDGE TO GAS TANK ON UNFLIPPED THANG
	JRUC	TEXBTRK
TEXFTRK
	MOVE	*A8(OSIZE),A2,L
	ADDXY	A2,A11
	SUBI	[20,20],A11		;FUDGE TO THE GAS TANK ON FLIPPED CAR
TEXBTRK
	CREATE	REXPID,MULTIXP		;EXPLODE ON THE REAR
	MOVE	A3,A11			;RESTORE A11
TEXPG
	SOUND1	CEXSND1
	MOVK	10,B0
	MOVI	25,B1
	CALLA	RANGRAND
	SLEEPR	A0
	MOVK	3,A8			;DO THIS MANY SMALL EXPLOSIONS
TEXNEW1
	MMTM	SP,A9,A11
	MOVE	A11,B2
	CLR	B0
	MOVX	B2,B0
	MOVE	B0,B1
	ADDI	240,B1
	CALLA	RANGRAND	;RANDOM X CENTER
	MOVX	A0,A11
	CLR	B0	
	MOVY	B2,B0
	MOVE	B0,B1
	ADDI	[40,0],B1
	CALLA	RANGRAND	;RANDOM Y CENTER
	MOVY	A0,A11
	MOVE	A9,B0
	ZEXT	B0
	MOVE	B0,B1
	SUBK	10,B0	
	ADDK	10,B1
	CALLA	RANGRAND
	MOVX	A0,A9		;RANDOM Z CENTER
	DEC	A8
	JRNZ	TEXNSND
	SOUND1	CEXSND2
	JRUC	TEXKICK
TEXNSND
	SOUND1	CEXSND1
TEXKICK
	INC	A8
	MMFM	SP,A9,A11
	CREATE	REXPID,MULTIXP
	MOVK	10,B0
	MOVI	25,B1
	CALLA	RANGRAND
	SLEEPR	A0
	DSJ	A8,TEXNEW1
	DIE

**************************************************************************
*                                                                        *
* MULTIXP - USE THIS FOR AN XPLOSION WITH MULTIPLE BLASTS		 *
* A9 = OFLAGS:OZPOS TO EXPLODE WITH					 *
* A10 = OID OF ROCKET							 *
* A11 = YX POSITION TO EXPLODE @					 *
*                                                                        *
**************************************************************************
MULTIXP
	MOVI	REXINIT,A14
	CALLA	GPALOBJ
	JRZ	MXPXXDI		;BR = THERE'S NO PALETTES HERE	
	CALLA	STFOBJ
	MOVE	A13,*A0(OPLINK),L	;LINK IT TO THIS PROCESS
	SRL	4,A10
	SLL	4,A10
	ADDK	EXPLODID,A10	;MAKE THIS AN EXPLOSION
	MOVE	A10,*A0(OID),W	;STUFF I.D.
	SUBK	EXPLODID,A10	;BACK HOME AGAIN	
	MOVE	A9,*A0(OZPOS),W	;GONNA SET US A Z POSITION, YESIREE
	MOVI	REXOFF,A8
	SRL	20,A9		;GET FLAGS INTO POSITION
	SLL	4,A9
	ORI	DMAWNZ,A9	;MAKE SURE THE WRITE IS CORRECT
	BTST	B_FLIPH,A9	;AND TEST FOR FLIP
	JREQ	MXP2		;BR = ROCKET NOT FLIPPED
	NEG	A8
MXP2
	ADDXY	A8,A11		;ADD IN THE OFFSET
	CLR	A2
	MOVY	A11,A2		;SET Y POSITION
	MOVX	A11,A3
	SLL	16,A3		;SET X POSITION
	MOVE	A9,A4
	CALLA	GANISAG		;ADJUST
	CALLA	INSOBJ
	MOVI	EXPLOSIONS,A1
	CALLA	ADDSUPP		;ADD IT TO THE CORRECT SUPPLEMENTAL LIST
	MOVE	A1,A10
	MOVE	A0,A8
	MOVI	MXPANIM,A9	;GET ANIMATION TABLE
	CLR	A1
MXP3
	MOVE	*A8(OID),A0,W
	SRL	4,A0
	SLL	4,A0
	CMPI	BEOID,A0
	JREQ	MXP3A		;DON'T EXPLODE OUTWARDS IF IT'S AN ENEMY
	MOVE	*A8(OZPOS),A0,W
	ADDK	4,A0
	MOVE	A0,*A8(OZPOS),W	;EXPLODE OUTWARDS PLEASE
MXP3A
	JSRP	FRANIM
	JRNC	MXP3

	MOVE	*A8(OID),A0,W
	SRL	4,A0
	SLL	4,A0
	CMPI	BEOID,A0
	JREQ	MXPXX

	MOVE	@DEATHCNT,A0,W
	CMPI	7,A0
	JRLO	MEXXDLO	;BR = NOT ENOUGH DEATHS
	CLR	A0
	MOVE	A0,@DEATHCNT,W
	SOUND1	THECROWD
	JRUC	MXPXX
MEXXDLO
	CREATE	0DEAH,DEATHCLR	;WAIT BEFORE YOU CLEAR THE DEATH COUNT
MXPXX
	MOVE	A8,A0		;GET BACK FOR DELETE
	MOVE	A10,A1
	CALLA	DELPAL
	CALLA	DELSUPP		;UN-SUPP ME
	CALLA	DELOBJ		;TAKE IT AWAY
MXPXXDI
	JAUC	SUCIDE

**************************************************************************
*                                                                        *
* PUFFER - ROCKET LAUNCH PUFF OF SMOKE					 *
* A8 = PTR TO ROCKET OBJECT BLOCK(CHANGES TO SMOKE PTR)			 *
* A11 = PTR TO PLAYER DATA AREA(0 = ENEMY NOT A PLAYER)			 *
*                                                                        *
**************************************************************************
PUFFER
	MOVI	PUFFINIT,A14
	CALLA	GPALOBJ
	JRZ	PUFDIE
	CALLA	STFOBJ
	MOVE	*A8(OZVAL),A1,L
	INC	A1
	MOVE	A1,*A0(OZVAL),L		;KEEP THE PUFF OUT FRONT
	CALLA	GETANIXY		;GET ROCKET APOINT POSITION
	MOVE	*A8(OFLAGS),A4,W	;AND ROCKET FLAGS
	CALLA	GANISAG			;ADJUST FOR NEW IMAGE AND POSS. FLIP
	MOVE	A13,*A0(OPLINK),L	;LINKIT HOME
	CALLA	INSOBJ			;PUT IT ON THE LIST
	MOVE	A0,A8			;KEEP FOR DEEP SLEEP

	MOVI	PUFFTAB,A9
	MOVK	1,A1
	JSRP	FRANIM			;ANIMATE THE THING

	MOVE	A8,A0
	CALLA	DELPAL
	CALLA	DELOBJ
PUFDIE
	JAUC	SUCIDE			;THAT'S ALL FOLKS


TR1INIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	TPART1,0,DUMCOLL
	.WORD	DMAWNZ,EFF4OID
	.LONG	0
**************************************************************************
*                                                                        *
* TRAILER - ROCKET BOMB SMOKE TRAIL					 *
* A8 = PTR TO ROCKET OBJECT(BECOMES PTR TO CURRENTLY CLIPPING TRAIL)	 *
* A9 = BECOMES THE CLIP DECREMENT					 *
* A10 = BECOMES THE POINTER TO THE TRAIL PART 1				 *
* A11 = BECOMES THE POINTER TO THE TRAIL PART 2				 *
* NOTE: THE SMOKE TRAILS DO NOT CREATE PALETTES, THEY USE THE FIXED	 *
* 	PALETTE.							 *
*                                                                        *
**************************************************************************
TRAILER
	CLR	A0
	MOVE	A0,*A13(PDATA),L	;CLEAR THIS AREA
	MOVI	TR1INIT,A14
	CALLA	GETOBJ
	JRZ	TRAILFL			;BR = OBJECT FAILURE
	CALLA	STFOBJ
	CLR	A1
	MOVE	A1,*A8(OPAL),W		;ASSUME FIXED PALETTE
	MOVE	*A8(OZVAL),*A0(OZVAL),L
	MOVE	*A8(OYVEL),*A0(OYVEL),L
	MOVE	*A8(OXVEL),A9,L
	MOVE	A9,*A0(OXVEL),L
	SRL	16,A9			;KEEP HERE FOR THE OPENING CLIP
	CALLA	GETANIXY		;GET THE ROCKET ANIMATION POINT POS.
	MOVE	*A8(OFLAGS),A4,W	;AND ROCKET FLAGS
	CALLA	GANISAG			;ADJUST FOR NEW IMAGE AND POSS. FLIP
	MOVE	A13,*A0(OPLINK),L	;LINKIT HOME
	MOVE	A0,A8

	CALLA	GETOBJ			;SETUP FOR PART 2
	JREQ	TRAIL2FL		;NO SECOND PART AVAILABLE

	CALLA	COPYOBJ
	MOVI	TPART2,A1
	MOVE	A1,*A0(OIMG),L		;STUFF THE IMAGE
	CALLA	GETANIXY
	MOVE	*A0(OFLAGS),A4,W
	CALLA	GANISAG			;NOW HE'S ALL SETUP

TRAIL2FL
	MOVE	A0,A11			;HOLD HERE

	MOVE	*A8(OIMG),A1,L
	MOVE	*A1(ISIZE),A3,W		;GET THE X SIZE
	MOVE	A3,A5

	MOVE	A8,A0
	BTST	B_FLIPH,A4
	JRNE	TUCLIPR			;BR = HE'S FLIPPED CLIP RIGHT SIDE

	DIVU	A9,A5			;GET THE # OF ITERATIONS
	NEG	A9			;NEGATE FOR ADD
	CLR	A2
	CALLA	CLIPOBJ			;CLIP THE OBJECT ALL THE WAY
	CALLA	INSOBJ			;PUT IT ON THE LIST
	MOVE	A0,A10

	JSRP	CLIPLEFT

*TIME TO CLIP PART 2 ON THE LEFT
	MOVE	A11,A0
	JREQ	TUCLIPX1		;2nd PART DID NOT EXIST
	MOVE	*A0(OIMG),A1,L
	MOVE	*A1(ISIZE),A3,W		;GET THE X SIZE
	MOVE	A3,A5
	NEG	A9
	DIVU	A9,A5
	NEG	A9
	MOVE	A0,A8
	CLR	A2
	CALLA	CLIPOBJ			;CLIP THE OBJECT ALL THE WAY
	CALLA	INSOBJ			;PUT IT ON THE LIST

	JSRP	CLIPLEFT
	JRUC	TUCLIPX1

*AHH, WE MUST CLIP OFF OF THE RIGHT SIDE THIS TIME
TUCLIPR
	SEXT	A9			;GET THE FULL STORY
	NEG	A9			;DIVIDE POSITIVE
	DIVU	A9,A5			;GET THE # OF ITERATIONS
	NEG	A9
	MOVE	A3,A2
	CLR	A3
	CALLA	CLIPOBJ			;CLIP THE OBJECT ALL THE WAY
	CALLA	INSOBJ			;PUT IT ON THE LIST
	MOVE	A0,A10

	JSRP	CLIPRYTE

*TIME TO CLIP PART 2 ON THE RIGHT
TUCLIPRX
	MOVE	A11,A0
	JREQ	TUCLIPX1		;2nd PART DID NOT EXIST
	MOVE	*A0(OIMG),A1,L
	MOVE	*A1(ISIZE),A2,W		;GET THE X SIZE
	MOVE	A2,A5
	NEG	A9			;DIVIDE POSITIVE
	DIVU	A9,A5			;GET THE # OF ITERATIONS
	NEG	A9
	MOVE	A0,A8
	CLR	A3
	CALLA	CLIPOBJ			;CLIP THE OBJECT ALL THE WAY
	CALLA	INSOBJ			;PUT IT ON THE LIST

	JSRP	CLIPRYTE

TUCLIPX1
	MOVE	A10,A8
	MOVE	A11,A10
	CLR	A11
TRAILWT
	CALLA	SCRTST
	JRNE	TRAILX
	SLOOP	10,TRAILWT
TRAILX
	MOVE	A8,A0
	CALLA	DELOBJ
	TEST	A10
	JRNE	TUCLIPX1		;BR = MUST DELETE THE SECOND
	MOVE	*A13(PDATA),A0,L
	JRZ	TRAILXNS		;BR = NO DR. SHRINKER PROC
	CALLA	KILL
TRAILXNS
	DIE
*TOTAL TRAIL CREATE FAILURE
TRAILFL
	CLR	A10
	CLR	A11			;INDICATE NO TRAILS PRESENT
	SLEEP	40			;GIVE ROCKET A CHANCE TO HIT SOMETHING
	DIE

**************************************************************************
*                                                                        *
* SHRNKTRL - SHRINK THE SMOKE TRAIL INTO AN EXPLOSION			 *
* A10 = POINTER TO TRAIL PART #1					 *
* A11 = POINTER TO TRAIL PART #2					 *
*                                                                        *
**************************************************************************
SHRNKTRL
	MOVE	*A10(OPLINK),A0,L
	JRZ	SHRTRNCP
	MOVE	A13,*A0(PDATA),L
SHRTRNCP
	MOVE	*A10(OXVEL+16),A9,W	;GET THE XVEL OF THIS 'TING
	JRN	STRAILL			;BR = MOVING LEFT, SO CLIP THAT SIDE

*CLIP FROM RIGHT SIDE
	SLEEP	1			;LET IT CLIP OUT MAN
	MOVE	A10,A8			;BRING IT HERE TO SHRINK
	MOVE	*A8(OIMG),A1,L
	MOVE	*A1(ISIZE),A5,W		;GET THE X SIZE
	DIVU	A9,A5			;GET THE # OF ITERATIONS

	JSRP	CLIPRYTE

*TIME TO CLIP PART 2 ON THE RIGHT
	MOVE	A11,A8
	JREQ	SHRKTXA10		;2nd PART DID NOT EXIST
	MOVE	*A8(OIMG),A1,L
	MOVE	*A1(ISIZE),A5,W		;GET THE X SIZE
	DIVU	A9,A5			;GET THE # OF ITERATIONS

	JSRP	CLIPRYTE

	JRUC	SHRNKTX			;DONE WITH THESE GUYS

*SHRINK FROM THE LEFT
STRAILL
	SLEEP	1			;LET IT CLIP YAAH!
	MOVE	A10,A8			;BRING IT HERE TO SHRINK
	MOVE	*A8(OIMG),A1,L
	MOVE	*A1(ISIZE),A5,W		;GET THE X SIZE
	NEG	A9
	DIVU	A9,A5

	JSRP	CLIPLEFT
*TIME TO CLIP PART 2 ON THE LEFT
	MOVE	A11,A8
	JREQ	SHRKTXA10		;2nd PART DID NOT EXIST
	MOVE	*A8(OIMG),A1,L
	MOVE	*A1(ISIZE),A5,W		;GET THE X SIZE
	DIVU	A9,A5

	JSRP	CLIPLEFT

SHRNKTX
	MOVE	*A11(OPLINK),A0,L
	JRZ	SHRNKTX1
	CLR	A1
	MOVE	A1,*A0(PDATA),L
SHRNKTX1
	DIE
*
*EXIT POINT, A10 THE ONLY ONE CREATED
SHRKTXA10
	MOVE	*A10(OPLINK),A0,L
	JRZ	SHKTX101
	CLR	A1
	MOVE	A1,*A0(PDATA),L
SHKTX101
 	DIE
**************************************************************************
*                                                                        *
* CLIPRYTE - CLIP A LENGTH OFF THE RIGHT SIDE OF AN OBJECT		 *
* 	   A GIVEN AMOUNT OF TIMES.					 *
* A5 = AMOUNT OF TIMES TO CLIP						 *
* A8 = PTR TO OBJECT							 *
* A9 = AMOUNT TO CLIP FROM RYTE EACH ITERATION				 *
* NOTE: CALL WITH JSRP							 *
*                                                                        *
**************************************************************************
CLIPRYTE
	PUSHP	A5
	MOVX	A9,A2
	ZEXT	A2
	CLR	A3
	CALLA	CLIPOBJ			;CLIP UP THE RIGHT SIDE	
	SLEEP	1
	PULLP	A5
	DSJS	A5,CLIPRYTE
	RETP

**************************************************************************
*                                                                        *
* CLIPLEFT - CLIP A LENGTH OFF THE LEFT SIDE OF AN OBJECT		 *
* 	   A GIVEN AMOUNT OF TIMES.					 *
* A5 = AMOUNT OF TIMES TO CLIP						 *
* A8 = PTR TO OBJECT							 *
* A9 = AMOUNT TO CLIP FROM LEFT EACH ITERATION				 *
* NOTE: CALL WITH JSRP							 *
*                                                                        *
**************************************************************************
CLIPLEFT
	PUSHP	A5
	MOVX	A9,A3
	ZEXT	A3
	CLR	A2
	CALLA	CLIPOBJ	
	SLEEP	1
	PULLP	A5
	DSJS	A5,CLIPLEFT
	RETP

*
*PROJECTILE COLLISION LISTS
BCOLL
	.WORD	BGGID
	.LONG	BCOLDCAN
	.WORD	BGLID
	.LONG	BCOLDPST
	.WORD	BGDMPID
	.LONG	BCOLDDMP
	.WORD	C1OID|CBODYID
	.LONG	BCOLDDMP
	.WORD	C1OID|WSHLDID
	.LONG	BCOLDDMP
	.WORD	C1OID|TRUNKID
	.LONG	BCOLDDMP
	.WORD	B1OID|BULLETID
	.LONG	BCOLDPST
	.WORD	B1OID|ROCKETID
	.LONG	BCOLDPST
	.WORD	B1OID|FLAMEID
	.LONG	BCOLL1
	.WORD	B2OID|BULLETID
	.LONG	BCOLDPST
	.WORD	B2OID|ROCKETID
	.LONG	BCOLDPST
	.WORD	B2OID|FLAMEID
	.LONG	BCOLL1
	.WORD	INTR1OID|CBODYID
	.LONG	BCOLDDMP
	.WORD	INTR1OID|WSHLDID
	.LONG	BCOLDDMP
	.WORD	INTR1OID|TRUNKID
	.LONG	BCOLDDMP
	.WORD	TRAN1OID|CBODYID
	.LONG	BCOLDDMP
	.WORD	TRAN1OID|WSHLDID
	.LONG	BCOLDDMP
	.WORD	TRAN1OID|TRUNKID
	.LONG	BCOLDDMP
	.WORD	TRAN2OID|CBODYID
	.LONG	BCOLDDMP
	.WORD	TRAN2OID|WSHLDID
	.LONG	BCOLDDMP
	.WORD	TRAN2OID|TRUNKID
	.LONG	BCOLDDMP
	.WORD	CSTR1OID|CBODYID
	.LONG	BCOLDDMP
	.WORD	CSTR1OID|WSHLDID
	.LONG	BCOLDDMP
	.WORD	CSTR1OID|TRUNKID
	.LONG	BCOLDDMP
****	.WORD	0
****	.LONG	BCOLL1
	.WORD	0
	.LONG	GLASSTST

BP1COLL
	.WORD	P1OID
	.LONG	DUMRTSG
	.WORD	P2OID
	.LONG	DUMRTSG
	.WORD	BGGID
	.LONG	BCOL1CAN
	.WORD	BGLID
	.LONG	BCOL1PST
	.WORD	BGDMPID
	.LONG	BCOL1DMP

	.WORD	BEOID|BULLETID
	.LONG	BCOL1PST
	.WORD	BEOID|DYNAID
	.LONG	BCOL1PST
	.WORD	BEOID|ROCKETID
	.LONG	BCOL1PST
	.WORD	BEOID|FLAMEID
	.LONG	BP1COLL1

	.WORD	C1OID|CBODYID
	.LONG	BCOL1CAR
	.WORD	C1OID|WSHLDID
	.LONG	BCOL1DMP
	.WORD	C1OID|TRUNKID
	.LONG	BCOL1DMP

	.WORD	CAR3OID|CBODYID
	.LONG	BCOL1CAR
	.WORD	CAR3OID|WSHLDID
	.LONG	BCOL1DMP

	.WORD	INTR1OID|CBODYID
	.LONG	BCOL1CAR
	.WORD	INTR1OID|WSHLDID
	.LONG	BCOL1DMP
	.WORD	INTR1OID|TRUNKID
	.LONG	BCOL1DMP

	.WORD	TRAN1OID|CBODYID
	.LONG	BCOL1CAR
	.WORD	TRAN1OID|WSHLDID
	.LONG	BCOL1DMP
	.WORD	TRAN1OID|TRUNKID
	.LONG	BCOL1DMP

	.WORD	TRAN2OID|CBODYID
	.LONG	BCOL1CAR
	.WORD	TRAN2OID|WSHLDID
	.LONG	BCOL1DMP
	.WORD	TRAN2OID|TRUNKID
	.LONG	BCOL1DMP

	.WORD   CSTR1OID|CBODYID
	.LONG	BCOL1CAR
	.WORD	CSTR1OID|WSHLDID
	.LONG	BCOL1DMP
	.WORD	CSTR1OID|TRUNKID
	.LONG	BCOL1DMP

****	.WORD	0
****	.LONG	BP1COLL1
	.WORD	0
	.LONG	GLASSTST1

BP2COLL
	.WORD	P1OID
	.LONG	DUMRTSG
	.WORD	P2OID
	.LONG	DUMRTSG
	.WORD	BGGID
	.LONG	BCOL2CAN
	.WORD	BGLID
	.LONG	BCOL2PST
	.WORD	BGDMPID
	.LONG	BCOL2DMP

	.WORD	BEOID|BULLETID
	.LONG	BCOL2PST
	.WORD	BEOID|DYNAID
	.LONG	BCOL2PST
	.WORD	BEOID|ROCKETID
	.LONG	BCOL2PST
	.WORD	BEOID|FLAMEID
	.LONG	BP2COLL1

	.WORD	C1OID|CBODYID
	.LONG	BCOL2CAR
	.WORD	C1OID|WSHLDID
	.LONG	BCOL2DMP
	.WORD	C1OID|TRUNKID
	.LONG	BCOL2DMP

	.WORD	CAR3OID|CBODYID
	.LONG	BCOL2CAR
	.WORD	CAR3OID|WSHLDID
	.LONG	BCOL2DMP

	.WORD	INTR1OID|CBODYID
	.LONG	BCOL2CAR
	.WORD	INTR1OID|WSHLDID
	.LONG	BCOL2DMP
	.WORD	INTR1OID|TRUNKID
	.LONG	BCOL2DMP

	.WORD	TRAN1OID|CBODYID
	.LONG	BCOL2CAR
	.WORD	TRAN1OID|WSHLDID
	.LONG	BCOL2DMP
	.WORD	TRAN1OID|TRUNKID
	.LONG	BCOL2DMP

	.WORD	TRAN2OID|CBODYID
	.LONG	BCOL2CAR
	.WORD	TRAN2OID|WSHLDID
	.LONG	BCOL2DMP
	.WORD	TRAN2OID|TRUNKID
	.LONG	BCOL2DMP

	.WORD	CSTR1OID|CBODYID
	.LONG	BCOL2CAR
	.WORD	CSTR1OID|WSHLDID
	.LONG	BCOL2DMP
	.WORD	CSTR1OID|TRUNKID
	.LONG	BCOL2DMP

****	.WORD	0
****	.LONG	BP2COLL1
	.WORD	0
	.LONG	GLASSTST2
*
*ENEMY ROCKET COLLISIONS
RCOLL
	.WORD	C1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	C1OID|TRUNKID
	.LONG	RCOLCAR
	.WORD	CAR2OID|CBODYID
	.LONG	RCOLCAR
	.WORD	CAR3OID|CBODYID
	.LONG	RCOLCAR
	.WORD	TRAN1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	TRAN2OID|CBODYID
	.LONG	RCOLCAR
	.WORD	CSTR1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	INTR1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	C1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	CAR2OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	INTR1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	C1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	CAR2OID|FTIREID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|FTIREID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	INTR1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	C1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	CAR2OID|RTIREID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|RTIREID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	INTR1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	BEOID|BULLETID
	.LONG	DUMRTSG
	.WORD	BEOID|HYPOD
	.LONG	DUMRTSG
	.WORD	BEOID|FLAMEID
	.LONG	DUMRTSG
	.WORD	BEOID|EXPLODID
	.LONG	DUMRTSG

	.WORD	WEEDOID
	.LONG	DUMRTSG

	.WORD	0
	.LONG	RCOLL1

*
*PLAYER 1 ROCKET COLLISIONS
P1RCOLL
	.WORD	P1OID
	.LONG	DUMRTSG
	.WORD	C1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	C1OID|TRUNKID
	.LONG	RCOLCAR
	.WORD	CAR2OID|CBODYID
	.LONG	RCOLCAR
	.WORD	CAR3OID|CBODYID
	.LONG	RCOLCAR
	.WORD	TRAN1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	TRAN2OID|CBODYID
	.LONG	RCOLCAR
	.WORD	CSTR1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	INTR1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	C1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	CAR2OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	INTR1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	C1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	CAR2OID|FTIREID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|FTIREID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	INTR1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	C1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	CAR2OID|RTIREID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|RTIREID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	INTR1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	BEOID|BULLETID
	.LONG	DUMRTSG
	.WORD	BEOID|HYPOD
	.LONG	DUMRTSG
	.WORD	BEOID|FLAMEID
	.LONG	DUMRTSG
	.WORD	BEOID|EXPLODID
	.LONG	DUMRTSG

	.WORD	WEEDOID
	.LONG	DUMRTSG

	.WORD	0
	.LONG	RCOLL1

*
*PLAYER 2 ROCKET COLLISIONS
P2RCOLL
	.WORD	P2OID
	.LONG	DUMRTSG
	.WORD	C1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	C1OID|TRUNKID
	.LONG	RCOLCAR
	.WORD	CAR2OID|CBODYID
	.LONG	RCOLCAR
	.WORD	CAR3OID|CBODYID
	.LONG	RCOLCAR
	.WORD	TRAN1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	TRAN2OID|CBODYID
	.LONG	RCOLCAR
	.WORD	CSTR1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	INTR1OID|CBODYID
	.LONG	RCOLCAR
	.WORD	C1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	CAR2OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	INTR1OID|WSHLDID
	.LONG	DUMRTSG
	.WORD	C1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	CAR2OID|FTIREID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|FTIREID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	INTR1OID|FTIREID
	.LONG	DUMRTSG
	.WORD	C1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	CAR2OID|RTIREID
	.LONG	DUMRTSG
	.WORD	TRAN1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	TRAN2OID|RTIREID
	.LONG	DUMRTSG
	.WORD	CSTR1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	INTR1OID|RTIREID
	.LONG	DUMRTSG
	.WORD	BEOID|BULLETID
	.LONG	DUMRTSG
	.WORD	BEOID|HYPOD
	.LONG	DUMRTSG
	.WORD	BEOID|FLAMEID
	.LONG	DUMRTSG
	.WORD	BEOID|EXPLODID
	.LONG	DUMRTSG

	.WORD	WEEDOID
	.LONG	DUMRTSG

	.WORD	0
	.LONG	RCOLL1

REXCOLL	.WORD	0
	.LONG	DUMRTSG

*PLAYER 1 BULLET AS OBJECT 1 COLLISION ROUTINE
*A0=OBLOCK PTR OF BULLET
BP1COLL1
	MOVI	P1DATA,A2
	JRUC	BPXCOLL1
*PLAYER 2 BULLET AS OBJECT 1 COLLISION ROUTINE
*A0=OBLOCK PTR OF BULLET
BP2COLL1
	MOVI	P2DATA,A2
BPXCOLL1
	MOVE	*A2(PBULLONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PBULLONS),W	;DEC ON SCREEN COUNT
*BULLET AS OBJECT 1 COLLISION ROUTINE
*A0=OBLOCK PTR OF BULLET
BCOLL1
	SWAP	A8,A0
	MOVE	*A8(OPLINK),A0,L
	JRZ	BCOLLNP			;BR = FUCK! NO PROCESS
	CALLA	GETA10			;GET THE SUPPLEMENTAL
	MOVE	A10,A1
	CALLA	KILL			;KILL THE CONTROLLING PROCESS
	MOVE	A8,A0
	CALLA	DELPAL
	CALLA	DELSUPP			;DELETE FROM THE SUPPLEMENTAL LIST
	CALLA	DELSOBJ			;DELETE THIS OBJECT
BULLRET2
BCOLLNP
	CLR	A0
	INC	A0
DUMRTS	RETS

**************************************************************************
*                                                                        *
* GLASSTST - TEST TO SEE IF THE ENEMY BULLET HIT A GLASS OBJECT		 *
* A0 = ENEMY BULLET							 *
* A8 = SUSPECT OBJECT							 *
*                                                                        *
**************************************************************************
GLASSTST
	MOVE	*A8(OID),A5,W
	SRL	4,A5
	SLL	4,A5
	CMPI	BGGLASS,A5
	JREQ	BCOLDCAN
	JRUC	BCOLL1
*GLASS TEST FOR PLAYER 1 BULLETS
GLASSTST1
	MOVE	*A8(OID),A5,W
	SRL	4,A5
	SLL	4,A5
	CMPI	BGGLASS,A5
	JREQ	BCOL1CAN
	JRUC	BP1COLL1
*GLASS TEST FOR PLAYER 1 BULLETS
GLASSTST2
	MOVE	*A8(OID),A5,W
	SRL	4,A5
	SLL	4,A5
	CMPI	BGGLASS,A5
	JREQ	BCOL2CAN
	JRUC	BP2COLL1

*
*BULLET COLLISION WITH A DING
BCOLDDMP
	MOVE	A0,A8
	MOVI	DINGDUMP,A0
	CALLA	ONESND
	JRUC	BCOLDING
BCOLDCAN
	MOVE	A0,A8
	MOVI	DINGCANR,A0
	CALLA	ONESND
	JRUC	BCOLDING
BCOLDPST
	MOVE	A0,A8
	MOVI	DINGPSTR,A0
BCOLDSID
	CALLA	ONESND
	JRUC	BCOLDING
*
*BCOLDING - HANDLE BULLET COLLISION BY TURNING IT INTO THE DING FRAMES
*A8 = PTR TO BULLET
BCOLDING
	MOVE	*A8(OPLINK),A0,L
	JRZ	BCOLDNP			;NO PROC
	CALLA	GETA10			;GET THE SUPPLEMENTAL
	MOVE	A10,A1
	CALLA	KILL			;KILL THE CONTROLLING PROCESS
	MOVE	A8,A0
	CALLA	DELSUPP			;DELETE FROM THE SUPPLEMENTAL LIST
	CREATE	INDPID,DINGANI		;MAKE THE DING PROC
BCOLDNP
	CLR	A0
	INC	A0
	RETS

**************************************************************************
*                                                                        *
* DINGANI - TURN AN OBJECT INTO A DING, IT PLACES IT ON THE RIGHT	 *
* 	  CENTER EDGE OF THE OLD OBJECT.				 *
* A8 = PTR TO OLD OBJECT						 *
*                                                                        *
**************************************************************************
DINGANI
	MOVE	A8,A0
	CALLA	PSTOP
	CALLA	DELSHAD
	MOVI	EFF0OID,A4
	MOVE	A4,*A0(OID),W
	MOVE	*A0(OFLAGS),A4,W
	MOVE	*A0(ODMAXY),A2,L
	MOVE	*A0(OSIZEY),A1,W
	SRL	1,A1
	SLL	16,A1
	CLR	A3
	BTST	B_FLIPH,A4
	JRNE	DINGANI1		;BR = LEFT EDGE IF FLIPPED
	MOVE	*A0(OSIZEX),A3,W
DINGANI1
	MOVY	A1,A3
	ADDXY	A3,A2
	MOVX	A2,A3
	SLL	16,A3
	MOVI	BDINGTAB,A9
	MOVE	*A9(0),*A0(OIMG),L
	CALLA	GANISAG			;ADJUST DING POSITION			
	MOVK	1,A1
	JSRP	FRANIM			;ANIMATE AND DIE
	MOVE	A8,A0
	CALLA	DELPAL
	CALLA	DELSOBJ
	DIE

DING45
	MOVE	A8,A0
	CALLA	PSTOP
	CALLA	DELSHAD
	MOVI	EFF0OID,A4
	MOVE	A4,*A0(OID),W
	MOVE	*A8(OFLAGS),A4,W
	MOVI	DING45A,A1
	CALLA	ANI			;ANIMATE TO THE NEW IMAGE
	MOVE	*A8(OYVAL),A2,L
	SUBI	[42,0],A2		;ADJUST FOR BULLET FLASH
	MOVE	A2,*A8(OYVAL),L
	SLEEP	3
	MOVE	A8,A0
	CALLA	PULLOBJ
	SLEEP	3
	MOVI	DING45B,A1
	MOVE	*A8(OFLAGS),A4,W
	CALLA	ANI
	MOVE	A8,A0
	CALLA	INSOBJ
	SLEEP	3
	MOVE	A8,A0
	CALLA	DELPAL
	CALLA	DELSOBJ
	DIE
*
*POSSIBLE PLAYER BULLET COLLISION WITH PLAYERS CAR
BCOL1CAR
	MOVE	@P1DATA+PIRQFLAG,A2,W
	ANDI	MPASSEN|MDRIVER,A2
	JREQ	BCOL1DMP		;BR = NOT IN A CAR ANYHOW	
	MOVE	@PLAYCAR,A2,L
	CMP	A2,A8
	JRNE	BCOL1DMP		;BR = WRONG CAR
	RETS
	
*
*PLAYER ONE BULLET COLLISIONS WITH NOISY BACKGROUND OBJECTS
BCOL1DMP
	MOVI	P1DATA,A2
	MOVE	*A2(PBULLONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PBULLONS),W	;DEC ON SCREEN COUNT
	JRUC	BCOLDDMP
BCOL1CAN
	MOVI	P1DATA,A2
	MOVE	*A2(PBULLONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PBULLONS),W	;DEC ON SCREEN COUNT
	JRUC	BCOLDCAN
BCOL1PST
	MOVI	P1DATA,A2
	MOVE	*A2(PBULLONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PBULLONS),W	;DEC ON SCREEN COUNT
	JRUC	BCOLDPST

*
*POSSIBLE PLAYER BULLET COLLISION WITH PLAYERS CAR
BCOL2CAR
	MOVE	@P2DATA+PIRQFLAG,A2,W
	ANDI	MPASSEN|MDRIVER,A2
	JREQ	BCOL2DMP		;BR = NOT IN A CAR ANYHOW	
	MOVE	@PLAYCAR,A2,L
	CMP	A2,A8
	JRNE	BCOL2DMP		;BR = WRONG CAR
	RETS

*
*PLAYER TWO BULLET COLLISIONS WITH NOISY BACKGROUND OBJECTS
BCOL2DMP
	MOVI	P2DATA,A2
	MOVE	*A2(PBULLONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PBULLONS),W	;DEC ON SCREEN COUNT
	JRUC	BCOLDDMP
BCOL2CAN
	MOVI	P2DATA,A2
	MOVE	*A2(PBULLONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PBULLONS),W	;DEC ON SCREEN COUNT
	JRUC	BCOLDCAN
BCOL2PST
	MOVI	P2DATA,A2
	MOVE	*A2(PBULLONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PBULLONS),W	;DEC ON SCREEN COUNT
	JRUC	BCOLDPST
*
*ROCKET BOMB CAR COLLISION
*A8 = PTR TO THING THAT GOT HIT
*A0 = PTR TO ROCKET
RCOLCAR 
	MOVE	*A0(OID),A1,W
	SRL	4,A1
	SLL	4,A1
	CMPI	B1OID,A1
	JRNE	RCOLCAR2
	MOVE	@P1DATA+PIRQFLAG,A2,W
RCOLCAR1	
	ANDI	MDRIVER|MPASSEN,A2
	JREQ	RCOLCAR3
	MOVE	@PLAYCAR,A2,L
	CMP	A2,A8
	JRNE	RCOLCAR3
	RETS
RCOLCAR2
	CMPI	B2OID,A1
	JRNE	RCOLCAR3
	MOVE	@P2DATA+PIRQFLAG,A2,W
	JRUC	RCOLCAR1
RCOLCAR3
	MOVI	CEXPLODE,A7		;BIG CAR EXPLOSION
	MOVI	CEXPID,A1
	JRUC	RCOLL3
*
*ROCKET BOMB NORMAL COLLISION
*A8 = PTR TO THING THAT GOT HIT
*A0 = PTR TO ROCKET
RCOLL1 
	MOVI	REXPLODE,A7    		;NORMAL EXPLOSION
	MOVI	REXPID,A1		;EXPROSION PROCESS I.D.	
RCOLL3
	SWAP	A0,A8
	MOVE	*A8(OZPOS),A2,W		;ROCKET Z
	MOVE	*A8(OFLAGS),A9,W
	SLL	16,A9
	MOVX	A2,A9			;A9 = OFLAGS:OZPOS
	MOVE	*A8(OXVAL),A3,L
	MOVE	*A8(OYVAL),A2,L

	MOVE	*A8(OID),A10,W		;A10 = ROCKET I.D.
	MOVY	A2,A11
	SRL	16,A3
	MOVX	A3,A11			;PASS ROCKET UL [Y,X] 
	MOVE	A8,A2			;STORE THE ROCKET PTR
	MOVE	A0,A8			;PASS THE OBJECT THAT GOT HIT
	CALLA	GETPRC			;CREATE THE ROCKET EXPLOSION

	MOVE	A2,A8			;GET THE ROCKET PTR BACK
	MOVE	*A8(OFLAGS),A2,W	;FLAGS PLEASE
	MOVE	A9,A3			;Z POSITION OF SMOKE TRAIL SHOULD
	SUBK	2,A3			;BE LESS THAN THAT OF THE EXPLOSION.

	MOVE	*A8(OPLINK),A0,L
	JRZ	RCOLLNP
	CALLA	GETA11		;GET THE DATA BLOCK PTR

	MOVE	A11,A2
	JREQ	RCOLL4
	MOVE	*A2(PROCKONS),A1,W
	DEC	A1
	MOVE	A1,*A2(PROCKONS),W	;DECREMENT THE # ON SCREEN
RCOLL4
	CALLA	GETA9		;GET THE POINTER TO THE SMOKE TRAIL PROC.
	JRZ	RTRAILX		;NO TRAILER PROC.
	MOVE	A9,A0		;HERE TO PUT THE GRABDA
	CALLA	GETA10		;PTR TO ONE TRAIL PART.
	JREQ	RTRAILX		;SKIP TOTALLY, NO TRAIL WAS CREATED
	CALLA	GETA11		;PTR TO 2ND TRAIL PART, IF IT EXISTS
	MOVE	A3,*A10(OZPOS),W
	MOVE	A3,*A11(OZPOS),W	;TRAIL Z'S
	CREATE	0EFFH,SHRNKTRL		;CALL THE TRAIL SHRINKER
RTRAILX
	MOVE	A8,A0		;SWAP ROCKET PTR FOR NEW COLLISION SHIT
	JRUC	BCOLL1		;AND CLEAN UP
RCOLLNP
	MOVE	A8,A0
	CALLA	DELSOBJ
	CLR	A0
	INC	A0
	RETS

   .STRING "NARC COPYRIGHT 1988, WILLIAMS ELECTRONICS GAMES, INC. - EPJ & GNP"
	.EVEN

*
*MISCELLANEOUS ANIMATION SCRIPTS
*

*ROCKET ANIMATION TABLE
ROCKET	.LONG	ROCKET1
	.WORD	4
	.LONG	ROCKET2
	.WORD	4
	.LONG	ROCKET3
	.WORD	4
ROCKIMM
	.LONG	ROCKET4
	.WORD	1
	.LONG	0

*ROCKET LAUNCH PUFFY THING
PUFFTAB	.LONG	PUF1
	.WORD	3
	.LONG	PUF2
	.WORD	3
	.LONG	PUF3
	.WORD	4
	.LONG	PUF4
	.WORD	5
	.LONG	PUF5
	.WORD	7
	.LONG	0

*BULLETS
PBULLETF					;PLAYER BULLET
	.LONG	BULLET
	.WORD	4
	LONGNULL
EBULLETF					;ENEMY BULLET
	.LONG	BULLETE
	.WORD	4
	LONGNULL
*BULLET DING
BDINGTAB
	.LONG	LDING1
	.WORD	4
	.LONG	LDING2
	.WORD	4
	.LONG	LDING3
	.WORD	4
	.LONG	LDING4
	.WORD	4
	.LONG	LDING5
	.WORD	4
	LONGNULL

*Explosion Animation Table
EXPLODA
	.LONG	BLAM1
	.WORD	3
	.LONG	BLAM2
	.WORD	3
	.LONG	BLAM3
	.WORD	4
	.LONG	BLAM4
	.WORD	4
	.LONG	BLAM5
	.WORD	5
	.LONG	BLAM6
	.WORD	5
	.LONG	BLAM7
	.WORD	5
	.LONG	BLAM8
	.WORD	5
	.LONG	0

MXPANIM
	.LONG	BLAM2
	.WORD	5
	.LONG	BLAM3
	.WORD	5
	.LONG	BLAM4
	.WORD	5
	.LONG	BLAM5
	.WORD	5
	.LONG	BLAM6
	.WORD	5
	.LONG	BLAM8
	.WORD	5
	.LONG	0

	.END
