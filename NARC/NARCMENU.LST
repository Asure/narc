TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .FILE   "NARCMENU.ASM"
       3                            .WIDTH  132
       4                            .OPTION B,D,L,T
       5                            .MNOLIST
       6                    **************************************************************************
       7                    *                                                                        *
       8                    *          NARC (R)                                                      *
       9                    *                                                                        *
      10                    *          Copyright 1988 Williams Electronics Games Inc.                *
      11                    *          All Rights Reserved                                           *
      12                    *                                                                        *
      13                    **************************************************************************
      14                    *                                                                        *
      15                    *          Narc Test Program Menus                                       *
      16                    *                                                                        *
      17                    *          Larry DeMar    December 1, 1988                               *
      18                    *                                                                        *
      19                    **************************************************************************
      20                            .INCLUDE        "\video\MPROCEQU.ASM"   ;MPROC equates
      21                            .INCLUDE        "\video\DISPEQU.ASM"
      22                            .INCLUDE        "\video\GSP.INC"          ;GSP assembler equates
      23                            .INCLUDE        "\video\SYS.INC"    ;Zunit system equates
      24                            .INCLUDE        "\video\MACROS.HDR" ;Macros, Yeah!
      25                            .INCLUDE        "IMGTBL.GLO"              ;GLOBALS
      26                    *       LOCAL STUFF
      27                    *       .INCLUDE        "NARCEQU.ASM"           ;NARC Equates
      28                             .INCLUDE        "NARCLEQU.ASM"      ;LINKY EQUATES
      29                             .INCLUDE        "NARCMEQU.ASM"      ;MENU EQUATES
      30                    *
      31                    *        IN THIS MODULE
      32                    *
      33                             .GLOBAL         MEN_MAIN,CSELCT,GET_CSPT,CS_POINT
      34                             .GLOBAL         MESS_FAC
      35                             .GLOBAL         ANY_BUT,MEN_YN
      36                             .GLOBAL         STR_OBJ
      37                             .GLOBAL         STR_FREE
      38                             .GLOBAL         CKPROMPT
      39                             .GLOBAL         GO_DIAG           ;ROUTINE FOR DIAGNOSTIC MENU
      40                             .GLOBAL         RTR_LEV,ROM_LEV
      41                             .GLOBAL         MESS_MM
      42                             .GLOBAL         CS_ENTS           ;NUMBER OF HIGHEST IN COIN TABLE
      43                             .GLOBAL         TWO_TS,TWO_TP
      44                    *         .GLOBAL         CK_PUSS
      45                             .GLOBAL         CASHBUT
      46                             .GLOBAL         FAC_STUF
      47                             .GLOBAL         G1SEL,F1SEL
      48                             .GLOBAL         BUILD_ST
      49                             .GLOBAL         SCODE             ;SYNTH CODE CURRENTLY BEING MADE
      50                             .GLOBAL         DCODE             ;DIG CODE CURRENTLY BEING MADE
      51                             .GLOBAL         HID_P
      52                    *
      53                    *        IN NARCTEST
      54                    *
      55                             .GLOBAL         GEN_MENU,B_MENU
      56                             .GLOBAL         L_MESS,TOP_BOX,WT_ADV,WW_ADV
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE    2

      57                             .GLOBAL         GET_AUD
      58                             .GLOBAL         LM_FINIS
      59                             .GLOBAL         LM_SETUP
      60                             .GLOBAL         BAD_AUD
      61                             .GLOBAL         MAIN_RET
      62                             .GLOBAL         AREUSURE
      63                             .GLOBAL         F_TITLE
      64                             .GLOBAL         ST_STICK
      65                             .GLOBAL         GETSTICK
      66                             .GLOBAL         FAC_SET
      67                             .GLOBAL         SUR_MESS
      68                             .GLOBAL         SURE_BOX
      69                             .GLOBAL         RT_RET
      70                             .GLOBAL         GET_FAC
      71                             .GLOBAL         WAIT_BUT
      72                             .GLOBAL         DIGSRT
      73                             .GLOBAL         DIAG_EX
      74                             .GLOBAL         GET_ADV
      75                             .GLOBAL         STD_BORD
      76                             .GLOBAL         SND_MADE
      77                             .GLOBAL         NO_CLEAR
      78                             .GLOBAL         LAST_BUT
      79                             .GLOBAL         G_BORDER
      80                    *
      81                    *        IN NARCHELP
      82                    *
      83                             .GLOBAL GET_ADJ
      84                             .GLOBAL STRCAT
      85                             .GLOBAL CLR_SUBS
      86                             .GLOBAL NO_CREDS
      87                             .GLOBAL CLR_AUDR
      88                             .GLOBAL CLR_AUD
      89                             .GLOBAL DISPDUMP
      90                             .GLOBAL CAT_A0
      91                             .GLOBAL CK_MAX
      92                             .GLOBAL DUMP_FS
      93                             .GLOBAL ADJ_PAGE
      94                             .GLOBAL F_ADC_S
      95                             .GLOBAL WC_BYTEI
      96                             .GLOBAL RC_WORD
      97                             .GLOBAL DEF_PAGE
      98                             .GLOBAL WAIT_MUT
      99                    *
     100                    *        IN NARCHSTD
     101                    *
     102                             .GLOBAL ALL_TAB,INIT_TB,FORM_ADC,WC_WORD,CMOS_VAL
     103                             .GLOBAL CK_DOOR,P_FORK,GET_HSC,INIT_HSR
     104                    *
     105                    *        IN NARCADJ
     106                    *
     107                             .GLOBAL GO_ADJ
     108                    *
     109                    *        IN NARCENT
     110                    *
     111                             .GLOBAL OP_INITS,E_INITS
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE    3

     112                    *
     113                    *        IN NARCSPRY
     114                    *
     115                             .GLOBAL         SPR_GPAL, SPR_FPAL 
     116                    *
     117                    *       BEAGLEWARE
     118                    *
     119                            .GLOBAL ROM_CHK,CPU_CHK,SW_CHK,COL_BARS,CROSS_H,BURN_IN
     120                    *
     121                    *        SO THAT NARCEQU IS NOT NECESSARY IN THIS MODULE,
     122                    *
     123                             .GLOBAL RD15FONT,SCRCLR,MYOINIT,COLRSTRT,STRCNRM,GAMSTATE
     124                             .GLOBAL STRNGRAM,BLNKAREA,STRLNRM,RD7FONT,HEXTOASC
     125                             .GLOBAL STRRNRM,RD20FONT,CLR_SCRN,INDIAG
     126                             .GLOBAL WARMSET,FILLAREA,QSNDRST
     127                    *
     128 00000000                    .BSS    FAC_FLAG,16          ;FLAG SAYS CLEAR AUDITS AND HSTABLE
     129                    *                                     ;IF FACTORY SETTINGS SUCCEED.
     130 00000010                    .BSS    SCODE,16             ;SYNTH CODE LAST MADE!
     131 00000020                    .BSS    DCODE,16             ;DIG CODE LAST MADE!
     132 00000030                    .BSS    TMPOBJ,32            ;TEMPORARY OBJECT FROM STR_OBJ
     133                    
     134 00000000                    .TEXT
     135                    
     136              0040  INDIAG  .EQU    40H
     137                    
     138                    **************************************************************************
     139                    *                                                                        *
     140                    *          COIN TABLE                                                    *
     141                    *                                                                        *
     142                    **************************************************************************
     143                    *                                                                        *
     144                    *          The coin table is made up of the normal entries from          *
     145                    *          the pinball system, as well as some new ones that             *
     146                    *          determine start and buy-in cost, and others that              *
     147                    *          aid in the determination of a "total collection".             *
     148                    *                                                                        *
     149                    *          Left Slot Multiplier              word                        *
     150                    *          Center Slot Multiplier            word                        *
     151                    *          Right Slot Multiplier             word                        *
     152                    *          Units for Credit                  word                        *
     153                    *          Units for Bonus                   word                        *
     154                    *          Minimum Units                     word                        *
     155                    *          Credits to start                  word                        *
     156                    *          Credits to Continue               word                        *
     157                    *          Divisor in money calculation      word   0 means "OFF"        *
     158                    *                                                                        *
     159                    * --------------------------------------------------------------         *
     160                    * The above value get copied as adjustments (and are adjustable).        *
     161                    * In addition, the coin table contains help on how to arrive at          *
     162                    * the "Total Collection" for the coin audits.                            *
     163                    * --------------------------------------------------------------         *
     164                    *                                                                        *
     165                    *          Count for each Left coin          word                        *
     166                    *          Count for each Center coin        word                        *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE    4

     167                    *          Count for each Right coin         word                        *
     168                    *          Pointer to Leading text string    long                        *
     169                    *          Pointer to Following text string  long                        *
     170                    *                                                                        *
     171                    **************************************************************************
     172                    *                                                                        *
     173                    *          GET_CSPT                                                      *
     174                    *                                                                        *
     175                    *          THIS IS CALLED TO RETURN IN A6 THE CURRENT                    *
     176                    *          CSELCT LINE AS STORED IN THE ADJUSTMENT TABLE.                *
     177                    *                                                                        *
     178                    **************************************************************************
     179 00000000     098f  GET_CSPT MMTM    SP,A0
         00000010     8000  
     180 00000020     09c0           MOVI    ADJPRICE,A0
         00000030     0001  
     181 00000040     0d5f           CALLA   GET_ADJ         ;GET THE COIN SELECT NUMBER BEING USED.
         00000050 00000000! 
     182 00000070     0d3f           CALLR   CS_POINT
         00000080     0003  
     183 00000090     09af          MMFM    SP,A0
         000000a0     0001  
     184 000000b0     0960          RETS
     185                    
     186                    **************************************************************************
     187                    *                                                                        *
     188                    *          CS_POINT                                                      *
     189                    *                                                                        *
     190                    *          THIS IS CALLED TO POINT AT AN ENTRY IN THE COINAGE            *
     191                    *          SELECT TABLE.                                                 *
     192                    *                                                                        *
     193                    *          IT TAKES OFFSET IN A0.                                        *
     194                    *          IT RETURNS POINTER IN A6.                                     *
     195                    *                                                                        *
     196                    **************************************************************************
     197 000000c0     098f  CS_POINT MMTM    SP,A0,A1
         000000d0     c000  
     198 000000e0     4c00           MOVE    A0,A0           ;ZERO?
     199 000000f0     ca07           JRZ     CS1             ;YEP...RETURN FIRST LINE
     200                    
     201 00000100     0b60           CMPI    CS_ENTS,A0      ;IN RANGE?
         00000110 ffffffcc  
     202 00000130     c202           JRLS    CS2             ;YEP...CONTINUE
     203 00000140     09c0           MOVI    1,A0            ;TOO LARGE.......USE 1ST LINE.
         00000150     0001  
     204                    
     205 00000160     1420  CS2      DEC     A0              ;INDEX INTO TABLE
     206 00000170     09c1  CS1      MOVI    CS_SIZE,A1      ;SIZE PER ENTRY
         00000180     0180  
     207 00000190     5e01           MPYU    A0,A1           ;OFFSET INTO TABLE
     208 000001a0     0b21           ADDI    CSELCT,A1
         000001b0 00000000" 
     209 000001d0     4c26           MOVE    A1,A6           ;RETURN THE POINTER
     210 000001e0     09af          MMFM    SP,A0,A1
         000001f0     0003  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE    5

     211 00000200     0960          RETS
     212                    
     213                    **************************************************************************
     214                    *                                                                        *
     215                    *          CKPROMPT                                                      *
     216                    *                                                                        *
     217                    *          IS THERE A PROMPT STRING FOR THE CREDITS PAGE.                *
     218                    *                                                                        *
     219                    *                                                                        *
     220                    *          A0 RETURNS:                                                   *
     221                    *                                                                        *
     222                    *          YES.....RETURN POINTER TO SOMETHING                           *
     223                    *          NO......RETURN ZERO                                           *
     224                    *                                                                        *
     225                    *          IF A0 HAS A POINTER THEN....                                  *
     226                    *                                                                        *
     227                    *          IF A1 = 0 THEN A0 IS AN L_MESS STRING THAT SHOULD             *
     228                    *          JUST BE SENT OUT.                                             *
     229                    *                                                                        *
     230                    *          IF A1 .NE. 0 THEN A0 IS A POINTER LIST OF UP TO 2 MESSAGES.   *
     231                    *          THAT GIVE PRICING INFO                                        *
     232                    *                                                                        *
     233                    *        A1 = 0 PLOT THE A0 STRING OUTRIGHT USING L_MESS                 *
     234                    *               (IT CONTAINS ALL DATA)                                   *
     235                    *                                                                        *
     236                    *        A1 = 1  PLOT ONLY THE STRING LIST (1 OR 2 POINTERS              *
     237                    *                CENTERED APPROPRIATELY                                  *
     238                    *                                                                        *
     239                    *        A1 = 2  PLOT THE 1ST LINE OF THE STRING LIST ALONG              *
     240                    *                WITH THE 2 CREDITS TO START...1 TO CONTINUE             *
     241                    *                                                                        *
     242                    *        A1 = 3  PLOT THE 2ND LINE OF THE STRING LIST ALONG              *
     243                    *                WITH THE 2 CREDITS TO START...1 TO CONTINUE             *
     244                    *                                                                        *
     245                    *        A1 = 4  PLOT THE 3RD LINE OF THE STRING LIST ALONG              *
     246                    *                WITH THE 2 CREDITS TO START...1 TO CONTINUE             *
     247                    *                                                                        *
     248                    *        A1 = 5  PLOT THE 1ST LINE OF THE STRING LIST ALONG              *
     249                    *                ALONG WITH 2 COINS PER PLAYER                           *
     250                    *                                                                        *
     251                    *        A1 = 6  PLOT THE 2ND LINE OF THE STRING LIST ALONG              *
     252                    *                ALONG WITH 2 COINS PER PLAYER                           *
     253                    *                                                                        *
     254                    *        A1 = 7  PLOT THE 3RD LINE OF THE STRING LIST ALONG              *
     255                    *                ALONG WITH 2 COINS PER PLAYER                           *
     256                    *                                                                        *
     257                    *        A1 = 8  CUSTOM MESSAGE                                          *
     258                    *                                                                        *
     259                    **************************************************************************
     260                                                                                           
     261 00000210     098f  CKPROMPT MMTM    SP,A6
         00000220     0200  
     262                    
     263 00000230     0d3f           CALLR   CUSTOMP
         00000240     0054  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE    6

     264 00000250     cb07           JRNE    NOT_CUS                   ;THERE IS ONE!....
     265                    *
     266                    *        WE WANT THE CUSTOM MESSAGE...UNLESS...
     267                    *
     268 00000260     0d5f           CALLA   CK_MAX                ;ARE WE AT MAX CREDITS?
         00000270 00000000! 
     269 00000290     c94b           JRHS    RET_MAX
     270                    
     271 000002a0     1900           MOVK    8,A0
     272 000002b0     4c01           MOVE    A0,A1
     273 000002c0     c036           JRUC    CK_BYE                ;RETURN CUSTOM MESSAGE
     274                    
     275 000002d0     09c0  NOT_CUS  MOVI    ADJFREPL,A0           ;FREE PLAY NEEDS NO PROMPT
         000002e0     0014  
     276 000002f0     0d5f           CALLA   GET_ADJ
         00000300 00000000! 
     277 00000320     ca02           JRZ     CKP1                 ;NOT FREE PLAY
     278                    
     279 00000330     5600  RET_NO   CLR     A0                   ;IT IS FREE PLAY.
     280 00000340     c02d           JRUC    CKEXIT               ;RETURN NO TOP PROMPT
     281                    
     282 00000350     0d5f  CKP1     CALLA   CK_MAX                ;ARE WE AT MAX CREDITS?
         00000360 00000000! 
     283 00000380     c93c           JRHS    RET_MAX
     284                    *
     285                    *        ARE WE ADJUSTED TO NOT BE SPECIFIC?
     286                    *
     287 00000390     09c0           MOVI    ADJNOCPAG,A0
         000003a0     0018  
     288 000003b0     0d5f           CALLA   GET_ADJ              ;CHECK THE ADJUSTMENT
         000003c0 00000000! 
     289 000003e0     cb28           JRNZ    CKSPCASE             ;WE'RE SET TO SHUT UP...JUST START/CONT
     290                    
     291 000003f0     09c0           MOVI    ADJ1ST6,A0           ;HAS OPERATOR MESSED AROUND?
         00000400     0017  
     292 00000410     0d5f           CALLA   GET_ADJ
         00000420 00000000! 
     293 00000440     ca22           JRZ     CKSPCASE             ;YEP...GO FOR GENERIC "2 TO START"
     294                    *
     295                    *        OPERATOR IS USING CANNED COINAGE....WE NEED TO USE THE
     296                    *        CHECK IF ITS 2/1 OR 2/2
     297                    *
     298 00000450     0d3f           CALLR   CK_2_CRED            ;IS IT A 2 CREDIT MODE?
         00000460     0046  
     299 00000470     ca0d           JRZ     NOT_2_MODE           ;NOPE...PRINT STOCK STUFF
     300                    
     301 00000480     4c01           MOVE    A0,A1                ;COPY 2/1   2/2 CODE
     302 00000490     0d5f           CALLA   GET_CSPT             ;POINT A6 AT CSEL FOR US NOW.
         000004a0 00000000' 
     303 000004c0     b4c0           MOVE    *A6(CS_PICK),A0,W    ;GET INDICATION OF WHICH LINE
         000004d0     0150  
     304 000004e0     ca18           JRZ     CKSPCASE             ;IT SAYS JUST ENUMERATE THE MODE!
     305                    *
     306                    *        NOW....IF ITS 2/1, A0 HAS THE CORRECT RETURN CODE
     307                    *        IF ITS 2/2 WE NEED TO ADD 2
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE    7

     308                    *
     309 000004f0     0b41           CMPI    1,A1                 ;IS IT 2/1?
         00000500     fffe  
     310 00000510     ca0c           JRZ     RET_A0_VAL           ;A0 IS SET   (ITS 2/1)
     311                    
     312 00000520     0b00           ADDI    3,A0
         00000530     0003  
     313 00000540     c009           JRUC    RET_A0_VAL           ;RETURN THIS!
     314                    
     315 00000550           NOT_2_MODE
     316 00000550     0d5f           CALLA   GET_CSPT             ;POINT A6 AT CSEL FOR US NOW.
         00000560 00000000' 
     317 00000580     b6c0           MOVE    *A6(CS_PROMPT),A0,L  ;FETCH POINTER TO MESSAGE (IF ANY)
         00000590     00f0  
     318 000005a0     ca0c           JRZ     CKSPCASE
     319                    *
     320                    *        WE HAVE SOMETHING STORED AT THE PROMPT.
     321                    *
     322 000005b0     0b40           CMPI    CSM_LAST,A0          ;IS IT LITTLE?
         000005c0     fffb  
     323 000005d0     c304           JRHI    CKEXIT               ;NOPE....ITS A POINTER....RETURN L_MESS STATUE
     324                    
     325 000005e0           RET_A0_VAL
     326 000005e0     4c01           MOVE    A0,A1                ;ITS LITTLE...RETURN IT AS A CODE
     327 000005f0     b6c0           MOVE    *A6(CS_LIST),A0,L    ;PASS BACK MESSAGE LIST FOR THIS MODE
         00000600     0130  
     328 00000610     c001           JRUC    CK_BYE
     329                    
     330 00000620     5621  CKEXIT  CLR     A1                   ;NO FANCIES YET
     331 00000630     4c00  CK_BYE   MOVE    A0,A0                ;FLAG PARM
     332 00000640     09af           MMFM    SP,A6
         00000650     0040  
     333 00000660     0960          RETS
     334                    *
     335                    *        CONTROL COMES HERE IF IT LOOKS LIKE NO MESSAGE IS
     336                    *        APPROPRIATE....CHECK FOR 2 TO START 1 TO CONTINUE
     337                    *        GENERIC NEEDED.
     338                    *
     339 00000670     0d3f  CKSPCASE CALLR   CK_2_CRED            ;CHECK IF THERE ARE 2 CREDIT MODES.
         00000680     0024  
     340 00000690     cac9           JRZ     RET_NO               ;NOT A 2 CREDIT MODE.
     341                    
     342 000006a0     0b40           CMPI    1,A0
         000006b0     fffe  
     343 000006c0     ca04           JRZ     TWO_ONE         ;YEP...RETURN 2/1
     344                    *
     345                    *        MUST BE 2/2
     346                    *
     347 000006d0     09e0           MOVI    TWO_CRED_PER_PLAYER,A0
         000006e0 00007a50" 
     348 00000700     c0f1           JRUC    CKEXIT          ;RETURN IT!
     349                    
     350 00000710     09e0  TWO_ONE  MOVI    TWO_TO_START,A0
         00000720 000073e0" 
     351 00000740     c0ed           JRUC    CKEXIT
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE    8

     352                    
     353 00000750     09e0  RET_MAX  MOVI    MAX_C_M,A0
         00000760 00007ba0" 
     354 00000780     c0e9           JRUC    CKEXIT
     355                    
     356                    **************************************************************************
     357                    *                                                                        *
     358                    *          CUSTOMP                                                       *
     359                    *                                                                        *
     360                    *          IS THERE A VALID CUSTOM MESSAGE?                              *
     361                    *          .EQ.  YES                                                     *
     362                    *          .NE.  NO                                                      *
     363                    *                                                                        *
     364                    **************************************************************************
     365 00000790     098f  CUSTOMP  MMTM    SP,A0,A7
         000007a0     8100  
     366 000007b0     0d5f           CALLA   ADJ_PAGE
         000007c0 00000000! 
     367 000007e0     09e7           MOVI    VALID_CUSTOM,A7
         000007f0 01404bb0  
     368 00000810     0d5f           CALLA   RC_WORD
         00000820 00000000! 
     369 00000840     0d5f           CALLA   DEF_PAGE                  ;POINT PAGE AWAY
         00000850 00000000! 
     370 00000870     0b60           CMPI    VALID_VALUE,A0
         00000880 ffff1543  
     371 000008a0     09af          MMFM    SP,A0,A7
         000008b0     0081  
     372 000008c0     0960          RETS
     373                    
     374                    **************************************************************************
     375                    *                                                                        *
     376                    *          CK_2_CRED                                                     *
     377                    *                                                                        *
     378                    *          THIS IS CALLED TO SEE IF WE'RE IN A 2-CREDIT TO               *
     379                    *          START MODE.                                                   *
     380                    *                                                                        *
     381                    *          A0 = 0     NOT 2/1 OR 2/2 CREDIT MODE                         *
     382                    *          A0 = 1     2 TO START 1 TO CONTINUE                           *
     383                    *          A0 = 2     2 TO START 2 TO CONTINUE                           *
     384                    *                                                                        *
     385                    *          .EQ.            NOT 2/1 OR 2/2 CREDIT MODE                    *
     386                    *          .NE.            IS 2/1 OR 2/2 CREDIT MODE.                    *
     387                    *                                                                        *
     388                    **************************************************************************
     389 000008d0           CK_2_CRED
     390 000008d0     09c0           MOVI    ADJCSTRT,A0
         000008e0     000a  
     391 000008f0     0d5f           CALLA   GET_ADJ         ;HOW MANY TO START
         00000900 00000000! 
     392 00000920     0b40           CMPI    2,A0
         00000930     fffd  
     393 00000940     cb0a           JRNZ    NOT_2           ;NOT 2....RETURN NO MESSAGE.
     394                    
     395 00000950     09c0           MOVI    ADJCCONT,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE    9

         00000960     000b  
     396 00000970     0d5f           CALLA   GET_ADJ         ;GET CONTINUE NUMBER
         00000980 00000000! 
     397 000009a0     0b40           CMPI    2,A0            ;1 OR 2 THIS IS WHAT WE RETURN
         000009b0     fffd  
     398 000009c0     c302           JRHI    NOT_2           ;NOT .....CLEAR IT OUT
     399 000009d0     4c00           MOVE    A0,A0           ;RETURN .NE. (UNLESS ITS 2/0)
     400 000009e0     c001           JRUC    IS_2
     401                    
     402 000009f0     5600  NOT_2    CLR     A0              ;RETURN WRONG MODE
     403 00000a00     0960  IS_2    RETS
     404                    
     405                    **************************************************************************
     406                    *                                                                        *
     407                    *          MENU HANDLING SOFTWARE                                        *
     408                    *                                                                        *
     409                    **************************************************************************
     410                    
     411                    **************************************************************************
     412                    *                                                                        *
     413                    *          FORCE_MAIN                                                    *
     414                    *                                                                        *
     415                    *          THIS IS CALLED TO GET TO MAIN MENU FROM LEVEL FURTHER         *
     416                    *          THAN 1 DOWN.  IT SETS THE GLOBAL FLAG "MAIN_RET"              *
     417                    *          NON ZERO.  GEN_MENU WILL KEEP RETURNING UNTIL                 *
     418                    *          IT GETS BACK TO THE MAIN MENU.                                *
     419                    *                                                                        *
     420                    **************************************************************************
     421 00000a10           FORCE_MAIN
     422 00000a10     1820           MOVK    1,A0                 ;POSITIVE NUMBER FORCES MAIN MENU.
     423 00000a20     0580           MOVE    A0,@MAIN_RET,W
         00000a30 00000000! 
     424 00000a50                    RETP                         ;NOW "RETURN TO THE MENU"
     425                    
     426                    **************************************************************************
     427                    *                                                                        *
     428                    *         DIAGNOSTIC TESTS SELECTED......SHOW DIAGNOSTIC TEST MENU       *
     429                    *                                                                        *
     430                    **************************************************************************
     431 00000a80     09e8  GO_DIAG  MOVI    MEN_DIAG,A8          ;PUT UP THE MENU AND GO!
         00000a90 0000e050" 
     432 00000ab0     c080           JAUC    GEN_MENU             ;THIS WILL RETURN TO LEVEL ABOVE US!
         00000ac0 00000000! 
     433                    
     434 00000ae0     05a0  CASHBUT  MOVE   @GAMSTATE,A0,W
         00000af0 00000000! 
     435 00000b10     0b40          CMPI    INDIAG,A0
         00000b20     ffbf  
     436 00000b30     cb03          JRNZ    CB_JUMP
     437 00000b40     c080          JAUC    SUCIDE               ;EXIT DIAGNOTICS
         00000b50 00000000! 
     438                    
     439 00000b70     0d5f  CB_JUMP  CALLA   DIGSRT               ;GET US INTO TEST MODE!
         00000b80 00000000! 
     440 00000ba0                    JSRP    GO_BOOK              ;DO THE "COIN BOOKKEEPING STUFF"
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   10

     441 00000c10     c080           JAUC    DIAG_EX
         00000c20 00000000! 
     442                    
     443                    **************************************************************************
     444                    *                                                                        *
     445                    *         COIN BOOKKEEPING SELECTED                                      *
     446                    *                                                                        *
     447                    **************************************************************************
     448 00000c40     0d5f  GO_BOOK  CALLA   CLR_SCRN
         00000c50 00000000! 
     449 00000c70     09e2           MOVI    MES_BOOK,A2
         00000c80 00004f00" 
     450 00000ca0     09e3           MOVI    NARCS_WHITE,A3
         00000cb0 0000fefe  
     451 00000cd0                    JSRP    TOP_BOX              ;PRINT TITLE BOX.
     452                    
     453 00000d40     09e0           MOVI    COIN_AUDS,A0         ;PUT TABLE UP.
         00000d50 000068b0' 
     454 00000d70                    JSRP    PRNT_AUD
     455                    
     456                    *         MOVI    AUDLCOIN,A8          ;1ST OF 3 TO USE FOR MAIN ONE.
     457                    *         JSRP    PRINT_COL            ;PRINT COLLECTION
     458                    
     459 00000de0     09e0           MOVI    COIN_A2,A0           ;PUT PART 2 OF THE TABLE THERE.
         00000df0 00006a50' 
     460 00000e10                    JSRP    PRNT_AUD
     461                    
     462 00000e80     09e8           MOVI    MEN_DETAIL,A8
         00000e90 0000ecb0" 
     463 00000eb0     09c9           MOVI    1,A9                 ;CURSOR ON 1ST ENTRY
         00000ec0     0001  
     464 00000ed0                    JSRP    B_MENU               ;SEE IF THEY WANT PAGE 2.
     465                    
     466 00000f40     0b48           CMPI    1,A8                 ;DID WE GET 1'ST ENTRY?
         00000f50     fffe  
     467 00000f60     cb74           JRNZ    NO_DETAIL            ;NOPE...RETURN TO OUR CALLER
     468                    
     469 00000f70           DETAIL_SCREEN
     470 00000f70     0d5f           CALLA   CLR_SCRN             ;CLEAR OUT FOR ACTION!
         00000f80 00000000! 
     471                    
     472 00000fa0     09e0           MOVI    DT_Y1,A0             ;HEIGHT OF TOP TITLE
         00000fb0 00000014  
     473 00000fd0     09e9           MOVI    NARCS_YELLOW,A9      ;COLOR
         00000fe0 0000fbfb  
     474 00001000     0d5f           CALLA   F_TITLE              ;FRAME IT
         00001010 00000000! 
     475                    
     476 00001030     09e0           MOVI    DT_Y2,A0             ;HEIGHT OF 2ND TITLE
         00001040 000000be  
     477 00001060     0d5f           CALLA   F_TITLE              ;FRAME IT
         00001070 00000000! 
     478                    
     479 00001090     09e8           MOVI    DETAIL_TITLES,A8     ;NO ROOM FOR PRETTY TOP BOX...DO TITLES
         000010a0 000060f0" 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   11

     480 000010c0                    JSRP    L_MESS               ;ESTABLISH THE TITLES.
     481                    
     482 00001130     09e0           MOVI    COIN_D1,A0           ;DETAILED AUDIT 1
         00001140 00006bf0' 
     483 00001160                    JSRP    PRNT_AUD             ;PRINT IT
     484                    
     485 000011d0     09c8           MOVI    AUDLCOIN,A8          ;NOW PRINT MONEY FOR 1ST 3
         000011e0     0001  
     486 000011f0                    JSRP    PRINT_COL          
     487                    
     488 00001260     09c8           MOVI    AUDLCSUB,A8          ;SUB-TOTAL OF TOTAL MONEY
         00001270     0007  
     489 00001280                    JSRP    PRINT_SUBTOTAL       ;PRINT IT.
     490                    
     491 000012f0     09e0           MOVI    COIN_D2,A0           ;DETAILED AUDIT 2
         00001300 00006d40' 
     492 00001320                    JSRP    PRNT_AUD
     493                    
     494 00001390     09c8           MOVI    AUDLCDC,A8           ;NOW PRINT MONEY FOR DOOR CLOSED SET
         000013a0     0004  
     495 000013b0                    JSRP    PRINT_COL
     496                    
     497 00001420     09c8           MOVI    AUDLCDCS,A8          ;NOW PRINT SUB-TOTAL FOR DOOR CLOSED
         00001430     000a  
     498 00001440                    JSRP    PRINT_SUBTOTAL       ;THATS IT!
     499                    
     500 000014b0     09e8           MOVI    MEN_CLR_SUB,A8       ;CLEAR SUBTOTAL OR RETURN TO MAIN MENU
         000014c0 0000ee90" 
     501 000014e0     09c9           MOVI    2,A9                 ;CURSOR ON 2ND ENTRY
         000014f0     0002  
     502 00001500                    JSRP    B_MENU               
     503                    
     504 00001570     0b48           CMPI    1,A8                 ;CHOICE 1 IS CLEAR.....
         00001580     fffe  
     505 00001590     cb11           JRNZ    NO_CLEAR_SUB         ;NOPE...RETURN TO CALLER!
     506                    
     507 000015a0     09e8           MOVI    MESS_CLEAR_SUBS,A8   ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         000015b0 0000fea0" 
     508 000015d0     09e9           MOVI    CLR_SUBS,A9          ;ROUTINE TO DO IT
         000015e0 00000000! 
     509 00001600     09ea           MOVI    MESS_SUBS_CLEAR,A10  ;CONFIRMATION.
         00001610 0000ff20" 
     510 00001630                    JSRP    AREUSURE             ;ASK EM.
     511 000016a0     c08c           JRUC    DETAIL_SCREEN        ;NOW PUT THIS SCREEN BACK UP.
     512                    
     513 000016b0           NO_CLEAR_SUB
     514 000016b0           NO_DETAIL
     515 000016b0                    RETP                         ;AND RETURN TO OUR CALLER.
     516                    
     517 000016e0           PRINT_SUBTOTAL
     518 000016e0     0d3f           CALLR   ADD_AUDIT_DY         ;PUSH THE Y 1 LEVEL
         000016f0     0674  
     519 00001700     09e9           MOVI    T_SUB,A9             ;USE "SUB-TOTAL" MESSAGE
         00001710 00006000" 
     520 00001730     c080           JAUC    PRINT_MONEY          ;AND NOW PRINT THE REQUESTED SUM.
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   12

         00001740 00008c70' 
     521                    
     522                    **************************************************************************
     523                    *                                                                        *
     524                    *          GAME AUDITS SELECTED                                          *
     525                    *                                                                        *
     526                    **************************************************************************
     527                    
     528                    **************************************************************************
     529                    *                                                                        *
     530                    *          AUDITS TO BE SHOWN ON GAME AUDITS PAGE:                       *
     531                    *                                                                        *
     532                    *          EXTRA MEN                                                     *
     533                    *          GAMES COMPLETED                                               *
     534                    *          1 PLAYER MINUTES                                              *
     535                    *          2 PLAYER MINUTES                                              *
     536                    *          TOTAL HOURS PLAYED                                            *
     537                    *          AVG "PLAYER" GAME TIME                                        *
     538                    *          AVG. ELAPSED TIME / PLAY                                      *
     539                    *                                                                        *
     540                    **************************************************************************
     541                    
     542 00001760     0d5f  GO_AUD   CALLA   CLR_SCRN
         00001770 00000000! 
     543 00001790     09e2           MOVI    MES_AUD,A2
         000017a0 00004ea0" 
     544 000017c0     09c3           MOVI    NARCS_CYAN,A3
         000017d0     2c2c  
     545 000017e0                    JSRP    TOP_BOX              ;PRINT TITLE BOX.
     546                    
     547 00001850     09e0           MOVI    GAME_AUDS,A0         ;PUT TABLE UP.
         00001860 00006e90' 
     548 00001880                    JSRP    PRNT_AUD
     549                    
     550 000018f0     09e8           MOVI    MEN_AP1,A8           ;AUDIT PAGE 1 MENU
         00001900 0000f250" 
     551 00001920     09c9           MOVI    1,A9                 ;CURSOR ON 1ST ENTRY
         00001930     0001  
     552 00001940                    JSRP    B_MENU               ;SEE IF THEY WANT PAGE 2.
     553                    
     554 000019b0     0b48           CMPI    1,A8                 ;DID WE GET 1'ST ENTRY?
         000019c0     fffe  
     555 000019d0     cb28           JRNZ    NO_AP2               ;NOPE...RETURN TO OUR CALLER
     556                            
     557 000019e0     0d5f           CALLA   CLR_SCRN
         000019f0 00000000! 
     558 00001a10     09e2           MOVI    MES_AUD,A2
         00001a20 00004ea0" 
     559 00001a40     09c3           MOVI    NARCS_CYAN,A3
         00001a50     2c2c  
     560 00001a60                    JSRP    TOP_BOX              ;PRINT TITLE BOX.
     561                    
     562 00001ad0     09e0           MOVI    GAME_AUD2,A0         ;PUT TABLE UP.
         00001ae0 00007120' 
     563 00001b00                    JSRP    PRNT_AUD
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   13

     564                    
     565 00001b70     09e8           MOVI    MEN_AP2,A8
         00001b80 0000f430" 
     566 00001ba0     09c9           MOVI    2,A9                 ;CURSOR ON 2ND ENTRY
         00001bb0     0002  
     567 00001bc0                    JSRP    B_MENU               ;SEE IF THEY WANT PAGE 2.
     568                    
     569 00001c30     0b48           CMPI    1,A8                 ;DID WE GET 1'ST ENTRY (RETURN TO PAGE 1)
         00001c40     fffe  
     570 00001c50     cab0           JRZ     GO_AUD               ;YEP...PUT IT UP!
     571                    
     572 00001c60           NO_AP2   RETP
     573                    
     574 00001c90     09e8  GO_UTIL  MOVI    MEN_UTIL,A8
         00001ca0 0000dc30" 
     575 00001cc0     c080           JAUC    GEN_MENU             ;PROCESS THE UTILITY MENU!
         00001cd0 00000000! 
     576                    *
     577                    *        INDIVIDUAL UTILITY PROGRAMS
     578                    *
     579                    
     580 00001cf0           DO_CLCRED
     581 00001cf0     09e8           MOVI    MESS_CLCRED,A8       ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00001d00 00010950" 
     582 00001d20     09e9           MOVI    CLR_CREDITS,A9       ;ROUTINE TO DO IT
         00001d30 00001db0' 
     583 00001d50     09ea           MOVI    MESS_CCCONF,A10      ;CONFIRMATION.
         00001d60 000109c0" 
     584 00001d80     c080           JAUC    AREUSURE             ;ASK EM......THEN RETURN!
         00001d90 00000000! 
     585                    
     586                    **************************************************************************
     587                    *                                                                        *
     588                    *          CLR_CREDITS                                                   *
     589                    *                                                                        *
     590                    *          ROUTINE TO CLEAR OUT THE CREDITS POSTED ON THE GAME.          *
     591                    *                                                                        *
     592                    **************************************************************************
     593 00001db0           CLR_CREDITS
     594 00001db0     0d5f           CALLA   NO_CREDS             ;CALL THE ROUTINE THAT DOES IT
         00001dc0 00000000! 
     595 00001de0                    RETP
     596                    
     597 00001e10           DO_CLCOIN
     598 00001e10     09e8           MOVI    MESS_CLCOIN,A8       ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00001e20 00010a40" 
     599 00001e40     09e9           MOVI    CLR_COINS,A9       ;ROUTINE TO DO IT
         00001e50 00001ed0' 
     600 00001e70     09ea           MOVI    MESS_CCNCONF,A10      ;CONFIRMATION.
         00001e80 00011af0" 
     601 00001ea0     c080           JAUC    AREUSURE             ;ASK EM......THEN RETURN!
         00001eb0 00000000! 
     602                    
     603 00001ed0           CLR_COINS
     604 00001ed0     09c0           MOVI    FRST_C,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   14

         00001ee0     0001  
     605 00001ef0     09c1           MOVI    LAST_C,A1
         00001f00     000d  
     606 00001f10     0d5f           CALLA   CLR_AUDR
         00001f20 00000000! 
     607 00001f40                    RETP
     608                    
     609 00001f70           DO_CLAUD
     610 00001f70     09e8           MOVI    MESS_CLAUD,A8       ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00001f80 00010ae0" 
     611 00001fa0     09e9           MOVI    CLR_AUDITS,A9       ;ROUTINE TO DO IT
         00001fb0 00002030' 
     612 00001fd0     09ea           MOVI    MESS_CAUDCONF,A10      ;CONFIRMATION.
         00001fe0 00011c50" 
     613 00002000     c080           JAUC    AREUSURE             ;ASK EM......THEN RETURN!
         00002010 00000000! 
     614                    
     615 00002030           CLR_AUDITS
     616 00002030     09c0           MOVI    FRSTGAUD,A0
         00002040     000e  
     617 00002050     09c1           MOVI    LASTGAUD,A1
         00002060     0029  
     618 00002070     0d5f           CALLA   CLR_AUDR
         00002080 00000000! 
     619 000020a0     0d5f           CALLA   DUMP_FS              ;AND START THE "DUMP" RECORDS OVER
         000020b0 00000000! 
     620 000020d0                    RETP
     621                    
     622 00002100           DO_HSRES
     623 00002100     09e8           MOVI    MESS_HSRESET,A8
         00002110 00010b70" 
     624 00002130     09e9           MOVI    HSSOFT,A9
         00002140 000021c0' 
     625 00002160     09ea           MOVI    MESS_HSRCONF,A10
         00002170 00011da0" 
     626 00002190     c080           JAUC    AREUSURE
         000021a0 00000000! 
     627                    
     628 000021c0     0d3f  HSSOFT   CALLR   RES_ALL
         000021d0     0003  
     629 000021e0                    RETP                         ;PROGRAM TO DO THE JOB!
     630                    
     631                    **************************************************************************
     632                    *                                                                        *
     633                    *          RES_ALL                                                       *
     634                    *                                                                        *
     635                    *          RESET ALL TIME HIGH SCORE TABLE AND THE                       *
     636                    *          HIGH SCORE RESET COUNTER.                                     *
     637                    *                                                                        *
     638                    **************************************************************************
     639 00002210     09e8  RES_ALL  MOVI    ALL_TAB,A8           ;ALWAYS CLEAR OUT TODAYS TABLE
         00002220 00000000! 
     640 00002240     0d5f           CALLA   INIT_TB
         00002250 00000000! 
     641 00002270     0d5f           CALLA   INIT_HSR             ;RE-SET THE HIGH SCORE RESET COUNTER
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   15

         00002280 00000000! 
     642 000022a0     0960           RETS
     643                    
     644 000022b0           DO_FACSET
     645 000022b0     09e8           MOVI    MESS_FACSET,A8
         000022c0 00011000" 
     646 000022e0     1820           MOVK    1,A0
     647 000022f0     c004           JRUC    DEF_ADJ_PART
     648                    
     649                    **************************************************************************
     650                    *                                                                        *
     651                    *          DO_DEF_ADJ      THIS IS CALLED FROM UTILITY MENU TO           *
     652                    *                          DO THE DEFAULT ADJUSTMENTS.                   *
     653                    *                                                                        *
     654                    *          DEF_ADJ_PART    THIS IS CALLED OUT OF THE FULL                *
     655                    *                          FACTORY SETTING TO HANDLE THE                 *
     656                    *                          ADJUSTMENT PART.                              *
     657                    *                                                                        *
     658                    *                          A8 MUST HAVE THE MESSAGE FOR "ARE YOU SURE"   *
     659                    *                          A0 .NE. 0 FOR FULL FACTORY SETTINGS (ON       *
     660                    *                                    SUCCESS OF ADJUSTMENT PART          *
     661                    *                                                                        *
     662                    **************************************************************************
     663 00002300           DO_DEF_ADJ
     664 00002300     09e8           MOVI    MESS_DEF_ADJ,A8
         00002310 00010ed0" 
     665 00002330     5600           CLR     A0
     666                    
     667 00002340           DEF_ADJ_PART
     668 00002340     0580           MOVE    A0,@FAC_FLAG,W       ;INDICATE THIS IS ADJUSTMENTS ONLY
         00002350 00000000- 
     669                    
     670 00002370     a30c           MOVE    A8,-*A12,L           ;PUSH THE MESSAGE
     671 00002380                    JSRP    HF_DOOR              ;GET DOOR OPEN OR ANANDONMENT
     672 000023f0     9788           MOVE    *A12+,A8,L           ;RESTORE MESSAGE
     673                    
     674 00002400     4c00           MOVE    A0,A0
     675 00002410     cb10           JRNZ    DO_CANCEL            ;HE SAID FORGET IT.  (A0 .NE. 0)
     676                    
     677 00002420     09e9           MOVI    DEFADJSOFT,A9
         00002430 00002560' 
     678 00002450     09ea           MOVI    NULL_ST,A10          ;DON'T PRINT ANYTHING....ROUTINE WILL.
         00002460 000067b0" 
     679 00002480                    JSRP    AREUSURE
     680 000024f0                    RETP
     681                    *
     682                    *        RETURN A0=0 FOR FAILURE
     683                    *
     684 00002520           DO_CANCEL
     685 00002520     5600           CLR     A0
     686 00002530                    RETP
     687                    
     688 00002560           DEFADJSOFT
     689 00002560                    JSRP    HF_DOOR                ;CAN'T DO IT UNLESS DOOR IS OPEN.
     690 000025d0     4c00           MOVE    A0,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   16

     691 000025e0     cb4d           JRNZ    DEF_CAN                ;CANCELLED
     692                    *
     693                    *        NOW SMASH THE CHECKSUM
     694                    *
     695 000025f0     0d5f           CALLA   FORM_ADC               ;FORM THE CKSUM
         00002600 00000000! 
     696 00002620     4c20           MOVE    A1,A0                  ;PUT IN CMOS WRITING REGGIE
     697 00002630     09e7           MOVI    ADJ_CKSUM,A7
         00002640 01404bd0  
     698 00002660     1020           INC     A0                     ;THIS SMASHES ADJUSTMENTS
     699 00002670     0d5f           CALLA   WC_WORD                ;AND STORE IT
         00002680 00000000! 
     700                    *
     701                    *        NOW MAKE SURE ITS SMASHED
     702                    *
     703 000026a0     0d5f           CALLA   CMOS_VAL
         000026b0 00000000! 
     704 000026d0     ca3a           JRZ     AD_FAIL                ;WE CAN'T DO IT.....PRINT FAILURE.
     705                    *
     706                    *        NOW SET THE ADJUSTMENTS TO THE FACTORY VALUE.
     707                    *
     708 000026e0     0d5f           CALLA   FAC_SET             ;THIS DOES THE DEED!
         000026f0 00000000! 
     709 00002710     0d5f           CALLA   CMOS_VAL            ;IS IT OK NOW?
         00002720 00000000! 
     710 00002740     cb33           JRNZ    AD_FAIL             ;NOPE...PRINT FAILURE
     711                    
     712 00002750     09e8           MOVI    MESS_DEFCONF,A8     ;THIS IS SINGLE MESSAGE
         00002760 00011950" 
     713                    
     714 00002780     05a0           MOVE    @FAC_FLAG,A0,W      ;DO WE NEED TO CLEAR THE TABLES?
         00002790 00000000- 
     715 000027b0     ca33           JRZ     DAX                 ;NOPE...POST SINGLE MESSAGE
     716                    
     717 000027c0     0d5f           CALLA   CLR_SCRN        ;CLEAR THE SCREEN FOR OUR MESSAGES.
         000027d0 00000000! 
     718 000027f0     0d3f           CALLR   FAC_STUF        ;DO AUDITS AND HIGH SCORE TABLE
         00002800     000d  
     719                    
     720 00002810     09e8           MOVI    MESS_FFSCONF,A8 ;PRINT THE REST OF THE MESSAGES
         00002820 000118b0" 
     721 00002840                    JSRP    L_MESS          ;THAT DOES IT!
     722                    
     723 000028b0           NOTABS   RETP
     724                    
     725                    *
     726                    *        ON A FULL FACTORY SETTING (EITHER REQUESTED OR
     727                    *        ADJUSTMENT FAILURE) THIS CLEARS THE AUDITS AND
     728                    *        HIGH SCORE TABLE.
     729                    *
     730 000028e0     0d5f  FAC_STUF CALLA   CLR_AUD         ;CLEAR AUDITS TOO
         000028f0 00000000! 
     731 00002910     0d3f           CALLR   RES_ALL         ;ALL TIME TABLE
         00002920     ff8e  
     732 00002930     0d3f           CALLR   INVALID_CUSTOM
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   17

         00002940     0001  
     733 00002950     0960           RETS
     734                    
     735                    **************************************************************************
     736                    *                                                                        *
     737                    *          INVALID_CUSTOM                                                *
     738                    *                                                                        *
     739                    *          THIS SETS CUSTOM MESSAGE VARIFIER BYTE TO "INVALID".          *
     740                    *          THE FACTORY MESSAGE WILL BE USED UNTIL A VALID MESSAGE        *
     741                    *          IS ENTERED.                                                   *
     742                    *                                                                        *
     743                    *          **** NOTE ***                                                 *
     744                    *                                                                        *
     745                    *          THIS SHOULD ONLY BE CALLED BY A ROUTINE THAT HAS              *
     746                    *          JUST CHECKED THAT CMOS IS VALID.  RUNNING THIS                *
     747                    *          WILL TURN INVALID ADJUSTMENT CHECKSUM TO CORRECT              *
     748                    *          ADJUSTMENT CHECKSUM!                                          *
     749                    *                                                                        *
     750                    **************************************************************************
     751 00002960           INVALID_CUSTOM
     752 00002960     098f           MMTM    SP,A0,A7
         00002970     8100  
     753 00002980     0d5f           CALLA   ADJ_PAGE             ;POINT AT ADJUSTMENT PAGE
         00002990 00000000! 
     754 000029b0     5600           CLR     A0
     755 000029c0     09e7           MOVI    VALID_CUSTOM,A7
         000029d0 01404bb0  
     756 000029f0     0d5f           CALLA   WC_WORD
         00002a00 00000000! 
     757 00002a20     0d5f           CALLA   F_ADC_S              ;FIXUP CHECKSUM FOR OUR DEED!
         00002a30 00000000! 
     758                    
     759 00002a50     09af          MMFM    SP,A0,A7
         00002a60     0081  
     760 00002a70     0960          RETS
     761                    
     762 00002a80     09e8  AD_FAIL  MOVI    MESS_FACFAIL,A8
         00002a90 00011e70" 
     763 00002ab0     c003           JRUC    DAX
     764                    
     765 00002ac0     09e8  DEF_CAN  MOVI    MESS_CANCELLED,A8
         00002ad0 00011f10" 
     766 00002af0     0d5f  DAX      CALLA   CLR_SCRN
         00002b00 00000000! 
     767 00002b20                    JSRP    SUR_MESS
     768 00002b90                    RETP
     769                    
     770                    **************************************************************************
     771                    *                                                                        *
     772                    *          HF_DOOR                                                       *
     773                    *                                                                        *
     774                    *          PRINT MESSAGE THAT DOOR MUST BE OPENED TO CONTINUE.           *
     775                    *          HOLD CONTROL TILL BUTTON IS PRESSED (CANCELLING)              *
     776                    *          OR DOOR IS OPEN.                                              *
     777                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   18

     778                    *          RETURN A0 = 0 MEANS DOOR GOT OPENED.                          *
     779                    *                 A0 .NE 0 FOR BUTTON PRESSED.                           *
     780                    *                                                                        *
     781                    **************************************************************************
     782 00002bc0           HF_DOOR
     783 00002bc0     0d5f           CALLA   CK_DOOR              ;IS THE DOOR OPEN?  NZ=OPEN
         00002bd0 00000000! 
     784 00002bf0     cb37           JRNZ    DORET                ;YEP.......RETURN A0=0
     785                    
     786 00002c00     0d5f           CALLA   CLR_SCRN             ;CLEAR THE SCREEN
         00002c10 00000000! 
     787 00002c30     0d5f           CALLA   SURE_BOX             ;PUT A NICE BOX AROUND IT.
         00002c40 00000000! 
     788 00002c60     09e8           MOVI    MESS_OPEN_OR_CANCEL,A8
         00002c70 000063d0" 
     789 00002c90                    JSRP    L_MESS               ;GIVE INSTRUCTIONS
     790 00002d00                    JSRP    ST_STICK             ;GET "STARTING STATE"
     791                    
     792 00002d70           WD1      SLEEP   1                    ;NAP A BIT
     793 00002db0     0d5f           CALLA   CK_DOOR
         00002dc0 00000000! 
     794 00002de0     cb18           JRNZ    DORET                ;ITS OPEN...RETURN OK
     795                    
     796 00002df0     09e5           MOVI    40010H,A5            ;TYPOMATIC PARMS
         00002e00 00040010  
     797 00002e20                    JSRP    GETSTICK             ;CHECK BUTTONS
     798 00002e90     0b40           CMPI    3,A0                 ;BUTTON?
         00002ea0     fffc  
     799 00002eb0     cbeb           JRNZ    WD1                  ;NOT YET
     800                    
     801 00002ec0                    SOUND1  BEEP_1               ;MAKE A BEEP.
     802 00002f20     09c0           MOVI    3,A0                 ;RETURN A0 .NE. 0
         00002f30     0003  
     803                    *
     804                    *        RETURN A0=3                  
     805                    *
     806 00002f40                    RETP
     807                    
     808                    *        RETURN A0=0  (CONTINUE)
     809                    *
     810 00002f70     5600  DORET    CLR     A0
     811 00002f80                    RETP
     812                    
     813 00002fb0     f3df  BEEP_1   .WORD  0F3DFH,010H,080A2H,0            ;LOW BEEP 
     814                    *         
     815                    
     816              0060  OP_LINES EQU     PDATA                ;WORD - LINES LEFT TO DO
     817              0070  OP_M_Y   EQU     OP_LINES+WORD_SIZE   ;WORD - Y OF CURRENT LINE
     818              0080  OP_CPTR  EQU     OP_M_Y+WORD_SIZE     ;LONG - CMOS WHERE CURRENT DATA GOES.
     819              00a0  OP_EINIT EQU     OP_CPTR+LONG_SIZE    ;LONG - POINTER TO E_INITS PROCESS
     820              00c0  OP_LETS  EQU     OP_EINIT+LONG_SIZE   ;30 BYTES - OUR COPY OF THE LETTERS
     821                    
     822 00002ff0           DO_OPMESS
     823 00002ff0     09e8           MOVI    M_SET_OMESS,A8       ;SET OPERATOR MESSAGE...ARE YOU SURE
         00003000 00010d20" 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   19

     824 00003020     09e9           MOVI    CHG_OPMESS,A9        ;GEORGE'S ENTRY POINT
         00003030 000030b0' 
     825 00003050     09ea           MOVI    NULL_ST,A10          ;THIS WILL NEVER BE SEEN!
         00003060 000067b0" 
     826 00003080     c080           JAUC    AREUSURE             ;ASK EM.
         00003090 00000000! 
     827                    
     828 000030b0           CHG_OPMESS
     829 000030b0                    JSRP    HF_DOOR              ;CAN'T DO IT UNLESS DOOR IS OPEN.
     830 00003120     4c00           MOVE    A0,A0
     831 00003130     cb98           JRNZ    DEF_CAN              ;CANCELLED
     832                    
     833 00003140     0d5f           CALLA   CMOS_VAL            ;CHECK OUT THE REGION
         00003150 00000000! 
     834 00003170     ca12           JRZ     SET_OK              ;ITS OK.....CONTINUE....
     835                    
     836 00003180                    JSRP    GET_FAC             ;BRING TO FACTORY SETTINGS OR QUIT.
     837 000031f0                    JSRP    ANY_BUT
     838                    
     839 00003260     0d5f           CALLA   CMOS_VAL             ;CAN'T GO IF WE'RE NOT OK NOW
         00003270 00000000! 
     840 00003290     cb82           JRNZ    DEF_CAN              ;ITS NOT VALID....NO ADJUSTING!
     841                    
     842 000032a0     0d5f  SET_OK   CALLA   SPR_GPAL             ;ALLOCATE A PALETTE FOR THE SPRAYER
         000032b0 00000000! 
     843                    
     844 000032d0     0d3f           CALLR   INVALID_CUSTOM       ;MAKE CUSTOM MESSAGE INVALID!
         000032e0     ff67  
     845                    
     846 000032f0     0d5f           CALLA   CLR_SCRN             ;CLEAR THE SCREEN!
         00003300 00000000! 
     847                    
     848 00003320     09e2           MOVI    M_OPMESS_TIT,A2
         00003330 00010c90" 
     849 00003350     09e3           MOVI    NARCS_YELLOW,A3
         00003360 0000fbfb  
     850 00003380                    JSRP    TOP_BOX              ;PRINT TITLE BOX.
     851                    *
     852                    *        ITS TIME FOR SOME INSTRUCTIONS....
     853                    *
     854                    *        HOW ABOUT:      USE PLAYER 1 CONTROLS TO ENTER A MESSAGE
     855                    *                        OF UP TO 3 LINES OF 25 CHARACTERS.
     856                    *
     857                    *                        PRESS "ADVANCE" TO CLEAR OUT MESSAGE.
     858                    *
     859                    *                        SELECT "CR" TO END EACH LINE.
     860                    
     861 000033f0     09e8           MOVI    CMES_INSTR,A8
         00003400 00012110" 
     862 00003420                    JSRP    L_MESS
     863                    
     864 00003490     09e4           MOVI    CIN_X-150+(10000H*CIN_Y),A4    ;UPPER LEFT
         000034a0 00560066  
     865 000034c0     09e5           MOVI    CIN_X+150+(10000H*(CIN_Y+102)),A5    ;UPPER LEFT
         000034d0 00bc0192  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   20

     866 000034f0     09e9           MOVI    NARCS_WHITE,A9
         00003500 0000fefe  
     867 00003520     0d5f           CALLA   STD_BORD       ;TACO BELL HAS YOUR ORDER, MAKE A RU-UUUN......
         00003530 00000000! 
     868                    
     869 00003550     09e0           MOVI    CUSTOM_MESSAGE,A0
         00003560 01404700  
     870 00003580     b20d           MOVE    A0,*A13(OP_CPTR),L      ;POINTER INTO CMOS
         00003590     0080  
     871                    
     872 000035a0     09c0           MOVI    CMESS_LINES,A0
         000035b0     0003  
     873 000035c0     b00d           MOVE    A0,*A13(OP_LINES),W  ;DO THIS MANY LINES
         000035d0     0060  
     874                    
     875 000035e0     09c0           MOVI    0D8H,A0
         000035f0     00d8  
     876 00003600     b00d           MOVE    A0,*A13(OP_M_Y),W           ;ECHO WHERE IT WILL BE DISPLAYED.
         00003610     0070  
     877                    
     878 00003620           GET_NEXT_LINE
     879 00003620     09e8           MOVI    OP_INITS,A8                    ;THIS IS DESC FOR OPERATOR MESS.
         00003630 00000000! 
     880 00003650     4da9           MOVE    A13,A9
     881 00003660     0b09           ADDI    OP_LETS,A9                     ;STUFF INITIALS IN PROCESS!
         00003670     00c0  
     882 00003680     09e7           MOVI    E_INITS,A7                     ;THIS IS THE PROCESS TO MAKE
         00003690 00000000! 
     883 000036b0     09c1           MOVI    OPMES_PID,A1                   ;OPERATOR MESSAGE PROCESS!
         000036c0     0ac3  
     884 000036d0     0d5f           CALLA   GETPRC                         ;MAKE THE PROCESS
         000036e0 00000000! 
     885                    *
     886                    *        A0 HAS ID OF E_INITS PROC
     887                    *
     888 00003700     b20d           MOVE    A0,*A13(OP_EINIT),L            ;STASH IN OUR AREA.
         00003710     00a0  
     889 00003720     09e7           MOVI    REFRESH_TEXT,A7                ;DO THE TEXT AS ITS SENT
         00003730 00003fb0' 
     890 00003750     4da8           MOVE    A13,A8                         ;PASS IT OUR POINTER
     891 00003760     0d5f           CALLA   GETPRC                         ;E_INITS WILL KILL IT WHEN DONE DUE TO ID
         00003770 00000000! 
     892                    *
     893 00003790     09c0           MOVI    CMESS_CHARS,A0                 ;CLEAR OUT THE STORAGE AREA
         000037a0     0019  
     894 000037b0     5621           CLR     A1
     895                    
     896 000037c0     8c29  CLLET    MOVB    A1,*A9
     897 000037d0     0b09           ADDI    BYTE_SIZE,A9
         000037e0     0008  
     898 000037f0     3c80           DSJS    A0,CLLET
     899                    *
     900                    *        NOW WAIT FOR IT TO COMPLETE!
     901                    *
     902 00003800           DO_OP1   SLEEP   2
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   21

     903 00003840     0d5f           CALLA   GET_ADV                        ;GET THE ADVANCE BUTTON
         00003850 00000000! 
     904 00003870     ca5a           JRZ     MESS_CANCEL
     905                    
     906 00003880     0d3f           CALLR   EXIST_LET
         00003890     0069  
     907 000038a0     cbf5           JRNZ    DO_OP1
     908                    *
     909                    *        WE NOW HAVE A LINE.....MOVE IT TO CMOS.
     910                    *
     911 000038b0     0d5f           CALLA   CK_DOOR                        ;MAKE SURE DOOR IS OPEN
         000038c0 00000000! 
     912 000038e0     ca53           JRZ     MESS_CANCEL                    ;ITS CLOSED...CANCEL
     913                    
     914 000038f0     0d5f           CALLA   ADJ_PAGE                       ;SET CMOS PAGE
         00003900 00000000! 
     915 00003920     b7a7           MOVE    *A13(OP_CPTR),A7,L             ;CMOS POINTER
         00003930     0080  
     916 00003940     4da6           MOVE    A13,A6
     917 00003950     0b06           ADDI    OP_LETS,A6                     ;A6 POINTS AT BYTES
         00003960     00c0  
     918 00003970     09c5           MOVI    CMESS_CHARS,A5                 ;CHARS PER LINE
         00003980     0019  
     919                    
     920 00003990           CMOS_LOOP
     921 00003990     8ec0           MOVB    *A6,A0                         ;FETCH A CHARACTER
     922 000039a0     0b80           ANDI    BYTE_MASK,A0
         000039b0 ffffff00  
     923 000039d0     0d5f           CALLA   WC_BYTEI                       ;WRITE A BYTE
         000039e0 00000000! 
     924                    
     925 00003a00     0b06           ADDI    BYTE_SIZE,A6                   ;POINT AT NEXT BYTE
         00003a10     0008  
     926 00003a20     3d45           DSJS    A5,CMOS_LOOP
     927                    
     928 00003a30     b2ed           MOVE    A7,*A13(OP_CPTR),L             ;PUT CMOS POINTER BACK.
         00003a40     0080  
     929                    
     930 00003a50     0d5f           CALLA   F_ADC_S                        ;REFRESH CHECKSUM
         00003a60 00000000! 
     931                    
     932 00003a80     4da8           MOVE    A13,A8                         ;POINT AT OUR PROCESS AREA
     933 00003a90                    JSRP    OUTPUT_LINE
     934                    
     935 00003b00     b5a0           MOVE    *A13(OP_M_Y),A0,W              ;GET Y
         00003b10     0070  
     936 00003b20     0b00           ADDI    CP_DELTA3,A0                   ;ADD AMOUNT TO GET TO NEXT
         00003b30     0018  
     937 00003b40     b00d           MOVE    A0,*A13(OP_M_Y),W              ;PUT BACK
         00003b50     0070  
     938                    
     939 00003b60     b5a0           MOVE    *A13(OP_LINES),A0,W
         00003b70     0060  
     940 00003b80     1420           DEC     A0
     941 00003b90     b00d           MOVE    A0,*A13(OP_LINES),W
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   22

         00003ba0     0060  
     942 00003bb0     cba6           JRNZ    GET_NEXT_LINE
     943                    
     944 00003bc0     0d5f           CALLA   ADJ_PAGE                       ;ITS VALID!....INDICATE SO!
         00003bd0 00000000! 
     945 00003bf0     09e7           MOVI    VALID_CUSTOM,A7
         00003c00 01404bb0  
     946 00003c20     09e0           MOVI    VALID_VALUE,A0
         00003c30 0000eabc  
     947 00003c50     0d5f           CALLA   WC_WORD
         00003c60 00000000! 
     948 00003c80     0d5f           CALLA   F_ADC_S                        ;REFRESH CHECKSUM
         00003c90 00000000! 
     949                    
     950 00003cb0                    SLEEP   10H                            ;SHORT DELAY TO LOOK AT MESS.
     951                    
     952 00003cf0     09e8           MOVI    MESS_SUCCESS,A8                ;THIS IS SUCCESS MESSAGE
         00003d00 00011f60" 
     953                    
     954 00003d20     0d5f  OPMRET   CALLA   CLR_SCRN                       ;CLEAR THE SCREEN
         00003d30 00000000! 
     955 00003d50                    JSRP    SUR_MESS                       ;PRINT THE MESSAGE
     956                    
     957 00003dc0     0d5f           CALLA   SPR_FPAL                       ;GIVE THE SPRAYER PALETTE BACK
         00003dd0 00000000! 
     958                    
     959 00003df0                    RETP                                   ;NOW RETURN TO CALLER!
     960                    *
     961                    *        ADVANCE PRESSED.......SET FLAG TO KILL LETTER ENTRY
     962                    *
     963 00003e20           MESS_CANCEL
     964 00003e20     b7a1           MOVE    *A13(OP_EINIT),A1,L            ;GET HIS PROCESS.
         00003e30     00a0  
     965 00003e40     09c0           MOVI    1,A0
         00003e50     0001  
     966 00003e60     b001           MOVE    A0,*A1(ENT_TIMEOUT),W          ;TELL HIM HE'S TIMED OUT!
         00003e70     0210  
     967 00003e80           MC_LOOP  SLEEP   1                              ;NOW WAIT TILL HE'S DEAD
     968 00003ec0     0d3f           CALLR   EXIST_LET
         00003ed0     0005  
     969 00003ee0     cbf9           JRNZ    MC_LOOP                        ;ITS STILL THERE
     970 00003ef0     09e8           MOVI    MESS_OPFAIL,A8                 ;TELL EM ITS DONE.
         00003f00 00012040" 
     971 00003f20     c0df           JRUC    OPMRET                         ;HE'S DONE.....RETURN!
     972                    
     973                    **************************************************************************
     974                    *                                                                        *
     975                    *          EXIST_LET                                                     *
     976                    *                                                                        *
     977                    *          IS THE E_INITS PROCESS RUNNING?                               *
     978                    *                                                                        *
     979                    **************************************************************************
     980 00003f30           EXIST_LET
     981 00003f30     09c0           MOVI    OPMES_PID,A0                   ;SETUP FOR THE EXISTP
         00003f40     0ac3  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   23

     982 00003f50     09e1           MOVI    0FFFFH,A1
         00003f60 0000ffff  
     983 00003f80     c080           JAUC   EXISTP
         00003f90 00000000! 
     984                    
     985                    **************************************************************************
     986                    *                                                                        *
     987                    *          REFRESH_TEXT                                                  *
     988                    *                                                                        *
     989                    *          THIS IS CREATED BY THE MAIN OPERATOR MESSAGE HANDLER.         *
     990                    *          A8 POINTS AT THAT PROCESS AREA.  WE KEEP OUR OWN              *
     991                    *          COPY OF THE DATA FROM THAT AREA, AND WHEN A CHANGE            *
     992                    *          OCCURS, WE RE-PLOT THE LINE.                                  *
     993                    *                                                                        *
     994                    **************************************************************************
     995 00003fb0           REFRESH_TEXT
     996 00003fb0                    SLEEP   1                    ;SLEEP SO E_INITS HAS A CHANCE TO RUN
     997 00003ff0     b30d           MOVE    A8,*A13(PDATA),L     ;SMASH OUR AREA TO CAUSE IMMEDIATE PLOT
         00004000     0060  
     998                    
     999 00004010     0d3f  REF_LOOP CALLR   A9A10
         00004020     0094  
    1000                    *
    1001                    *        COMPARE THEIRS TO OURS.
    1002                    *
    1003 00004030     8f21  REF_COMP MOVB    *A9,A1
    1004 00004040     8f42           MOVB    *A10,A2
    1005 00004050     4822           CMP     A1,A2                ;SAME CHAR?
    1006 00004060     cb0a           JRNZ    REF_CHANGE           ;NOPE...IT CHANGED.
    1007                    
    1008 00004070     0b09           ADDI    BYTE_SIZE,A9
         00004080     0008  
    1009 00004090     0b0a           ADDI    BYTE_SIZE,A10
         000040a0     0008  
    1010 000040b0     3d20           DSJS    A0,REF_COMP
    1011                    *
    1012                    *        THEY MATCH
    1013                    *
    1014 000040c0           REF_SLEEP
    1015 000040c0                    SLEEP   1
    1016 00004100     c0f0           JRUC    REF_LOOP
    1017                    *
    1018                    *        CHANGE RECOGNIZED....COPY THEIRS TO OURS
    1019                    *
    1020 00004110           REF_CHANGE
    1021 00004110     0d3f           CALLR   A9A10
         00004120     0084  
    1022                    
    1023 00004130     8f21  CH_LOOP  MOVB    *A9,A1          ;FETCH A BYTE
    1024 00004140     8c2a           MOVB    A1,*A10
    1025                    
    1026 00004150     0b09           ADDI    BYTE_SIZE,A9
         00004160     0008  
    1027 00004170     0b0a           ADDI    BYTE_SIZE,A10
         00004180     0008  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   24

    1028 00004190     3ce0           DSJS    A0,CH_LOOP
    1029                    *
    1030                    *        NOW WE HAVE TO FORM AND PLOT THE STRING
    1031                    *        USE A ROUTINE THAT BUILDS IT IN THE GEORGE
    1032                    *        TEXT BUFFER (STRNGRAM)
    1033                    *
    1034 000041a0     a30c           MOVE    A8,-*A12,L                ;MOVE A8 TO WHERE ITS SAFE
    1035                    
    1036 000041b0                    JSRP    OUTPUT_LINE
    1037                    
    1038 00004220     8788           MOVE    *A12,A8,L                 ;GET IT BACK (NO POP YET)
    1039                    *
    1040                    *        NOW WE NEED TO ADD A CURSOR IF WE'RE NOT HUNG AT END
    1041                    *        A9 IS SET TO OUTPUT THE CURSOR LEFT JUSTIFIED
    1042                    *        EXCEPT THAT TRAILING SPACES HAVE NOT BEEN TAKEN
    1043                    *        INTO ACCOUNT.
    1044                    *
    1045 00004230     0d3f           CALLR   GET_NUM_LEFT              ;GET NUMBER OF LETTERS LEFT
         00004240     0019  
    1046 00004250     ca16           JRZ     NO_CURSOR_NOW             ;ZERO?
    1047                    
    1048 00004260     4402           SUB     A0,A2                     ;REMOVE THIS AMOUNT FROM TRAILERS!
    1049 00004270     2462           SLL     3,A2                      ;MULTIPLY BY 8 PER BLANK
    1050                    
    1051 00004280     e049           ADDXY   A2,A9                     ;NOW A9 IS BEYOND TRAILING BLANKS
    1052 00004290     4d22           MOVE    A9,A2                     ;MAKE IT SAFE.
    1053                    
    1054 000042a0     b503           MOVE    *A8(OP_M_Y),A3,W     ;GET HEIGHT
         000042b0     0070  
    1055 000042c0     2603           SLL     16,A3                ;PUT INTO POSITION
    1056                    
    1057 000042d0     09e8           MOVI    M_CMES_CURSOR,A8
         000042e0 00007d70" 
    1058 00004300     0d5f           CALLA   LM_SETUP                  ;SETUP
         00004310 00000000! 
    1059                    
    1060 00004330     ec49           MOVX    A2,A9
    1061 00004340     ee69           MOVY    A3,A9                     ;SUB IN THE CORRECT X AND Y
    1062                    
    1063 00004350                    JSRP    LM_FINIS
    1064                    
    1065 000043c0           NO_CURSOR_NOW
    1066 000043c0     9788           MOVE    *A12+,A8,L                 ;POP POINTER 
    1067                    
    1068 000043d0     c0ce           JRUC    REF_SLEEP
    1069                    
    1070                    **************************************************************************
    1071                    *                                                                        *
    1072                    *          GET_NUM_LEFT                                                  *
    1073                    *                                                                        *
    1074                    *          A8 POINTS AT MASTER GET-OP INITIALS PROCESS.                  *
    1075                    *          A0 RETURNS LETTERS LEFT TO GET.                               *
    1076                    *                                                                        *
    1077                    **************************************************************************
    1078 000043e0           GET_NUM_LEFT
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   25

    1079 000043e0     098f           MMTM    SP,A9
         000043f0     0040  
    1080 00004400     b709           MOVE    *A8(OP_EINIT),A9,L        ;GET E_INIT PROCESS VALUE
         00004410     00a0  
    1081 00004420     b520           MOVE    *A9(ENT_COUNTDOWN),A0,W   ;NO LETTERS LEFT?
         00004430     00c0  
    1082 00004440     09af          MMFM    SP,A9
         00004450     0200  
    1083 00004460     0960          RETS
    1084                    
    1085                    **************************************************************************
    1086                    *                                                                        *
    1087                    *          OUTPUT_LINE                                                   *
    1088                    *                                                                        *
    1089                    *          THIS IS CALLED TO OUTPUT THE CURRENT LINE BEING ENTERED.      *
    1090                    *          A8 POINTS AT THE MASTER PROCESS'S PROCESS STORE AREA.         *
    1091                    *                                                                        *
    1092                    *          RETURN TRAILING BLANKS IN A2                                  *
    1093                    *                                                                        *
    1094                    **************************************************************************
    1095 00004470           OUTPUT_LINE
    1096                    *
    1097                    * A3 = DAG OF AREA [YPOS,XPOS]                                           
    1098                    * A4 = [Y,X] SIZE OF AREA                                                
    1099                    *
    1100 00004470     b503           MOVE    *A8(OP_M_Y),A3,W       ;GET Y TO PLOT    
         00004480     0070  
    1101 00004490     0be3           SUBI    5,A3                 ;SOME ANIMATE ABOVE TOP LEVEL
         000044a0     fffa  
    1102 000044b0     2603           SLL     16,A3                ;PUT INTO POSITION
    1103 000044c0     09e4           MOVI    1A01FFH,A4
         000044d0 001a01ff  
    1104 000044f0     0d5f           CALLA   BLNKAREA             ;BLANK OUT THE REGION
         00004500 00000000! 
    1105                    
    1106 00004520     4d0a           MOVE    A8,A10               ;MOVE POINTER OVER
    1107 00004530     0b0a           ADDI    OP_LETS,A10          ;LETTERS AT THIS OFFSET
         00004540     00c0  
    1108                    
    1109 00004550     0d3f           CALLR   BUILD_ST             ;BUILD IT.
         00004560     0010  
    1110                    *
    1111                    **********************DON'T SMASH A2 BEYOND THIS POINT...ITS 
    1112                    **********************THE RETURN OF THE TRAILING BLANKS!
    1113                    *
    1114 00004570     b503           MOVE    *A8(OP_M_Y),A3,W     ;GET HEIGHT
         00004580     0070  
    1115 00004590     2603           SLL     16,A3                ;PUT INTO POSITION
    1116                    
    1117 000045a0     09e8           MOVI    MESS_CMESS,A8
         000045b0 00007cd0" 
    1118 000045d0     0d5f           CALLA   LM_SETUP
         000045e0 00000000! 
    1119                    
    1120 00004600     ee69           MOVY    A3,A9                ;GIVE IT THE CORRECT Y
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   26

    1121 00004610     09e8           MOVI    STRNGRAM,A8
         00004620 00000000! 
    1122 00004640     c080           JAUC    LM_FINIS
         00004650 00000000! 
    1123                    
    1124                    **************************************************************************
    1125                    *                                                                        *
    1126                    *          BUILD_ST                                                      *
    1127                    *                                                                        *
    1128                    *          THIS IS CALLED TO TAKE THE STRING POINTED TO                  *
    1129                    *          BY -A10- AND REMOVE LEADING AND TRAILING BLANKS               *
    1130                    *          AND MOVE THE STRING TO "STRNGRAM".                            *
    1131                    *                                                                        *
    1132                    *          RETURN THE NUMBER OF TRAILING BLANKS IN A2.                   *
    1133                    *          RETURN .EQ. IF ALL BLANK!                                     *
    1134                    *                                                                        *
    1135                    **************************************************************************
    1136 00004670           BUILD_ST
    1137 00004670     098f           MMTM    SP,A0,A1,A3,A4,A5,A10
         00004680     dc20  
    1138 00004690     5684           CLR     A4                     ;A4 = ZERO UNTIL 1ST NON-BLANK
    1139 000046a0     09e5           MOVI    STRNGRAM-BYTE_SIZE,A5  ;LAST NON-SPACE CHAR
         000046b0 fffffff8! 
    1140 000046d0     09e1           MOVI    STRNGRAM,A1          ;DESTINATION POINTER
         000046e0 00000000! 
    1141 00004700     09c2           MOVI    CMESS_CHARS,A2       ;CHAR COUNT
         00004710     0019  
    1142                    
    1143 00004720     8f43  BSLOOP   MOVB    *A10,A3              ;FETCH A BYTE
    1144 00004730     0b83           ANDI    BYTE_MASK,A3         ;KILL SIGN EXTEND.
         00004740 ffffff00  
    1145 00004760     cb02           JRNZ    BS1                  ;NOT ZERO
    1146 00004770     09c3           MOVI    SPACE,A3             ;REPLACE ZERO WITH SPACE.
         00004780     0020  
    1147                    
    1148 00004790     0b43  BS1      CMPI    SPACE,A3             ;IS IT A SPACE?
         000047a0     ffdf  
    1149 000047b0     ca03           JRZ     BS2                  ;IT IS...
    1150                    *
    1151                    *        NON-SPACE CHARACTER
    1152                    *
    1153 000047c0     5464           OR      A3,A4                ;INDICATE 1ST NON-BLANK SEEN
    1154 000047d0     4c25           MOVE    A1,A5                ;INDICATE THIS IS CURRENT TERMINATOR.
    1155 000047e0     c002           JRUC    BS3
    1156                    
    1157 000047f0     4c84  BS2      MOVE    A4,A4                ;HAS 1ST SPACE BEEN SEEN?
    1158 00004800     ca03           JRZ     BS4                  ;NOT YET...DON'T STORE
    1159                    
    1160 00004810     8c61  BS3      MOVB    A3,*A1               ;STORE IT IN MEMORY
    1161 00004820     0b01           ADDI    BYTE_SIZE,A1         ;PUSH DESTINATION POINTER
         00004830     0008  
    1162                    
    1163 00004840     0b0a  BS4      ADDI    BYTE_SIZE,A10        ;PUSH SOURCE POINTER
         00004850     0008  
    1164 00004860     3ea2           DSJS    A2,BSLOOP            ;AND FINISH PARSE
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   27

    1165                    *
    1166                    *        A5 NOW POINTS AT LAST NON-BLANK CHARACTER
    1167                    *
    1168 00004870     0b05           ADDI    BYTE_SIZE,A5         ;THIS IS 1 BEYOND
         00004880     0008  
    1169 00004890     5642           CLR     A2
    1170 000048a0     8c45           MOVB    A2,*A5               ;TERMINATE WITH A ZERO.
    1171                    *
    1172                    *        FOR OUR RETURN, WE NEED TO COMPUTE THE NUMBER OF 
    1173                    *        TRAILING SPACES IGNORED.
    1174                    *
    1175 000048b0     4c84           MOVE    A4,A4                ;ALL BLANK?
    1176 000048c0     cb03           JRNZ    NOT_BLNK
    1177 000048d0     09c2           MOVI    CMESS_CHARS,A2       ;ALL CHARS ARE TRAILING BLANKS
         000048e0     0019  
    1178 000048f0     c003           JRUC    BL_EX                ;RETURN THIS
    1179                    
    1180 00004900           NOT_BLNK
    1181 00004900     4c22           MOVE    A1,A2                ;THIS IS LAST CHAR WE WROTE
    1182 00004910     44a2           SUB     A5,A2                ;THIS IS NUMBER OF TRAILING SPACES (TIMES 8)
    1183 00004920     2fa2           SRL     3,A2                 ;DIVIDE BY 8 TO GET SPACES
    1184 00004930           BL_EX
    1185 00004930     4c84           MOVE    A4,A4                ;FLAG ZERO FOR ALL BLANK!
    1186 00004940     09af          MMFM    SP,A0,A1,A3,A4,A5,A10
         00004950     043b  
    1187 00004960     0960          RETS
    1188                    
    1189                    **************************************************************************
    1190                    *                                                                        *
    1191                    *          A9A10                                                         *
    1192                    *                                                                        *
    1193                    *          THIS POINTS A9 AT THE OTHER PROCESSES COPY                    *
    1194                    *          OF THE LETTERS, AND A10 AT OUR COPY.                          *
    1195                    *                                                                        *
    1196                    *          A0 RETURNED WITH NUMBER OF CHARACTERS TO CHECK                *
    1197                    *                                                                        *
    1198                    **************************************************************************
    1199 00004970     4d09  A9A10    MOVE    A8,A9                ;HIS LETTERS ARE STORED AT
    1200 00004980     0b09           ADDI    OP_LETS,A9           ;AT THIS OFFSET
         00004990     00c0  
    1201 000049a0     4daa           MOVE    A13,A10
    1202 000049b0     0b0a           ADDI    PDATA,A10            ;OUR STORAGE AREA.
         000049c0     0060  
    1203 000049d0     09c0           MOVI    CMESS_CHARS,A0       ;NUMBER OF CHARS TO CHECK
         000049e0     0019  
    1204 000049f0     0960           RETS
    1205                    
    1206                    * A1 = <COLOR><PALETTE>
    1207                    * A3 = DAG OF AREA [YPOS,XPOS]                                           
    1208                    * A4 = [Y,X] SIZE OF AREA                                                
    1209                    
    1210 00004a00     09e1  GO_RED   MOVI    NARCS_RED,A1
         00004a10 0000f9f9  
    1211 00004a30     c080           JAUC    SC_COL
         00004a40 00004af0' 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   28

    1212                    
    1213 00004a60     09e1  GO_GREEN MOVI    NARCS_GREEN,A1
         00004a70 0000fcfc  
    1214 00004a90     c080           JAUC    SC_COL
         00004aa0 00004af0' 
    1215                    
    1216 00004ac0     09e1  GO_BLUE  MOVI    NARCS_BLUE,A1
         00004ad0 0000fdfd  
    1217 00004af0     2601  SC_COL   SLL     16,A1                ;PALETTE 0....COLOR UP HIGH
    1218 00004b00     5663           CLR     A3                   ;UPPER LEFT 
    1219 00004b10     09e4           MOVI    19001FFH,A4
         00004b20 019001ff  
    1220 00004b40     0d5f           CALLA   FILLAREA             ;THIS DOES THE SCREEN
         00004b50 00000000! 
    1221 00004b70     c080           JAUC    WAIT_BUT             ;NOW WAIT FOR ANY BUTTON!
         00004b80 00000000! 
    1222                    
    1223 00004ba0           GO_CPUTEST
    1224 00004ba0     c080          JAUC    CPU_CHK
         00004bb0 00000000! 
    1225                    
    1226 00004bd0     5600  GO_STEST CLR     A0
    1227 00004be0     0580           MOVE    A0,@SCODE,W          ;NO "CURRENT" SYNTH YET
         00004bf0 00000010- 
    1228 00004c10     0580           MOVE    A0,@DCODE,W          ;NO "CURRENT" DIG YET
         00004c20 00000020- 
    1229 00004c40     09e8           MOVI    MEN_STEST,A8         ;PUT UP THE MENU AND GO!
         00004c50 0000e410" 
    1230 00004c70     c080           JAUC    GEN_MENU             ;THIS WILL RETURN TO LEVEL ABOVE US!
         00004c80 00000000! 
    1231                    *
    1232                    *        SOUND TEST EQUATES
    1233                    *
    1234              0000  TO_SD_BD EQU     0
    1235              0003  TO_Y_BD  EQU     3               ;A5 FOR SNDSND
    1236              00f2  TEST_YAM EQU     0F2H            ;A3 GETS CODE
    1237              00f2  TEST_DAC EQU     0F2H
    1238              00f3  CLR_YAM  EQU     0F3H            ;CODE TO CLEAR TALK-BACK PORT
    1239                    *
    1240                    *        TEST YAMAHA
    1241                    *
    1242 00004ca0     0d5f  GO_SYNT  CALLA   QSNDRST              ;RESET IN CASE CRASHED!
         00004cb0 00000000! 
    1243 00004cd0                    SLEEP   4                    ;LET IT GO A SEC!
    1244                    
    1245 00004d10                    JSRP    TOP_STUF
    1246                    
    1247 00004d80     09e8           MOVI    M_TESTING,A8
         00004d90 00013630" 
    1248 00004db0                    JSRP    SUR_MESS
    1249                    
    1250 00004e20     09c3           MOVI    CLR_YAM,A3           ;ASK FOR ZERO BACK
         00004e30     00f3  
    1251 00004e40     5621           CLR     A1                   ;INDICATE WE WANT A ZERO OR TIMEOUT
    1252 00004e50                    JSRP    TIME_YAM             ;DO IT!
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   29

    1253 00004ec0     c905           JRNC    ITSTHERE             ;READY TO TEST!
    1254                    
    1255 00004ed0     09c3           MOVI    TEST_YAM,A3          ;NOT ANSWERING...RUN THE TEST ANYWAYS
         00004ee0     00f2  
    1256 00004ef0     0d3f           CALLR   SEND_YAM             ;THIS WILL DO THE BINGS ANYWAYS
         00004f00     007d  
    1257 00004f10     c011           JRUC    NOT_HOME
    1258                    
    1259 00004f20           ITSTHERE
    1260 00004f20     09c3           MOVI    TEST_YAM,A3
         00004f30     00f2  
    1261 00004f40     09e1           MOVI    LAST_Y_CODE,A1       ;MAX TALK-BACK CODE
         00004f50 00000005  
    1262 00004f70                    JSRP    TIME_YAM             ;SEND TO CODE TO TEST IT
    1263 00004fe0     c804           JRC     NOT_HOME             ;
    1264                    
    1265 00004ff0     0b60           CMPI    LAST_Y_CODE,A0       ;COMPARE TO LAST IN TABLE
         00005000 fffffffa  
    1266 00005020     c203           JRLS    GO_S1                ;OK
    1267 00005030           NOT_HOME
    1268 00005030     09e0           MOVI    LAST_Y_CODE,A0       ;DISPLAY ERROR.
         00005040 00000005  
    1269 00005060           GO_S1
    1270 00005060     a20c           MOVE    A0,-*A12,L
    1271 00005070                    JSRP    TOP_STUF
    1272 000050e0     9780           MOVE    *A12+,A0,L
    1273                    
    1274 000050f0     ca04           JRZ     SYNT_ERR
    1275 00005100     0b60           CMPI    LAST_Y_CODE,A0
         00005110 fffffffa  
    1276 00005130     cb0b           JRNZ    DOSYE
    1277                    *
    1278                    *        WE HAVE A RESPONSE PROBLEM.....ADD A HINT THAT
    1279                    *        U5 SHOULD BE CHECKED.
    1280                    *
    1281 00005140     09e8  SYNT_ERR MOVI    M_CKU5,A8
         00005150 00013690" 
    1282 00005170                    JSRP    L_MESS
    1283 000051e0     c00a           JRUC    ST_QU
    1284                    
    1285 000051f0     09e1  DOSYE    MOVI    YAM_ERR_TAB,A1
         00005200 00013570" 
    1286 00005220                    JSRP    SHOW_SURE
    1287 00005290     c080  ST_QU    JAUC    ANY_BUT              ;THEN WAIT FOR ANY BUTTON.
         000052a0 000067d0' 
    1288                    
    1289 000052c0     0d5f  TOP_STUF CALLA   CLR_SCRN
         000052d0 00000000! 
    1290 000052f0     09e2           MOVI    M_SYNT,A2
         00005300 00011690" 
    1291 00005320     09e3           MOVI    NARCS_PURPLE,A3
         00005330 0000ffff  
    1292 00005350                    JSRP    TOP_BOX              ;PRINT TITLE BOX.
    1293 000053c0     0d5f           CALLA   SURE_BOX             ;PUT A NICE BOX UP!
         000053d0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   30

    1294 000053f0                    RETP
    1295                    **************************************************************************
    1296                    *                                                                        *
    1297                    *          SHOW_SURE                                                     *
    1298                    *                                                                        *
    1299                    *          A1 HAS ERROR TABLE POINTER.                                   *
    1300                    *          A0 HAS VALID OFFSET IN TABLE.                                 *
    1301                    *                                                                        *
    1302                    *          PRINT MESSAGE ON "SURE BOX" LINE.                             *
    1303                    *                                                                        *
    1304                    **************************************************************************
    1305 00005420           SHOW_SURE
    1306 00005420     24a0           SLL     5,A0                 ;LONG WORD TABLI
    1307 00005430     4020           ADD     A1,A0
    1308 00005440     8608           MOVE    *A0,A8,L             ;GET ERROR POINTER
    1309                    
    1310 00005450     c080           JAUC    SUR_MESS             ;DISPLAY MESSAGE
         00005460 00000000! 
    1311                    **************************************************************************
    1312                    *                                                                        *
    1313                    *          TIME_YAM                                                      *
    1314                    *                                                                        *
    1315                    *          THIS IS CALLED WITH CODE A3 TO SEND.  WE ARE                  *
    1316                    *          TO SEND IT AND WAIT FOR A REPLY ON THE                        *
    1317                    *          RETURN PORT.  WE WAIT FOR 1 SECOND.                           *
    1318                    *                                                                        *
    1319                    *          IF A1 = 0, THEN WE WAIT UNTIL WE SEE ZERO                     *
    1320                    *          ON THE HANDSHAKE PORT.                                        *
    1321                    *                                                                        *
    1322                    *          IF A1 .NE. 0, WE WAIT FOR 1 THROUGH A1.                       *
    1323                    *                                                                        *
    1324                    *          RETURN A0 =  CODE GOTTEN....CARRY CLEAR                       *
    1325                    *                                                                        *
    1326                    *          CARRY SET FOR TIMEOUT.                                        *
    1327                    *                                                                        *
    1328                    **************************************************************************
    1329 00005480     0d3f  TIME_YAM CALLR   SEND_YAM             ;SEND THE CODE
         00005490     0024  
    1330 000054a0     09c8           MOVI    0A0H,A8               ;1 SECOND TILL TIMEOUT
         000054b0     00a0  
    1331                    
    1332 000054c0     4c29           MOVE    A1,A9                ;KEEP INPUT PARAM
    1333 000054d0                    SLEEP   10H                  ;GIVE IT TIME TO GO!
    1334                    
    1335 00005510           YAM_LOOP
    1336 00005510                    SLEEP   1                    ;WAIT ANOTHER FRAME
    1337 00005550     1428           DEC     A8                   ;1 LESS FRAME
    1338 00005560     ca0c           JRZ     YAM_BAD              ;TIMED OUT!
    1339                    
    1340 00005570     0d3f           CALLR   GET_SHAK             ;GET THE HANDSHAKE DATA IN A0
         00005580     000e  
    1341 00005590     4809           CMP     A0,A9                ;DOES THE CODE MATCH?
    1342 000055a0     ca04           JRZ     YAM_OK               ;YEP...THIS HANDLES ZERO
    1343                    
    1344 000055b0     4c00           MOVE    A0,A0                ;ZERO GOTTEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   31

    1345 000055c0     caf4           JRZ     YAM_LOOP
    1346                    
    1347 000055d0     4920           CMP     A9,A0                ;DO WE HAVE A VALUE IN RANGE?
    1348 000055e0     c3f2           JRHI    YAM_LOOP             ;NOT YET...CONTINUE
    1349                    
    1350 000055f0     0320  YAM_OK   CLRC                         ;CLEAR CARRY FOR RETURN
    1351 00005600                    RETP
    1352                    
    1353 00005630     0de0  YAM_BAD  SETC
    1354 00005640                    RETP
    1355                    
    1356 00005670     07e0  GET_SHAK MOVB    @SND_TALK,A0
         00005680 01c00020  
    1357 000056a0     0b80           ANDI    BYTE_MASK,A0
         000056b0 ffffff00  
    1358 000056d0     0960           RETS
    1359                    
    1360                    **************************************************************************
    1361                    *                                                                        *
    1362                    *          SEND_YAM - SEND_DAC                                           *
    1363                    *                                                                        *
    1364                    *          SEND THE CODE PASSED IN -A3- TO THE APPROPRIATE BOARD.        *
    1365                    *                                                                        *
    1366                    **************************************************************************
    1367 000056e0     098f  SEND_YAM MMTM    SP,A5
         000056f0     0400  
    1368 00005700     09c5           MOVI    TO_Y_BD,A5
         00005710     0003  
    1369 00005720     0583           MOVE    A3,@SND_MADE,W       ;INDICATE WE MADE A SOUND!
         00005730 00000000! 
    1370 00005750     0d5f           CALLA   SNDSND               ;SEND IT!
         00005760 00000000! 
    1371 00005780     09af          MMFM    SP,A5
         00005790     0020  
    1372 000057a0     0960          RETS
    1373                    
    1374 000057b0     098f  SEND_DAC MMTM    SP,A5
         000057c0     0400  
    1375 000057d0     09c5           MOVI    TO_SD_BD,A5
         000057e0     0000  
    1376 000057f0     0583           MOVE    A3,@SND_MADE,W       ;INDICATE WE MADE A SOUND!
         00005800 00000000! 
    1377 00005820     0d5f           CALLA   SNDSND               ;SEND IT!
         00005830 00000000! 
    1378 00005850     09af          MMFM    SP,A5
         00005860     0020  
    1379 00005870     0960          RETS
    1380                    
    1381 00005880     0d5f  GO_DIGT  CALLA   QSNDRST              ;RESET IN CASE CRASHED!
         00005890 00000000! 
    1382 000058b0                    SLEEP   4                    ;LET IT GO A SEC!
    1383 000058f0     0d5f           CALLA   CLR_SCRN
         00005900 00000000! 
    1384 00005920     09e2           MOVI    M_DIGT,A2
         00005930 00011720" 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   32

    1385 00005950     09e3           MOVI    NARCS_PURPLE,A3
         00005960 0000ffff  
    1386 00005980                    JSRP    TOP_BOX              ;PRINT TITLE BOX.
    1387                    
    1388 000059f0     0d5f           CALLA   SURE_BOX             ;PUT A NICE BOX UP!
         00005a00 00000000! 
    1389                    
    1390 00005a20     09c3           MOVI    TEST_DAC,A3
         00005a30     00f2  
    1391 00005a40     0d3f           CALLR   SEND_DAC             ;RUN THE TEST!
         00005a50     ffd5  
    1392                    
    1393 00005a60     09e8           MOVI    DAC_ERR,A8
         00005a70 000128f0" 
    1394 00005a90                    JSRP    L_MESS               ;PRINT ERROR
    1395 00005b00     c080           JAUC    ANY_BUT              ;AND TELL EM ANY BUTTON TO CONTINUE
         00005b10 000067d0' 
    1396                    
    1397                    **************************************************************************
    1398                    *                                                                        *
    1399                    *          GO_SYNP                                                       *
    1400                    *                                                                        *
    1401                    *          THIS IS THE "PLAY SYNTHESIZER" CODE.                          *
    1402                    *                                                                        *
    1403                    *          GET THE NEXT CODE...SEND IT TO THE YAMAHA AND                 *
    1404                    *          DISPLAY THE CORRESPONDING TITLE.                              *
    1405                    *                                                                        *
    1406                    **************************************************************************
    1407 00005b30           GO_SYNP  JSRP    SHUT_UP              ;RESET SO WE'RE ONLY SOUND
    1408 00005ba0     05a3           MOVE    @SCODE,A3,W          ;GET THE NEXT CODE
         00005bb0 00000010- 
    1409 00005bd0     0d3f           CALLR   INC_IF_NEC
         00005be0     0042  
    1410 00005bf0     0b63           CMPI    LAST_SCODE,A3
         00005c00 fffffff3  
    1411 00005c20     c201           JRLS    GO_SYNP1             ;IN RANGE
    1412 00005c30     1823           MOVK    1,A3
    1413                    
    1414 00005c40     0583  GO_SYNP1 MOVE    A3,@SCODE,W          ;PUT IN MEMORY
         00005c50 00000010- 
    1415 00005c70     09e0           MOVI    SCTAB,A0
         00005c80 000062c0' 
    1416 00005ca0     1423           DEC     A3                   ;ZERO DOESN'T COUNT
    1417 00005cb0     2463           SLL     3,A3                 ;INDEX TO BYTES
    1418 00005cc0     4060           ADD     A3,A0
    1419 00005cd0     8e03           MOVB    *A0,A3
    1420 00005ce0     0b83           ANDI    BYTE_MASK,A3
         00005cf0 ffffff00  
    1421 00005d10     0d3f           CALLR   SEND_YAM
         00005d20     ff9b  
    1422 00005d30     1820           MOVK    1,A0
    1423 00005d40     0580           MOVE    A0,@NO_CLEAR
         00005d50 00000000! 
    1424 00005d70                    RETP                         ;THATS IT!
    1425                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   33

    1426 00005da0           GO_DIGP  JSRP    SHUT_UP              ;RESET SO WE'RE ONLY SOUND
    1427 00005e10     05a3           MOVE    @DCODE,A3,W          ;GET THE NEXT CODE
         00005e20 00000020- 
    1428 00005e40     0d3f           CALLR   INC_IF_NEC
         00005e50     001b  
    1429 00005e60     0b63           CMPI    LAST_DCODE,A3
         00005e70 fffffff6  
    1430 00005e90     c201           JRLS    GO_DYNP1             ;IN RANGE
    1431 00005ea0     1823           MOVK    1,A3
    1432                    
    1433 00005eb0     0583  GO_DYNP1 MOVE    A3,@DCODE,W          ;PUT IN MEMORY
         00005ec0 00000020- 
    1434 00005ee0     09e0           MOVI    DCTAB,A0
         00005ef0 00006270' 
    1435 00005f10     1423           DEC     A3                   ;ZERO DOESN'T COUNT
    1436 00005f20     2463           SLL     3,A3                 ;INDEX TO BYTES
    1437 00005f30     4060           ADD     A3,A0
    1438 00005f40     8e03           MOVB    *A0,A3
    1439 00005f50     0b83           ANDI    BYTE_MASK,A3
         00005f60 ffffff00  
    1440 00005f80     0d3f           CALLR   SEND_DAC
         00005f90     ff81  
    1441 00005fa0     1820           MOVK    1,A0
    1442 00005fb0     0580           MOVE    A0,@NO_CLEAR
         00005fc0 00000000! 
    1443 00005fe0                    RETP                         ;THATS IT!
    1444                    
    1445 00006010           INC_IF_NEC
    1446 00006010     4c63           MOVE    A3,A3                ;IF ITS ZERO...KICK IT!
    1447 00006020     ca07           JRZ     INC_IT
    1448 00006030     07a0           MOVE    @LAST_BUT,A0,L       ;SEE WHICH BUTTON
         00006040 00000000! 
    1449 00006060     0b80           ANDI    STARTS_HIGH,A0       ;START BUTTON?
         00006070 fcffffff  
    1450 00006090     cb01           JRNZ    NO_INC               ;THEN USE SAME CODE
    1451 000060a0     1023  INC_IT   INC     A3
    1452 000060b0     0960  NO_INC   RETS
    1453                    
    1454 000060c0     09e0  SHUT_UP         MOVI    DIGOFF,A0       ;PEND ON DIG SIDE       
         000060d0 000061f0' 
    1455 000060f0     0d5f          CALLA   ONESND
         00006100 00000000! 
    1456 00006120     09e0          MOVI    YAMOFF,A0       ;PEND ON YAM SIDE
         00006130 00006230' 
    1457 00006150     0d5f          CALLA   ONESND
         00006160 00000000! 
    1458 00006180                    SLEEP   1
    1459 000061c0                    RETP
    1460                    *
    1461                    * HUSH CALLS FOR EACH SOUND SIDE
    1462                    *
    1463 000061f0     f8ff  DIGOFF   .WORD  0F0FFH|0800H,001H,08000H,0              ;TURN SOUND SIDE OFF
    1464 00006230     fbff  YAMOFF  .WORD   0F3FFH|0800H,001H,08000H,0              ;MUSIC HARD OFF
    1465                    
    1466 00006270       03  DCTAB    .BYTE   3,1BH,1EH,42H,51H,58H,0B0H,0F0H,0F1H
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   34

    1467              0009  LAST_DCODE       EQU     ($-DCTAB)/BYTE_SIZE
    1468 000062c0                    .EVEN
    1469                    
    1470 000062c0       04  SCTAB    .BYTE   4,6,7,9,92H,9AH,9BH,0A0H,0A1H,8BH,0F1H,0F0H
    1471              000c  LAST_SCODE       EQU     ($-SCTAB)/BYTE_SIZE
    1472 00006320                    .EVEN
    1473                    
    1474 00006320           GO_CROSS
    1475 00006320     0d5f          CALLA   CROSS_H
         00006330 00000000! 
    1476 00006350                   JSRP    WAIT_BUT
    1477 000063c0     0d5f          CALLA   SCRCLR
         000063d0 00000000! 
    1478 000063f0     0d5f          CALLA   MYOINIT
         00006400 00000000! 
    1479 00006420                   RETP
    1480                    
    1481 00006450           GO_SWTEST  
    1482 00006450     0d5f          CALLA   SW_CHK
         00006460 00000000! 
    1483 00006480     0d5f          CALLA   SCRCLR
         00006490 00000000! 
    1484 000064b0     0d5f          CALLA   MYOINIT
         000064c0 00000000! 
    1485 000064e0                   RETP
    1486                    
    1487 00006510           GO_ROMTEST
    1488 00006510     c080          JAUC    ROM_CHK
         00006520 00000000! 
    1489                    
    1490 00006540           GO_BARS
    1491 00006540     09e1          MOVI    8000H,A1
         00006550 00008000  
    1492 00006570     5600          CLR     A0
    1493 00006580     0d5f          CALLA   KILALL
         00006590 00000000! 
    1494 000065b0     0d5f          CALLA   COL_BARS
         000065c0 00000000! 
    1495 000065e0                   JSRP    WAIT_BUT
    1496 00006650     0d5f          CALLA   SCRCLR
         00006660 00000000! 
    1497 00006680     0d5f          CALLA   MYOINIT
         00006690 00000000! 
    1498 000066b0     0d5f          CALLA   COLRSTRT
         000066c0 00000000! 
    1499 000066e0                   RETP
    1500                    
    1501 00006710           DO_BURN  
    1502 00006710     09e8           MOVI    MESS_BURN,A8         ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00006720 00010e40" 
    1503 00006740     09e9           MOVI    BURN_IN,A9           ;GEORGE'S ENTRY POINT
         00006750 00000000! 
    1504 00006770     09ea           MOVI    MESS_BURN,A10        ;THIS WILL NEVER BE SEEN!
         00006780 00010e40" 
    1505 000067a0     c080           JAUC    AREUSURE             ;ASK EM.
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   35

         000067b0 00000000! 
    1506                    *
    1507                    *        DIAGNOSTIC TESTS
    1508                    *
    1509                    **************************************************************************
    1510                    *                                                                        *
    1511                    *          GO_CPUTEST                                                    *
    1512                    *                                                                        *
    1513                    *          THIS SIMULATES THE CPU TEST SUCH THAT THE MAGICAL             *
    1514                    *          "RETURN" CODE GETS EXECUTED.                                  *
    1515                    *                                                                        *
    1516                    **************************************************************************
    1517                    **************************************************************************
    1518                    *                                                                        *
    1519                    *          CALLA   CLR_SCRN             ;CLEAR THE SCREEN                *
    1520                    *          CALLA   SURE_BOX             ;PUT A NICE BOX AROUND IT.       *
    1521                    *          MOVI    CPU_OK,A8                                             *
    1522                    *          JSRP    L_MESS               ;NICE MESSAGE                    *
    1523                    *          JSRP    ANY_BUT              ;WAIT FOR ANY BUTTON             *
    1524                    *                                                                        *
    1525                    *          MOVI    RT_RET,A7            ;START THE NEW PROCESS FROM BASE *
    1526                    *          CALLA   P_FORK                                                *
    1527                    *          JAUC    SUCIDE               ;THIS SHOULD DO IT!              *
    1528                    *                                                                        *
    1529                    **************************************************************************
    1530                    *
    1531 000067d0           ANY_BUT
    1532 000067d0     09e8           MOVI    ANY_MENU,A8          ;ANY BUTTON TO CONTINUE
         000067e0 0000e770" 
    1533 00006800     09c9           MOVI    1,A9                 ;CURSOR ON ENTRY 1
         00006810     0001  
    1534 00006820     c080           JAUC    B_MENU               ;DO IT....RETURN WHEN PRESSED.
         00006830 00000000! 
    1535                    
    1536                    **************************************************************************
    1537                    *                                                                        *
    1538                    *          MONITOR PATTERNS                                              *
    1539                    *                                                                        *
    1540                    **************************************************************************
    1541 00006850           GO_PATTERNS
    1542 00006850     09e8           MOVI    MEN_PATTERNS,A8      ;PUT UP THE MENU AND GO!
         00006860 0000e8f0" 
    1543 00006880     c080           JAUC    GEN_MENU             ;THIS WILL RETURN TO LEVEL ABOVE US!
         00006890 00000000! 
    1544                    
    1545                    *******************************************************************************
    1546                    *******************************************************************************
    1547                    *******************************************************************************
    1548                    *
    1549                    *              A   U   D   I   T        D   I   S   P   L   A   Y   S
    1550                    *
    1551                    *******************************************************************************
    1552                    *******************************************************************************
    1553                    *******************************************************************************
    1554                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   36

    1555                    *                                                                        *
    1556                    *          AUDIT TABLE STRUCTURE                                         *
    1557                    *                                                                        *
    1558                    **************************************************************************
    1559              0000  AUD_MESS         EQU     0                      ;LONG-PTR TO TEXT
    1560              0020  AUD_ROUTINE      EQU     AUD_MESS+LONG_SIZE     ;LONG - NON ZERO MEANS CALL FOR NUMBER
    1561              0040  AUD_NUMBER       EQU     AUD_ROUTINE+LONG_SIZE  ;WORD - IF ABOVE ZERO, THEN AUDIT NUMBER
    1562              0050  AUD_T_SIZE       EQU     AUD_NUMBER+WORD_SIZE
    1563                    
    1564                    AMAC     $MACRO  MESS,ROUT,AUDIT
    1565                             .LONG   :MESS:
    1566                             .LONG   :ROUT:
    1567                             .WORD   :AUDIT:
    1568                             $ENDM
    1569                    
    1570              002c  AUD_LM           EQU     TIT_ULX      ;SQUARE OFF AUDITS W/ HEADER.
    1571              01cc  AUD_RM           EQU     TIT_LRX
    1572              005a  AUD_Y_START      EQU     5AH
    1573              001c  AUD_DY           EQU     1CH
    1574                    
    1575              00de  CP2_Y            EQU     222           ;PART 2 OF COIN AUDIT PAGE.
    1576                    *
    1577                    *        TOP HALF OF COIN AUDIT PAGE 1 TABLE
    1578                    *
    1579 000068b0           COIN_AUDS      
    1580 000068b0     005a           .WORD   AUD_Y_START           ;Y START
    1581 000068c0     001c           .WORD   AUD_DY                ;Y BETWEEN ENTRIES
    1582 000068d0     002c           .WORD   AUD_LM                ;LEFT MARGIN X
    1583 000068e0     01cc           .WORD   AUD_RM                ;RIGHT MARGIN X
    1584 000068f0                    AMAC    M_LCOIN,0,AUDLCOIN
    1585 00006940                    AMAC    M_CCOIN,0,AUDCCOIN
    1586 00006990                    AMAC    M_RCOIN,0,AUDRCOIN
    1587 000069e0                    AMAC    M_PAIDC,0,AUDPAIDC
    1588 00006a30 00000000           .LONG   0
    1589                    *
    1590                    *        BOTTOM HALF OF COIN AUDIT PAGE 1 TABLE
    1591                    *
    1592 00006a50     00de  COIN_A2  .WORD   CP2_Y                 ;Y START
    1593 00006a60     001c           .WORD   AUD_DY                ;Y BETWEEN ENTRIES
    1594 00006a70     002c           .WORD   AUD_LM                ;LEFT MARGIN X
    1595 00006a80     01cc           .WORD   AUD_RM                ;RIGHT MARGIN X
    1596 00006a90                    AMAC    M_START,STARTS,0
    1597 00006ae0                    AMAC    M_CONT,CONTINS,0
    1598 00006b30                    AMAC    M_PLAYS,DOPLAYS,0
    1599 00006b80                    AMAC    M_HSLEFT,DOHSLEFT,0
    1600 00006bd0 00000000           .LONG   0
    1601                    
    1602                    **************************************************************************
    1603                    *                                                                        *
    1604                    *          COIN_D1                                                       *
    1605                    *                                                                        *
    1606                    *          THIS IS TOP HALF OF DETAILED COIN AUDIT PAGE                  *
    1607                    *          ITS THE SAME AS THE OTHER COIN PAGE WITH THE Y POSITIONING    *
    1608                    *          A LITTLE DIFFERENT                                            *
    1609                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   37

    1610                    **************************************************************************
    1611 00006bf0           COIN_D1
    1612 00006bf0     0038           .WORD   38H                   ;Y START
    1613 00006c00     0016           .WORD   16H                   ;Y BETWEEN ENTRIES
    1614 00006c10     002c           .WORD   AUD_LM                ;LEFT MARGIN X
    1615 00006c20     01cc           .WORD   AUD_RM                ;RIGHT MARGIN X
    1616 00006c30                    AMAC    M_LCOIN,0,AUDLCOIN
    1617 00006c80                    AMAC    M_CCOIN,0,AUDCCOIN
    1618 00006cd0                    AMAC    M_RCOIN,0,AUDRCOIN
    1619 00006d20 00000000           .LONG   0
    1620                    *
    1621                    *        DOOR CLOSED AUDITS.
    1622                    *
    1623 00006d40           COIN_D2
    1624 00006d40     00e2           .WORD   0E2H                   ;Y START
    1625 00006d50     0016           .WORD   16H                   ;Y BETWEEN ENTRIES
    1626 00006d60     002c           .WORD   AUD_LM                ;LEFT MARGIN X
    1627 00006d70     01cc           .WORD   AUD_RM                ;RIGHT MARGIN X
    1628 00006d80                    AMAC    M_LCOIN,0,AUDLCDC
    1629 00006dd0                    AMAC    M_CCOIN,0,AUDCCDC
    1630 00006e20                    AMAC    M_RCOIN,0,AUDRCDC
    1631 00006e70 00000000           .LONG   0
    1632                    
    1633                    **************************************************************************
    1634                    *                                                                        *
    1635                    *          GAME PLAY AUDIT SCREEN                                        *
    1636                    *                                                                        *
    1637                    **************************************************************************
    1638 00006e90           GAME_AUDS
    1639 00006e90     0060           .WORD   60H                   ;Y START
    1640 00006ea0     0022           .WORD   22H                   ;Y BETWEEN ENTRIES
    1641 00006eb0     002c           .WORD   AUD_LM                ;LEFT MARGIN X
    1642 00006ec0     01cc           .WORD   AUD_RM                ;RIGHT MARGIN X
    1643 00006ed0                    AMAC    M_PLAYS,DOPLAYS,0     ;PLAYS ON TOP
    1644 00006f20                    AMAC    M_EXTRA,0,AUDEXTRA    ;EXTRA MEN EARNED
    1645 00006f70                    AMAC    M_P1MIN,DO_P1MIN,0
    1646 00006fc0                    AMAC    M_P2MIN,DO_P2MIN,0
    1647 00007010                    AMAC    M_HOURS,DO_HOURS,0
    1648 00007060                    AMAC    M_AVGT,DO_AVGT,0
    1649 000070b0                    AMAC    M_ELAPSE,DO_ELAPSE,0
    1650 00007100 00000000           .LONG   0
    1651                    
    1652 00007120           GAME_AUD2
    1653 00007120     0054           .WORD   54H                   ;Y START
    1654 00007130     001a           .WORD   1AH                   ;Y BETWEEN ENTRIES
    1655 00007140     002c           .WORD   AUD_LM                ;LEFT MARGIN X
    1656 00007150     01cc           .WORD   AUD_RM                ;RIGHT MARGIN X
    1657 00007160                    AMAC    M_START,STARTS,0
    1658 000071b0                    AMAC    M_WAVE1,0,AUDWAVE1
    1659 00007200                    AMAC    M_WAVE2,0,AUDWAVE2
    1660 00007250                    AMAC    M_WAVE3,0,AUDWAVE3
    1661 000072a0                    AMAC    M_WAVE4,0,AUDWAVE4
    1662 000072f0                    AMAC    M_WAVE5,0,AUDWAVE5
    1663 00007340                    AMAC    M_WAVE6,0,AUDWAVE6
    1664 00007390                    AMAC    M_WAVE7,0,AUDWAVE7
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   38

    1665 000073e0                    AMAC    M_WAVE8,0,AUDWAVE8
    1666 00007430                    AMAC    M_MRBIG,0,AUDFINI
    1667 00007480 00000000           .LONG   0
    1668                    
    1669                    
    1670 000074a0           MISC_AUD
    1671 000074a0     0060           .WORD   60H                   ;Y START
    1672 000074b0     0022           .WORD   22H                   ;Y BETWEEN ENTRIES
    1673 000074c0     002c           .WORD   AUD_LM                ;LEFT MARGIN X
    1674 000074d0     01cc           .WORD   AUD_RM                ;RIGHT MARGIN X
    1675 000074e0                    AMAC    M_LOCKUP,0,AUDLOCK
    1676 00007530                    AMAC    M_DOG,0,AUDDOGGY
    1677 00007580                    AMAC    M_TRAP,0,AUDTRAP
    1678 000075d0                    AMAC    M_SURV,0,AUDSURV
    1679 00007620                    AMAC    M_HIDB,0,AUDBONE
    1680 00007670                    AMAC    M_LOOP,0,AUDLOOP
    1681 000076c0 00000000           .LONG   0
    1682                    
    1683                    *
    1684                    *        THIS HAS THE OCTOPUSS STUFF SO WE CAN SHOW OUR ADJUSTMENTS
    1685                    *        AND CRASH TABLE.
    1686                    *
    1687                    *
    1688                    *        FIRST CHECK JOYSTICKS FOR LEFT ONE UP AND
    1689                    *        AND RIGHT ONE RIGHT
    1690                    *
    1691                    **************************************************************************
    1692                    *                                                                        *
    1693                    * CK_PUSS                                                                *
    1694                    * TRY_AGAIN                                                              *
    1695                    *          MOVE    @SWITCH,A0,W                                          *
    1696                    *          MOVE    A0,A1                ;COPY                            *
    1697                    *          NOT     A0                                                    *
    1698                    *          ANDI    0F0FH,A0                                              *
    1699                    *          CMPI    0801H,A0             ;JOYSTICKS CORRECT?              *
    1700                    *          JRNZ    NO_JOY               ;NOPE.......TOO BAD!             *
    1701                    *                                                                        *
    1702                    *          CMPI    37CEH,A1                                              *
    1703                    *          JRZ     WERE_IN              ;THEY'RE COOL LETS DO IT!        *
    1704                    *                                                                        *
    1705                    *          SLEEP   1                                                     *
    1706                    *          JRUC    TRY_AGAIN                                             *
    1707                    *                                                                        *
    1708                    * NO_JOY   RETP                         ;NOT CORRECT...EXIT              *
    1709                    *                                                                        *
    1710                    * WERE_IN  MOVI    HID_P,A7             ;USE FRESH PROCESS STACK         *
    1711                    *          CALLA   P_FORK                                                *
    1712                    *          JAUC    SUCIDE                                                *
    1713                    *                                                                        *
    1714                    *                                                                        *
    1715                    **************************************************************************
    1716 000076e0     0d5f  HID_P   CALLA   MYOINIT              ;MAKE SURE A13 IS OK BEFORE ANY ACTIONS!
         000076f0 00000000! 
    1717 00007710     0d5f           CALLA   DIGSRT               ;RE-INIT THE WORLD!
         00007720 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   39

    1718                    
    1719 00007740     09e2           MOVI    MES_DEST,A2
         00007750 000140e0" 
    1720 00007770     09e3           MOVI    NARCS_LF,A3
         00007780 0000f5f5  
    1721 000077a0                    JSRP    TOP_BOX              ;PRINT TITLE BOX.
    1722                    
    1723                    *          A4 = UPPER LEFT Y,X                                           *
    1724                    *          A5 = LOWER RIGHT Y,X                                          *
    1725                    *          A6 = NUMBER OF SLICES GOING IN.                               *
    1726                    
    1727 00007810     09e4           MOVI    [4EH,TIT_ULX],A4
         00007820 004e002c  
    1728 00007840     09e5           MOVI    [190H,TIT_LRX],A5
         00007850 019001cc  
    1729 00007870     09c6           MOVI    16,A6
         00007880     0010  
    1730 00007890     0d5f           CALLA   G_BORDER
         000078a0 00000000! 
    1731                    
    1732 000078c0     09e8           MOVI    M_TEAM,A8            ;PUT UP THE DESIGN TEAM!
         000078d0 00014170" 
    1733 000078f0                    JSRP    L_MESS
    1734                    
    1735 00007960                    JSRP    WAIT_BUT
    1736                    
    1737 000079d0     0d5f           CALLA   CLR_SCRN             ;CLEAR IT OUT
         000079e0 00000000! 
    1738 00007a00     09e0           MOVI    MISC_AUD,A0
         00007a10 000074a0' 
    1739 00007a30                    JSRP    PRNT_AUD             ;PRINT IT
    1740                    
    1741 00007aa0                    JSRP    WAIT_BUT
    1742                    
    1743 00007b10                    JSRP    DISPDUMP                                              
    1744                                                                                            
    1745 00007b80                    JSRP    WAIT_MUT
    1746 00007bf0     c080           JAUC    DIAG_EX              ;NOW GET OUT!
         00007c00 00000000! 
    1747                    
    1748                    **************************************************************************
    1749                    *                                                                        *
    1750                    *          PRNT_AUD                                                      *
    1751                    *                                                                        *
    1752                    *          THIS IS CALLED TO PRINT OUT AN AUDIT TABLE.                   *
    1753                    *                                                                        *
    1754                    **************************************************************************
    1755              0060  AT_PTR   EQU     PDATA                ;LONG
    1756              0080  AT_Y     EQU     PDATA+LONG_SIZE      ;WORD
    1757              0090  AT_DY    EQU     AT_Y+WORD_SIZE       ;WORD
    1758              00a0  AT_LX    EQU     AT_DY+WORD_SIZE      ;WORD   LEFT MARGIN X
    1759              00b0  AT_RX    EQU     AT_LX+WORD_SIZE      ;WORD   RIGHT MARGIN X
    1760              00c0  AT_OBJ   EQU     AT_RX+WORD_SIZE      ;LONG   OBJECT POINTER FOR COLLECTION ROUT
    1761              00e0  AT_MESS  EQU     AT_OBJ+LONG_SIZE     ;LONG   PRINT_MONEY MESSAGE STASH
    1762                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   40

    1763 00007c20           PRNT_AUD
    1764 00007c20     9401           MOVE    *A0+,A1,W            ;GET STARTING HEIGHT
    1765 00007c30     b02d           MOVE    A1,*A13(AT_Y),W      ;STORE
         00007c40     0080  
    1766                    
    1767 00007c50     9401           MOVE    *A0+,A1,W            ;GET DY TO USE
    1768 00007c60     b02d           MOVE    A1,*A13(AT_DY),W     ;STASH IT AWAY
         00007c70     0090  
    1769                    
    1770 00007c80     9401           MOVE    *A0+,A1,W            ;GET LEFT MARGIN
    1771 00007c90     b02d           MOVE    A1,*A13(AT_LX),W     ;STORE
         00007ca0     00a0  
    1772                    
    1773 00007cb0     9401           MOVE    *A0+,A1,W            ;GET RIGHT MARGIN
    1774 00007cc0     b02d           MOVE    A1,*A13(AT_RX),W     ;STASH IT AWAY
         00007cd0     00b0  
    1775                    
    1776 00007ce0     b20d           MOVE    A0,*A13(AT_PTR),L     ;SAVE POINTER INTO AREA
         00007cf0     0060  
    1777                    
    1778 00007d00           PA1      JSRP    DO_AN_AUDIT           ;PRINT OUT THE CURRENT AUDIT
    1779                    
    1780 00007d70     b7a0           MOVE    *A13(AT_PTR),A0,L     ;GET POINTER
         00007d80     0060  
    1781 00007d90     0b00           ADDI    AUD_T_SIZE,A0
         00007da0     0050  
    1782 00007db0     b20d           MOVE    A0,*A13(AT_PTR),L     ;PUT BACK
         00007dc0     0060  
    1783                    
    1784 00007dd0     0d3f           CALLR   ADD_AUDIT_DY
         00007de0     0005  
    1785                    
    1786 00007df0     8601           MOVE    *A0,A1,L              ;ARE WE DONE?
    1787 00007e00     cbef           JRNZ    PA1
    1788                    
    1789 00007e10                    RETP
    1790                    
    1791                    **************************************************************************
    1792                    *                                                                        *
    1793                    *          ADD_AUDIT_DY                                                  *
    1794                    *                                                                        *
    1795                    *          THIS IS CALLED TO MOVE THE AUDIT Y (STORE IN                  *
    1796                    *          PROCESS AREA) TO THE NEXT AUDIT BY ADDING THE                 *
    1797                    *          CURRENT DY (ALSO STORED IN PROCESS AREA).                     *
    1798                    *                                                                        *
    1799                    **************************************************************************
    1800 00007e40           ADD_AUDIT_DY
    1801 00007e40     098f           MMTM    SP,A1,A2
         00007e50     6000  
    1802 00007e60     b5a1           MOVE    *A13(AT_Y),A1,W
         00007e70     0080  
    1803 00007e80     b5a2           MOVE    *A13(AT_DY),A2,W      ;GET DELTA Y
         00007e90     0090  
    1804 00007ea0     4041           ADD     A2,A1                 ;MOVE THE Y DOWN
    1805 00007eb0     b02d           MOVE    A1,*A13(AT_Y),W
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   41

         00007ec0     0080  
    1806 00007ed0     09af          MMFM    SP,A1,A2
         00007ee0     0006  
    1807 00007ef0     0960          RETS
    1808                    
    1809 00007f00           BEGIN_AUDIT
    1810 00007f00     098f           MMTM    SP,A0
         00007f10     8000  
    1811 00007f20     5600           CLR     A0
    1812 00007f30     0580           MOVE    A0,@BAD_AUD,W            ;MONITOR CORRUPTION.
         00007f40 00000000! 
    1813 00007f60     09af          MMFM    SP,A0
         00007f70     0001  
    1814 00007f80     0960          RETS
    1815                    
    1816 00007f90           DO_AN_AUDIT
    1817 00007f90     0d3f           CALLR   BEGIN_AUDIT
         00007fa0     fff5  
    1818 00007fb0     b7a3           MOVE    *A13(AT_PTR),A3,L        ;GET POINTER
         00007fc0     0060  
    1819 00007fd0     b664           MOVE    *A3(AUD_ROUTINE),A4,L    ;ROUTINE TO CALL?
         00007fe0     0020  
    1820 00007ff0     ca05           JRZ     DO_BY_NUMBER             ;NOPE....DO IT BY NUMBER
    1821                    
    1822 00008000     09e7           MOVI    DAA_RET,A7
         00008010 00008120' 
    1823 00008030     a2ec          MOVE    A7,-*A12,L      ;PUSH RET ADDR
    1824 00008040     0164           JUMP    A4              ;"CALL" THE ROUTINE
    1825                    
    1826 00008050           DO_BY_NUMBER
    1827 00008050     b460           MOVE    *A3(AUD_NUMBER),A0,W    ;FETCH THE AUDIT NUMBER
         00008060     0040  
    1828 00008070     0d5f           CALLA   GET_AUD                 ;TURN INTO AUDIT COUNT!
         00008080 00000000! 
    1829 000080a0     4c23           MOVE    A1,A3                   ;PROTECT FOR A SECOND.
    1830                    
    1831 000080b0                    JSRP    NUMBER_WORK             ;GET THE NUMBER IN A3 UP THERE!
    1832                    
    1833 00008120     09e8  DAA_RET  MOVI    MESS_AUD_LINE,A8
         00008130 00004e00" 
    1834 00008150     0d5f           CALLA   LM_SETUP        ;SETUP FOR AUDIT PRINTING.
         00008160 00000000! 
    1835                    
    1836 00008180     b7a3           MOVE    *A13(AT_PTR),A3,L   ;GET AUDIT POINTER
         00008190     0060  
    1837 000081a0     b668           MOVE    *A3(AUD_MESS),A8,L  ;GET TEXT POINTER
         000081b0     0000  
    1838                    
    1839 000081c0                    JSRP    LEFT_FINISH
    1840 00008230                    RETP                        ;THAT'S ALL WE DO!
    1841                    
    1842                    *
    1843                    *        LEFT_FINISH   AND    RIGHT_FINISH
    1844                    *
    1845                    *        THESE ARE CALLED TO PUT AUDIT INFO
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   42

    1846                    *        ON THE LEFT OR RIGHT SIDE ONCE A8 POINTS AT
    1847                    *        THE CORRECT DATA TO PRINT
    1848                    *
    1849 00008260           LEFT_FINISH
    1850 00008260     0d3f           CALLR   TURN_RED_IF_NEC
         00008270     0036  
    1851 00008280     0d3f           CALLR   SET_FOR_Y       ;SET FOR AUDIT'S Y
         00008290     0040  
    1852 000082a0     0d3f           CALLR   SET_LEFT_X      ;SET FOR LEFT X
         000082b0     0047  
    1853 000082c0                    JSRP    LM_FINIS            ;AND TYPE UP THE MESSAGE!
    1854 00008330                    RETP
    1855                    
    1856 00008360           RIGHT_FINISH
    1857 00008360     0d3f           CALLR   TURN_RED_IF_NEC         ;CHANGE COLOR IF CORRUPTED.
         00008370     0026  
    1858 00008380     0d3f           CALLR   SET_FOR_Y               ;SET FOR AUDIT'S Y
         00008390     0030  
    1859 000083a0     0d3f           CALLR   SET_RIGHT_X
         000083b0     003f  
    1860 000083c0                    JSRP    LM_FINIS               ;FINISH THE JOB!
    1861                    
    1862 00008430     05a0           MOVE    @BAD_AUD,A0,W          ;IS IT CORRUPTED?
         00008440 00000000! 
    1863 00008460     ca14           JRZ     RFX                    ;NOPE....RETURN
    1864                    
    1865 00008470     09e8           MOVI    MESS_ERROR,A8
         00008480 00004c80" 
    1866 000084a0     0d5f           CALLA   LM_SETUP               ;SETUP "ERROR"
         000084b0 00000000! 
    1867                    
    1868 000084d0     0d3f           CALLR   SET_FOR_Y              ;SET FOR AUDIT'S Y
         000084e0     001b  
    1869 000084f0     0b29           ADDI    40000H,A9              ;PUSH 4 Y UNITS TO CENTER 
         00008500 00040000  
    1870 00008520     0d3f           CALLR   SET_RIGHT_X
         00008530     0027  
    1871 00008540                    JSRP    LM_FINIS               ;FINISH THE JOB!
    1872                    
    1873 000085b0           RFX      RETP
    1874                    
    1875 000085e0           TURN_RED_IF_NEC
    1876 000085e0     098f           MMTM    SP,A3
         000085f0     1000  
    1877 00008600     05a3           MOVE    @BAD_AUD,A3,W   ;CHANGE TO RED?
         00008610 00000000! 
    1878 00008630     ca03           JRZ     DAA_1           ;NOPE...ITS OK!
    1879                    
    1880 00008640     09e6           MOVI    NARCS_RED,A6    ;CHANGE COLOR TO RED
         00008650 0000f9f9  
    1881                                                  
    1882 00008670     09af  DAA_1   MMFM    SP,A3
         00008680     0008  
    1883 00008690     0960          RETS
    1884                                                  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   43

    1885 000086a0           SET_FOR_Y
    1886 000086a0     098f           MMTM    SP,A3
         000086b0     1000  
    1887 000086c0     b5a3           MOVE    *A13(AT_Y),A3,W   ;GET Y COORDINATE
         000086d0     0080  
    1888 000086e0     2603           SLL     16,A3             ;PUT IT IN POSITION
    1889 000086f0     ee69           MOVY    A3,A9             ;PUT IT IN PLACE
    1890 00008700     09af          MMFM    SP,A3
         00008710     0008  
    1891 00008720     0960          RETS
    1892                    
    1893 00008730           SET_LEFT_X
    1894 00008730     098f           MMTM    SP,A3
         00008740     1000  
    1895 00008750     b5a3           MOVE    *A13(AT_LX),A3,W
         00008760     00a0  
    1896 00008770     ec69           MOVX    A3,A9             ;PUT THE X IN PLACE
    1897 00008780     09af          MMFM    SP,A3
         00008790     0008  
    1898 000087a0     0960          RETS
    1899                    
    1900 000087b0           SET_RIGHT_X
    1901 000087b0     098f           MMTM    SP,A3
         000087c0     1000  
    1902 000087d0     b5a3           MOVE    *A13(AT_RX),A3,W
         000087e0     00b0  
    1903 000087f0     ec69           MOVX    A3,A9             ;PUT THE X IN PLACE
    1904 00008800     09af          MMFM    SP,A3
         00008810     0008  
    1905 00008820     0960          RETS
    1906                    
    1907                    **************************************************************************
    1908                    *                                                                        *
    1909                    *          NUMBER_WORK                                                   *
    1910                    *                                                                        *
    1911                    *          A3 HAS THE NUMBER TO DISPLAY.....DO IT!                       *
    1912                    *                                                                        *
    1913                    **************************************************************************
    1914 00008830           NUMBER_WORK
    1915 00008830     09e8           MOVI    MESS_AUD_NUM,A8         ;SETUP FOR AUDIT NUMBER
         00008840 00004d60" 
    1916 00008860     0d5f           CALLA   LM_SETUP
         00008870 00000000! 
    1917                    
    1918 00008890     4c68           MOVE    A3,A8                   ;NOW WE HAVE BINARY NUMBER
    1919 000088a0     0d5f           CALLA   HEXTOASC                ;NOW WE POINT TO THE STRING.
         000088b0 00000000! 
    1920                    
    1921 000088d0                    JSRP    RIGHT_FINISH
    1922                    
    1923 00008940                    RETP
    1924                    
    1925                    **************************************************************************
    1926                    *                                                                        *
    1927                    *          GET_STARTS                                                    *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   44

    1928                    *                                                                        *
    1929                    *          TOTAL GAME STARTS IN A2.                                      *
    1930                    *                                                                        *
    1931                    **************************************************************************
    1932 00008970           GET_STARTS
    1933 00008970     098f           MMTM    SP,A0,A1
         00008980     c000  
    1934 00008990     09c0           MOVI    AUD1STRT,A0
         000089a0     000e  
    1935 000089b0     0d5f           CALLA   GET_AUD
         000089c0 00000000! 
    1936 000089e0     4c22           MOVE    A1,A2
    1937                    
    1938 000089f0     09c0           MOVI    AUD2STRT,A0
         00008a00     000f  
    1939 00008a10     0d5f           CALLA   GET_AUD
         00008a20 00000000! 
    1940 00008a40     4022           ADD     A1,A2
    1941 00008a50     09af          MMFM    SP,A0,A1
         00008a60     0003  
    1942 00008a70     0960          RETS
    1943                    
    1944                    **************************************************************************
    1945                    *                                                                        *
    1946                    *          GET_CONTS                                                     *
    1947                    *                                                                        *
    1948                    *          TOTAL GAME CONTINUES IN A2.                                   *
    1949                    *                                                                        *
    1950                    **************************************************************************
    1951 00008a80           GET_CONTS
    1952 00008a80     098f           MMTM    SP,A0,A1
         00008a90     c000  
    1953 00008aa0     09c0           MOVI    AUD1CONT,A0
         00008ab0     0010  
    1954 00008ac0     0d5f           CALLA   GET_AUD
         00008ad0 00000000! 
    1955 00008af0     4c22           MOVE    A1,A2
    1956                    
    1957 00008b00     09c0           MOVI    AUD2CONT,A0
         00008b10     0011  
    1958 00008b20     0d5f           CALLA   GET_AUD
         00008b30 00000000! 
    1959 00008b50     4022           ADD     A1,A2
    1960 00008b60     09af          MMFM    SP,A0,A1
         00008b70     0003  
    1961 00008b80     0960          RETS
    1962                    
    1963                    
    1964                    **************************************************************************
    1965                    *                                                                        *
    1966                    *          GET_PLAYS                                                     *
    1967                    *                                                                        *
    1968                    *          RETURN TOTAL PLAYS (STARTS + CONTINUES) IN A2                 *
    1969                    *                                                                        *
    1970                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   45

    1971 00008b90           GET_PLAYS
    1972 00008b90     098f           MMTM    SP,A0
         00008ba0     8000  
    1973 00008bb0     0d3f           CALLR   GET_STARTS
         00008bc0     ffda  
    1974 00008bd0     4c40           MOVE    A2,A0
    1975 00008be0     0d3f           CALLR   GET_CONTS
         00008bf0     ffe8  
    1976 00008c00     4002           ADD     A0,A2
    1977 00008c10     09af          MMFM    SP,A0
         00008c20     0001  
    1978 00008c30     0960          RETS
    1979                    
    1980                    **************************************************************************
    1981                    *                                                                        *
    1982                    *          PRINT_MONEY                                                   *
    1983                    *                                                                        *
    1984                    *          THIS IS CALLED TO PRINT OUT THE "MONEY" ON THE MONEY          *
    1985                    *          LINE OF THE AUDIT TABLE.                                      *
    1986                    *                                                                        *
    1987                    *          AUDIT X AND Y IS SET FOR THE LINE TO DISPLAY IT ON.           *
    1988                    *                                                                        *
    1989                    *          A8 HAS THE 1ST OF 3 AUDITS TO USE FOR THE CALCULATION         *
    1990                    *          A9 HAS THE MESSAGE TO LEFT JUSTIFY ON THE CURRENT LINE        *
    1991                    *                                                                        *
    1992                    **************************************************************************
    1993 00008c40           PRINT_COL
    1994 00008c40     09e9           MOVI    T_MONEY,A9           ;THIS ENTRYPOINT IS FOR COLLECTION MESSAGE
         00008c50 00005ed0" 
    1995                    
    1996 00008c70           PRINT_MONEY    
    1997 00008c70     b32d           MOVE    A9,*A13(AT_MESS),L   ;HOLD MESSAGE FOR WHEN WE NEED IT!
         00008c80     00e0  
    1998 00008c90     09c0           MOVI    ADJCDIV,A0           ;IF DIVISOR IS ZERO..THEN ITS OFF!
         00008ca0     0008  
    1999 00008cb0     0d5f           CALLA   GET_ADJ
         00008cc0 00000000! 
    2000 00008ce0     ca5e           JRZ     NO_MONEY             ;THAT'S ALL FOLKS!
    2001                    
    2002 00008cf0     0d3f           CALLR   BEGIN_AUDIT          ;KEEP TRACK OF SANITY OF CALC.
         00008d00     ff1f  
    2003                    *
    2004                    *        ROUTINE IN A2 FORMS STRING BASED ON 3 AUDITS STARTING
    2005                    *        WITH THE NUMBER IN A8.
    2006                    *
    2007 00008d10     0d3f           CALLR   STR_OBJ              ;GET AN OBJECT FOR STRINGING
         00008d20     005d  
    2008 00008d30     c859           JRC     NO_MONEY             ;COULDN'T GET AN OBJECT!
    2009                    
    2010 00008d40     0d3f           CALLR   SUM_COINS            ;ADD UP THE COIN PARTS IN A2
         00008d50     0091  
    2011                    
    2012                    *
    2013                    *        WE'RE DOING A PREFIX STRING...NO PREFIX IF ITS BEEN TAMPERED
    2014                    *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   46

    2015 00008d60     0d3f           CALLR   SIXP                 ;HAVE THE 6 BEEN TAMPERED 
         00008d70     00ae  
    2016 00008d80     ca07           JRZ     NO_PREFIX
    2017 00008d90     0d3f           CALLR   GET_CSPT             ;A6 POINTS AT CSECECT DATA.
         00008da0     f725  
    2018 00008db0     b6c8           MOVE    *A6(CS_LMES),A8,L    ;LEFT STRING FOR MONEY TOTAL
         00008dc0     00b0  
    2019 00008dd0     0d5f           CALLA   STRCAT               ;SHOVE THE STRING IN!
         00008de0 00000000! 
    2020                    
    2021 00008e00           NO_PREFIX
    2022 00008e00     1820           MOVK    1,A0                 ;DIVIDE COINS BY 1 IF ITS BEEN TAMPERED WITH
    2023 00008e10     0d3f           CALLR   SIXP
         00008e20     00a3  
    2024 00008e30     ca05           JRZ     DIV_BY_1             ;TAMPERED WITH...DIVIDE BY 1 FOR "COINS"
    2025                    
    2026 00008e40     09c0           MOVI    ADJCDIV,A0           ;GET THE COIN PARTS PLEASE
         00008e50     0008  
    2027 00008e60     0d5f           CALLA   GET_ADJ
         00008e70 00000000! 
    2028                    *
    2029                    *        GET QUOTIENT IN A2
    2030                    *        REMAINDER IN A3
    2031                    *
    2032 00008e90           DIV_BY_1
    2033 00008e90     4c43           MOVE    A2,A3                ;SETUP <A2><A3> AS DIVIDEND
    2034 00008ea0     5642           CLR     A2
    2035 00008eb0     5a02           DIVU    A0,A2                ;DIVIDE UNITS/DIVISOR
    2036                    
    2037 00008ec0     4c48           MOVE    A2,A8                ;WE NEED TO PUT QUOTIENT IN STRING
    2038 00008ed0     0d5f           CALLA   HEXTOASC             ;THIS FORMS STRING FOR QUOTIENT
         00008ee0 00000000! 
    2039                    
    2040 00008f00     0d5f           CALLA   STRCAT               ;ADD QUOTIENT TO PRINTOUT
         00008f10 00000000! 
    2041                    
    2042 00008f30     0b40           CMPI    1,A0                 ;IS DIVISOR ONE??????
         00008f40     fffe  
    2043 00008f50     ca0e           JRZ     NOFRAC               ;YEP.......NO DECIMAL!
    2044                    *
    2045                    *        WE HAVE A DIVISOR.....WE NEED TO DISPLAY CENTS.
    2046                    *
    2047 00008f60     09e8           MOVI    ME_DECIMAL,A8        ;ADD DECIMAL POINT
         00008f70 00006750" 
    2048 00008f90     0d5f           CALLA   STRCAT               ;ITS THERE!
         00008fa0 00000000! 
    2049                    *
    2050                    *        REMAINDER IS IN A3....TURN IT TO 100THS.
    2051                    *
    2052 00008fc0     09c2           MOVI    100,A2
         00008fd0     0064  
    2053 00008fe0     5e43           MPYU    A2,A3                ;REMAINDER TIMES 100
    2054 00008ff0     4c62           MOVE    A3,A2                ;DIVIDEND IN A2
    2055                    
    2056 00009000     0d3f           CALLR   ROUNDED_A0_INTO_A2
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   47

         00009010     0040  
    2057 00009020     0d3f           CALLR   A2_100TH             ;CAT THE 100THS IN A2 TO THE A7 STRING.
         00009030     004e  
    2058                    
    2059 00009040     09e8  NOFRAC   MOVI    COINS_TRAIL,A8           ;ASSUME IT WILL BE "COINS"
         00009050 000069a0" 
    2060 00009070     0d3f           CALLR   SIXP                 ;TAMPERED?
         00009080     007d  
    2061 00009090     ca02           JRZ     COIN_SUF             ;YEP....USE " COINS"
    2062                    
    2063 000090a0     b6c8           MOVE    *A6(CS_RMES),A8,L    ;FINISH IT OFF WITH RIGHT STRING
         000090b0     00d0  
    2064 000090c0     0d5f  COIN_SUF CALLA   STRCAT               ;SHOVE THE STRING IN!
         000090d0 00000000! 
    2065                    
    2066 000090f0     09e8           MOVI    M_MONEY,A8                ;MESSAGE FOR THIS LINE PASSED IN A9
         00009100 00005e30" 
    2067 00009120     0d5f           CALLA   LM_SETUP
         00009130 00000000! 
    2068                    
    2069 00009150     07a8           MOVE    @TMPOBJ,A8,L         ;POINTER TO MONEY STRING
         00009160 00000030- 
    2070 00009180                    JSRP    RIGHT_FINISH            ;PUT ON RIGHT MARGIN
    2071                    
    2072 000091f0     0d3f           CALLR   STR_FREE
         00009200     00ec  
    2073                    
    2074 00009210     b7a8           MOVE    *A13(AT_MESS),A8,L      ;SETUP PASSED MESSAGE
         00009220     00e0  
    2075 00009230     0d5f           CALLA   LM_SETUP
         00009240 00000000! 
    2076 00009260                    JSRP    LEFT_FINISH             ;PUT UP PASSED MESSAGE.
    2077 000092d0           NO_MONEY
    2078 000092d0                    RETP
    2079                    
    2080                    **************************************************************************
    2081                    *                                                                        *
    2082                    *          STR_OBJ                                                       *
    2083                    *                                                                        *
    2084                    *          THIS IS CALLED TO GET AN OBJECT FOR                           *
    2085                    *          CONCATONATING STRINGS TOGETHER.                               *
    2086                    *                                                                        *
    2087                    *          A7 POINTS AT NULL STRING                                      *
    2088                    *                                                                        *
    2089                    *          NOTE THAT THIS IS NO LONGER RE-ENTRANT!                       *
    2090                    *                                                                        *
    2091                    *          YOU MUST CALL STR_FREE BEFORE SLEEPING!                       *
    2092                    *                                                                        *
    2093                    **************************************************************************
    2094 00009300           STR_OBJ
    2095 00009300     098f           MMTM    SP,A0
         00009310     8000  
    2096 00009320     0d5f           CALLA   GETOBJ               ;USE AN OBJECT BLOCK FOR STRING MANIPULATION
         00009330 00000000! 
    2097 00009350     cb02           JRNZ    STR_O1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   48

    2098                    *
    2099                    *        NO OBJECTS DURING TEST MODE
    2100                    *
    2101 00009360     0de0           SETC    
    2102 00009370     c007           JRUC    STR_OFAIL
    2103                    
    2104 00009380     0780  STR_O1   MOVE    A0,@TMPOBJ,L         ;SAVE TO FREE LATER
         00009390 00000030- 
    2105 000093b0     4c07           MOVE    A0,A7                ;THIS IS WHERE IT BELONGS.
    2106 000093c0     5600           CLR     A0
    2107 000093d0     8c07           MOVB    A0,*A7               ;MAKE STRING NULL
    2108 000093e0     0320           CLRC                         ;RETURN SUCCESS
    2109 000093f0           STR_OFAIL
    2110 000093f0     09af          MMFM    SP,A0
         00009400     0001  
    2111 00009410     0960          RETS
    2112                    
    2113                    **************************************************************************
    2114                    *                                                                        *
    2115                    *          ROUNDED_A0_INTO_A2                                            *
    2116                    *                                                                        *
    2117                    *          THIS DIVIDES A0 INTO A2.  IT LEAVES THE RESULT IN A2          *
    2118                    *          AND ROUNDS UP IF NECESSARY.                                   *
    2119                    *                                                                        *
    2120                    **************************************************************************
    2121 00009420           ROUNDED_A0_INTO_A2
    2122 00009420     098f           MMTM    SP,A3
         00009430     1000  
    2123 00009440     4c00           MOVE    A0,A0                ;DIVIDE BY ZERO?
    2124 00009450     cb02           JRNZ    NDZ
    2125 00009460     4c02           MOVE    A0,A2                ;RETURN ZERO
    2126 00009470     c007           JRUC    NOROUND
    2127 00009480     4c43  NDZ      MOVE    A2,A3
    2128 00009490     5642           CLR     A2                   ;<A2> <A3> AS DIVIDEND
    2129 000094a0     5a02           DIVU    A0,A2                ;DIVIDE AND A2 = PENNIES....A3 = REMAINDER
    2130 000094b0     2423           SLL     1,A3                 ;SHIFT REMAINDER
    2131 000094c0     4803           CMP     A0,A3                ;COMPARE TO DIVISOR
    2132 000094d0     c801           JRLO    NOROUND              ;TOO LOW TO ROUND UP
    2133 000094e0     1022           INC     A2                   ;A2 HAS CORRECT PENNIES
    2134 000094f0     09af  NOROUND         MMFM    SP,A3
         00009500     0008  
    2135 00009510     0960          RETS
    2136                    
    2137                    **************************************************************************
    2138                    *                                                                        *
    2139                    *          A2_100TH                                                      *
    2140                    *                                                                        *
    2141                    *          A7 HAS A STRING TO BE PRINTED.  WE HAVE THE                   *
    2142                    *          LAST TWO NUMBERS (NOT TO BE LEAD ZERO BLANKED) IN             *
    2143                    *          A2.  CONCATONATE THEM ONTO THE A7 STRING.                     *
    2144                    *                                                                        *
    2145                    *          THIS IS USED FOR PENNIES, HOURS AND MINUTES.                  *
    2146                    *                                                                        *
    2147                    **************************************************************************
    2148 00009520           A2_100TH
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   49

    2149 00009520     098f           MMTM    SP,A8
         00009530     0080  
    2150 00009540     0b42           CMPI    9,A2                 ;9 OR LESS REQUIES LEAD ZERO.
         00009550     fff6  
    2151 00009560     c306           JRHI    NOLEAD
    2152                    
    2153 00009570     09e8           MOVI    ME_ZERO,A8           ;THROW IN THE LEAD ZERO
         00009580 00006740" 
    2154 000095a0     0d5f           CALLA   STRCAT               ;THIS DOES IT!
         000095b0 00000000! 
    2155                    
    2156 000095d0     4c48  NOLEAD   MOVE    A2,A8
    2157 000095e0     0d5f           CALLA   HEXTOASC             ;MAKE STRING
         000095f0 00000000! 
    2158 00009610     0d5f           CALLA   STRCAT               ;PUT IT IN!
         00009620 00000000! 
    2159 00009640     09af          MMFM    SP,A8
         00009650     0100  
    2160 00009660     0960          RETS
    2161                    
    2162                    **************************************************************************
    2163                    *                                                                        *
    2164                    *          SUM_COINS                                                     *
    2165                    *                                                                        *
    2166                    *          A8 HAS FIRST OF THE 3 AUDIT NUMBERS OF INTEREST               *
    2167                    *                                                                        *
    2168                    *          RETURN COINS TIMES THEIR FACTORS IN A2.                       *
    2169                    *                                                                        *
    2170                    **************************************************************************
    2171 00009670           SUM_COINS            
    2172 00009670     098f           MMTM    SP,A0,A1,A3,A6,A4
         00009680     da00  
    2173                    
    2174 00009690     4d00           MOVE    A8,A0                     ;POINT AT AUDIT NUMBER
    2175 000096a0     5642           CLR     A2                        ;SUM = ZERO
    2176                    
    2177 000096b0     0d3f           CALLR   GET_CSPT                  ;A6 POINTS AT CSELECT TABLE
         000096c0     f693  
    2178 000096d0     0b06           ADDI    CS_LVAL,A6                ;POINT AT 1ST MULTIPLIER
         000096e0     0080  
    2179                    
    2180 000096f0     09c4           MOVI    CHUTES,A4                 ;NOW...ITERATE OVER THE CHUTES
         00009700     0003  
    2181                    
    2182 00009710           NEXT_CHUTE
    2183 00009710     94c3           MOVE    *A6+,A3,W                 ;GET MULTPLIER FOR THIS CHUTE
    2184 00009720     0d3f           CALLR   FIX_A3                    ;REPLACE A3 WITH 1 (MULTIPLIER) IF 
         00009730     000d  
    2185                    *                                          ;ITS SOME CUSTOM MODE.
    2186 00009740     0d3f           CALLR   ADD_AUD_A0_TIMES_A3_TO_A2 
         00009750     0005  
    2187 00009760     1020           INC     A0                        ;NEXT AUDIT
    2188 00009770     3ce4           DSJS    A4,NEXT_CHUTE
    2189                    
    2190 00009780     09af          MMFM    SP,A0,A1,A3,A6,A4
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   50

         00009790     005b  
    2191 000097a0     0960          RETS
    2192                    
    2193 000097b0           ADD_AUD_A0_TIMES_A3_TO_A2
    2194 000097b0     0d5f           CALLA   GET_AUD                   ;FETCH THE AUDIT
         000097c0 00000000! 
    2195 000097e0     5e23           MPYU    A1,A3                     ;TIME THE FACTOR
    2196 000097f0     4062           ADD     A3,A2
    2197 00009800     0960           RETS
    2198                    
    2199                    **************************************************************************
    2200                    *                                                                        *
    2201                    *          FIX_A3                                                        *
    2202                    *                                                                        *
    2203                    *          THIS IS CALLED BY THE LOW LEVEL MONEY TOTALIZER.              *
    2204                    *          THE MULTIPLIER FOR THE COIN SLOT THAT ITS WORKING             *
    2205                    *          ON IS IN A3.  WE REPLACE IT WITH "1" TO SUM "TOTAL COINS"     *
    2206                    *          IF ITS IN A NON-STANDARD COIN MODE.                           *
    2207                    *                                                                        *
    2208                    **************************************************************************
    2209 00009810     0d3f  FIX_A3   CALLR   SIXP                 ;HAS IT BEEN TAMPERED WITH?
         00009820     0003  
    2210 00009830     cb01           JRNZ    FIX_A3X              ;NOPE...LEAVE A3
    2211                    
    2212 00009840     1823           MOVK    1,A3
    2213 00009850     0960  FIX_A3X RETS
    2214                    
    2215                    **************************************************************************
    2216                    *                                                                        *
    2217                    *          SIXP                                                          *
    2218                    *                                                                        *
    2219                    *          THIS IS CALLED TO SEE IF THE 1ST 6 COIN PARAMETERS HAVE       *
    2220                    *          BEEN TAMPERED WITH.                                           *
    2221                    *                                                                        *
    2222                    *          .EQ.            YES                                           *
    2223                    *          .NE.            NO                                            *
    2224                    *                                                                        *
    2225                    **************************************************************************
    2226 00009860     098f  SIXP     MMTM    SP,A0
         00009870     8000  
    2227 00009880     09c0           MOVI    ADJ1ST6,A0
         00009890     0017  
    2228 000098a0     0d5f           CALLA   GET_ADJ              ;HAS IT BEEN TAMPERED WITH?
         000098b0 00000000! 
    2229 000098d0     09af          MMFM    SP,A0
         000098e0     0001  
    2230 000098f0     0960          RETS
    2231                    
    2232 00009900     0d3f  STARTS   CALLR   GET_STARTS
         00009910     ff05  
    2233 00009920     4c43           MOVE    A2,A3           ;GET IN PRINTOUT REG.
    2234 00009930     c080           JAUC    NUMBER_WORK     ;AND PRINT IT
         00009940 00008830' 
    2235                    
    2236 00009960     0d3f  CONTINS  CALLR   GET_CONTS
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   51

         00009970     ff10  
    2237 00009980     4c43           MOVE    A2,A3           ;GET IN PRINTOUT REG.
    2238 00009990     c080           JAUC    NUMBER_WORK     ;AND PRINT IT
         000099a0 00008830' 
    2239                    
    2240 000099c0     0d3f  DOPLAYS  CALLR   GET_PLAYS
         000099d0     ff1b  
    2241 000099e0     4c43           MOVE    A2,A3           ;PUT IN PLACE
    2242 000099f0     c080           JAUC    NUMBER_WORK
         00009a00 00008830' 
    2243                    
    2244 00009a20           DOHSLEFT
    2245 00009a20     09c0           MOVI    ADJHSRES,A0
         00009a30     000d  
    2246 00009a40     0d5f           CALLA   GET_ADJ         ;IS IF OFF?
         00009a50 00000000! 
    2247 00009a70     ca07           JRZ     DOHSOFF         ;YEP...PRINT IT
    2248                    
    2249 00009a80     0d5f           CALLA   GET_HSC         ;GET THE COUNTER VALUE
         00009a90 00000000! 
    2250 00009ab0     4c03           MOVE    A0,A3
    2251 00009ac0     c080           JAUC    NUMBER_WORK     ;AND SHOW IT!
         00009ad0 00008830' 
    2252                    
    2253 00009af0     09e8  DOHSOFF  MOVI    MESS_AUD_NUM,A8
         00009b00 00004d60" 
    2254 00009b20     0d5f           CALLA   LM_SETUP        ;SETUP FOR AUDIT PRINTING.
         00009b30 00000000! 
    2255                    
    2256 00009b50     09e8           MOVI    M_HSOFF,A8     ;THIS EFFECTIVELY ERASES LINE!
         00009b60 000053b0" 
    2257 00009b80     c080           JAUC    RIGHT_FINISH
         00009b90 00008360' 
    2258                    
    2259 00009bb0     09c0  DO_P1MIN MOVI    AUD1TIME,A0
         00009bc0     0012  
    2260 00009bd0     0d5f  P1MJ     CALLA   GET_AUD         ;TURN INTO NUMBER
         00009be0 00000000! 
    2261 00009c00     4c24           MOVE    A1,A4           ;MOVE NUMBER TO "HOUR" COMPUTATION REGGIE
    2262 00009c10     c005           JRUC    DH11            ;AND DO LIKE THE HOURS!
    2263                    
    2264                    **************************************************************************
    2265                    *                                                                        *
    2266                    *          MOVI    5,A0                                                  *
    2267                    *          MPYU    A0,A1           ;A1 = NUMBER OF SECONDS.              *
    2268                    *          JAUC    P_TIME          ;PRINT OUT A TIME WITH THE COLON      *
    2269                    *                                                                        *
    2270                    **************************************************************************
    2271                    
    2272 00009c20     09c0  DO_P2MIN MOVI    AUD2TIME,A0
         00009c30     0013  
    2273 00009c40     c0f8           JRUC    P1MJ
    2274                    
    2275 00009c50     0d3f  DO_HOURS CALLR   TOT_TIME        ;READ OUT THE TOTAL TIME.
         00009c60     004f  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   52

    2276 00009c70     4c85  DH11     MOVE    A4,A5           ;A5 HAS RUNNING PLAY TIME
    2277 00009c80     5684           CLR     A4              ;<A4><A5> READY FOR DIVISION
    2278 00009c90     09c0           MOVI    12,A0
         00009ca0     000c  
    2279 00009cb0     5a04           DIVU    A0,A4           ;A4 HAS MINUTES
    2280 00009cc0     0b45           CMPI    6,A5            ;ROUND PROPERLY
         00009cd0     fff9  
    2281 00009ce0     c801           JRLO    DH1             ;NOT ENOUGH
    2282 00009cf0     1024           INC     A4
    2283 00009d00     4c81  DH1      MOVE    A4,A1           ;NOW THIS DIVIDED BY 60 IS WHAT WE NEED
    2284 00009d10     c080           JAUC    P_TIME          ;DO IT!
         00009d20 00009e70' 
    2285                    
    2286 00009d40     0d3f  DO_AVGT  CALLR   TOT_TIME        ;A3 HAS WEIGHTED TIME
         00009d50     0040  
    2287                    
    2288 00009d60     0d3f  DOAVC    CALLR   GET_PLAYS       ;GET TOTAL PLAYS IN A2
         00009d70     fee1  
    2289 00009d80     4c40           MOVE    A2,A0           ;STASH IN A0.
    2290 00009d90     09c1           MOVI    5,A1            ;TURN INTO SECONDS
         00009da0     0005  
    2291 00009db0     5e23           MPYU    A1,A3           ;A3 HAS SECONDS OF INTEREST
    2292 00009dc0     4c62           MOVE    A3,A2
    2293 00009dd0     0d3f           CALLR   ROUNDED_A0_INTO_A2   ;DIVIDE A2 BY PLAYS (AND ROUND)
         00009de0     ff63  
    2294 00009df0     4c41           MOVE    A2,A1           ;NOW GET IN PLACE FOR P_TIME
    2295 00009e00     c080           JAUC    P_TIME          ;DO IT!
         00009e10 00009e70' 
    2296                    
    2297 00009e30           DO_ELAPSE
    2298 00009e30     0d3f           CALLR   TOT_TIME
         00009e40     0031  
    2299 00009e50     4c83           MOVE    A4,A3           ;USE ELAPSED TIME
    2300 00009e60     c0ef           JRUC    DOAVC           ;AND THE REST IS IDENTICAL.
    2301                    
    2302                    
    2303                    **************************************************************************
    2304                    *                                                                        *
    2305                    *          P_TIME                                                        *
    2306                    *                                                                        *
    2307                    *          THIS IS CALLED TO DISPLAY AN AUDIT IN TIME (0:00)             *
    2308                    *          FORMAT.  THE NUMBER TO BE USED IS PASSED IN A1.               *
    2309                    *                                                                        *
    2310                    **************************************************************************
    2311 00009e70     0d3f  P_TIME   CALLR   STR_OBJ              ;USE AN OBJECT BLOCK FOR STRING MANIPULATION
         00009e80     ff47  
    2312 00009e90     c820           JRC     NO_OBJS              ;NO OBJECTS....PRINT NOTHING
    2313                    
    2314 00009ea0     5600           CLR     A0              ;DIVIDEND IN <A0><A1>
    2315 00009eb0     09c2           MOVI    60,A2
         00009ec0     003c  
    2316 00009ed0     5a40           DIVU    A2,A0           ;A0 = "MINUTES"....A1 = "SECONDS
    2317                    
    2318 00009ee0     0d5f           CALLA   CAT_A0          ;ADD A0 STRING TO A7 BUILD
         00009ef0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   53

    2319 00009f10     09e8           MOVI    ME_COLON,A8
         00009f20 00006760" 
    2320 00009f40     0d5f           CALLA   STRCAT          ;PUT THE COLON IN.
         00009f50 00000000! 
    2321                    
    2322 00009f70     4c22           MOVE    A1,A2           ;GET "SECONDS" IN A2
    2323 00009f80     0d3f           CALLR   A2_100TH        ;AND GET THE 100THS IN.
         00009f90     ff58  
    2324                    
    2325 00009fa0     09e8           MOVI    MESS_AUD_NUM,A8      ;SETUP FOR AUDIT NUMBER
         00009fb0 00004d60" 
    2326 00009fd0     0d5f           CALLA   LM_SETUP
         00009fe0 00000000! 
    2327                    
    2328 0000a000     4ce8           MOVE    A7,A8           ;PUT STRING CORRECT REGGIE
    2329 0000a010                    JSRP    RIGHT_FINISH    ;PRINT THE LINE
    2330                    
    2331 0000a080     0d3f           CALLR   STR_FREE        ;FREE UP THE OBJECT!
         0000a090     0003  
    2332                    
    2333 0000a0a0           NO_OBJS
    2334 0000a0a0                    RETP                         ;NOW RETURN TO CALLER
    2335                    
    2336 0000a0d0           STR_FREE
    2337 0000a0d0     07a0           MOVE    @TMPOBJ,A0,L       ;GET OBJECT BACK
         0000a0e0 00000030- 
    2338                    
    2339 0000a100     cb01           JRNZ    FREE_IT_NOW
    2340                    
    2341                             .IF     DEBUG
    2342                             JRUC    $
    2343                             .ENDIF
    2344 0000a110     0960           RETS                         ;NO OBJECT...RETURN!
    2345                    
    2346 0000a120           FREE_IT_NOW
    2347 0000a120     0d5f           CALLA   FREEOBJ            ;AND LET IT GO.
         0000a130 00000000! 
    2348 0000a150     0960           RETS
    2349                    
    2350                    **************************************************************************
    2351                    *                                                                        *
    2352                    *         TOT_TIME                                                       *
    2353                    *                                                                        *
    2354                    *          (1 * P1TIME) + (2 * P2TIME) IN A3                             *
    2355                    *          ELAPSED TIME IN A4                                            *
    2356                    *                                                                        *
    2357                    **************************************************************************
    2358 0000a160           TOT_TIME
    2359 0000a160     098f           MMTM    SP,A0,A1
         0000a170     c000  
    2360 0000a180     09c0           MOVI    AUD1TIME,A0
         0000a190     0012  
    2361 0000a1a0     0d5f           CALLA   GET_AUD
         0000a1b0 00000000! 
    2362 0000a1d0     4c23           MOVE    A1,A3
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   54

    2363 0000a1e0     4c24           MOVE    A1,A4
    2364 0000a1f0     09c0           MOVI    AUD2TIME,A0
         0000a200     0013  
    2365 0000a210     0d5f           CALLA   GET_AUD
         0000a220 00000000! 
    2366 0000a240     4024           ADD     A1,A4                ;A4 HAS SIMPLE SUM NOW
    2367 0000a250     2421           SLL     1,A1                 ;DOUBLE THE PLAYER 2 TIME
    2368 0000a260     4023           ADD     A1,A3
    2369 0000a270     09af          MMFM    SP,A0,A1
         0000a280     0003  
    2370 0000a290     0960          RETS
    2371                    
    2372                    **** DATA SECTION BEGINS ****
    2373                    
    2374 00000000                   .data
    2375                    
    2376 00000000           CSELCT  
    2377                    *
    2378                    *        USA 1    25 CENTS PER CREDIT 
    2379                    *
    2380 00000000     0001           .WORD   1,0,1,1,0,0                    ;WILLY PRICING
    2381 00000060     0004           .WORD   4                              ;4 COINS PER DOLLAR (FOR CALC)
    2382 00000070     0001           .WORD   1                              ;DISPLAY COIN FRACTIONS
    2383 00000080     0001           .WORD   1,0,1                          ;COIN VALUE
    2384 000000b0 00006770"          .LONG   DOLLAR_LEAD,NULL_ST            ;CHARACTER STRINGS.
    2385 000000f0 00006f10"          .LONG   OCOP                           ;ONE COIN ONE PLAY
    2386 00000110 00007e20"          .LONG   USA_1                          ;TITLE OF COIN MODE
    2387 00000130 00008df0"          .LONG   Q_Q                            ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2388 00000150     0000           .WORD   SHOW_NONE                      ;NO PRICING LINE ON 2/1
    2389 00000160 0000c9d0"          .LONG   USA_QQ                         ;QUARTER
    2390                    *
    2391                    *        USA 2    50 PER CREDIT
    2392                    *
    2393 00000180     0001           .WORD   1,0,1,2,0,0                    ;WILLY PRICING
    2394 000001e0     0004           .WORD   4                              ;4 COINS PER DOLLAR (FOR CALC)
    2395 000001f0     0001           .WORD   1                              ;DISPLAY COIN FRACTIONS
    2396 00000200     0001           .WORD   1,0,1                          ;COIN VALUE
    2397 00000230 00006770"          .LONG   DOLLAR_LEAD,NULL_ST            ;CHARACTER STRINGS.
    2398 00000270 00006dd0"          .LONG   TWO_PER_PLAYER                 ;2 COINS PER PLAYER
    2399 00000290 00007e70"          .LONG   USA_2                          ;TITLE OF COIN MODE
    2400 000002b0 00008e30"          .LONG   C2_PERC                        ;2 COINS PER CREDIT (SERIES OF STRINGS)
    2401 000002d0     0002           .WORD   SHOW_1                         ;SHOW LINE 1
    2402 000002e0 0000c9d0"          .LONG   USA_QQ                         ;QUARTER
    2403                    *                                               
    2404                    *        USA 3    COINAGE IS 50 CENT   3/$1.00
    2405                    *
    2406 00000300     0001           .WORD   1,0,1,2,4,0                    ;WILLY PRICING
    2407 00000360     0004           .WORD   4                              ;4 COINS PER DOLLAR (FOR CALC)
    2408 00000370     0001           .WORD   1                              ;DISPLAY COIN FRACTIONS
    2409 00000380     0001           .WORD   1,0,1                          ;COIN VALUE
    2410 000003b0 00006770"          .LONG   DOLLAR_LEAD,NULL_ST            ;CHARACTER STRINGS.
    2411 000003f0 00000001           .LONG   CSM_LIST                       ;PRINT THE 2 THE OP SEES
    2412 00000410 00007ec0"          .LONG   USA_3                          ;TITLE OF COIN MODE
    2413 00000430 00008e70"          .LONG   DOLLAR_3                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2414 00000450     0003           .WORD   SHOW_2                         ;SHOW LINE 2
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   55

    2415 00000460 0000c9d0"          .LONG   USA_QQ                         ;QUARTER
    2416                    *                                               
    2417                    *        USA 4    COINAGE IS 50 CENT   4/$1.00
    2418                    *
    2419 00000480     0003           .WORD   3,0,3,4,12,6                  ;WILLY PRICING
    2420 000004e0     0004           .WORD   4                              ;4 COINS PER DOLLAR (FOR CALC)
    2421 000004f0     0000           .WORD   0                              ;NO COIN FRACTIONS
    2422 00000500     0001           .WORD   1,0,1                          ;COIN VALUE
    2423 00000530 00006770"          .LONG   DOLLAR_LEAD,NULL_ST            ;CHARACTER STRINGS.
    2424 00000570 00000001           .LONG   CSM_LIST                       ;PRINT THE 2 THE OP SEES
    2425 00000590 00007f10"          .LONG   USA_4                          ;TITLE OF COIN MODE
    2426 000005b0 00008ed0"          .LONG   DOLLAR_4                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2427 000005d0     0003           .WORD   SHOW_2                         ;SHOW LINE 2
    2428 000005e0 0000c9d0"          .LONG   USA_QQ                         ;QUARTER
    2429                    *
    2430                    *        USA 5    25 CENTS PER CREDIT 
    2431                    *
    2432 00000600     0001           .WORD   1,4,1,1,0,0                    ;WILLY PRICING
    2433 00000660     0004           .WORD   4                              ;4 COINS PER DOLLAR (FOR CALC)
    2434 00000670     0001           .WORD   1                              ;DISPLAY COIN FRACTIONS
    2435 00000680     0001           .WORD   1,4,1                          ;COIN VALUE
    2436 000006b0 00006770"          .LONG   DOLLAR_LEAD,NULL_ST            ;CHARACTER STRINGS.
    2437 000006f0 00000001           .LONG   CSM_LIST                       ;ONE COIN ONE PLAY
    2438 00000710 00007f60"          .LONG   USA_5                          ;TITLE OF COIN MODE
    2439 00000730 00008f30"          .LONG   U1Q4D                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2440 00000750     0003           .WORD   SHOW_2                         ;NO PRICING LINE ON 2/1
    2441 00000760 0000ca80"          .LONG   USA_QDQ                         ;QUARTER
    2442                    *
    2443                    *        USA 6    50 PER CREDIT
    2444                    *
    2445 00000780     0001           .WORD   1,4,1,2,0,0                    ;WILLY PRICING
    2446 000007e0     0004           .WORD   4                              ;4 COINS PER DOLLAR (FOR CALC)
    2447 000007f0     0001           .WORD   1                              ;DISPLAY COIN FRACTIONS
    2448 00000800     0001           .WORD   1,4,1                          ;COIN VALUE
    2449 00000830 00006770"          .LONG   DOLLAR_LEAD,NULL_ST            ;CHARACTER STRINGS.
    2450 00000870 00000001           .LONG   CSM_LIST                       ;2 COINS PER PLAYER
    2451 00000890 00007fb0"          .LONG   USA_6                          ;TITLE OF COIN MODE
    2452 000008b0 00008f90"          .LONG   UFS2D                          ;2 COINS PER CREDIT (SERIES OF STRINGS)
    2453 000008d0     0002           .WORD   SHOW_1                         ;SHOW LINE 1
    2454 000008e0 0000ca80"          .LONG   USA_QDQ                         ;QUARTER
    2455                    *                                               
    2456                    *        USA 7    COINAGE IS 50 CENT   3/$1.00
    2457                    *
    2458 00000900     0001           .WORD   1,4,1,2,4,0                    ;WILLY PRICING
    2459 00000960     0004           .WORD   4                              ;4 COINS PER DOLLAR (FOR CALC)
    2460 00000970     0001           .WORD   1                              ;DISPLAY COIN FRACTIONS
    2461 00000980     0001           .WORD   1,4,1                          ;COIN VALUE
    2462 000009b0 00006770"          .LONG   DOLLAR_LEAD,NULL_ST            ;CHARACTER STRINGS.
    2463 000009f0 00000001           .LONG   CSM_LIST                       ;PRINT THE 2 THE OP SEES
    2464 00000a10 00008000"          .LONG   USA_7                          ;TITLE OF COIN MODE
    2465 00000a30 00008ff0"          .LONG   UFS3D                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2466 00000a50     0003           .WORD   SHOW_2                         ;SHOW LINE 2
    2467 00000a60 0000ca80"          .LONG   USA_QDQ                         ;QUARTER
    2468                    *                                               
    2469                    *        USA 8    COINAGE IS 50 CENT   4/$1.00
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   56

    2470                    *
    2471 00000a80     0003           .WORD   3,12,3,4,12,6                  ;WILLY PRICING
    2472 00000ae0     0004           .WORD   4                              ;4 COINS PER DOLLAR (FOR CALC)
    2473 00000af0     0000           .WORD   0                              ;NO COIN FRACTIONS
    2474 00000b00     0001           .WORD   1,4,1                          ;COIN VALUE
    2475 00000b30 00006770"          .LONG   DOLLAR_LEAD,NULL_ST            ;CHARACTER STRINGS.
    2476 00000b70 00000001           .LONG   CSM_LIST                       ;PRINT THE 2 THE OP SEES
    2477 00000b90 00008050"          .LONG   USA_8                          ;TITLE OF COIN MODE
    2478 00000bb0 00009050"          .LONG   UFS4D                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2479 00000bd0     0003           .WORD   SHOW_2                         ;SHOW LINE 2
    2480 00000be0 0000ca80"          .LONG   USA_QDQ                         ;QUARTER
    2481                    *
    2482                    *        GERMAN 1    COINAGE IS 6 PLAYS FOR 5 DM
    2483                    *
    2484 00000c00     0006           .WORD   6,12,30,5,0,0                  ;WILLY PRICING
    2485 00000c60     0001           .WORD   1                              ;DMS HAVE NO FRACTIONS
    2486 00000c70     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2487 00000c80     0001           .WORD   1,2,5                          ;COIN VALUE
    2488 00000cb0 000067b0"          .LONG   NULL_ST,DM_TRAIL               ;CHARACTER STRINGS.
    2489 00000cf0 00000001           .LONG   CSM_LIST
    2490 00000d10 000080a0"          .LONG   GERMAN_1                       ;TITLE OF COIN MODE
    2491 00000d30 00009110"          .LONG   DM_6                           ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2492 00000d50     0003           .WORD   SHOW_2
    2493 00000d60 0000cb70"          .LONG   GERMAN_15                      ;1 DM / 5 DM
    2494                    
    2495              0009  G1SEL    EQU     ($-CSELCT)/CS_SIZE             ;COIN SELECT VALUE FOR GERMAN 1
    2496                    *
    2497                    *        GERMAN 2    COINAGE IS 7 PLAYS FOR 5 DM
    2498                    *
    2499 00000d80     0006           .WORD   6,12,30,5,30,0                 ;WILLY PRICING
    2500 00000de0     0001           .WORD   1                              ;DMS HAVE NO FRACTIONS
    2501 00000df0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2502 00000e00     0001           .WORD   1,2,5                          ;COIN VALUE
    2503 00000e30 000067b0"          .LONG   NULL_ST,DM_TRAIL               ;CHARACTER STRINGS.
    2504 00000e70 00000001           .LONG   CSM_LIST
    2505 00000e90 000080f0"          .LONG   GERMAN_2                       ;TITLE OF COIN MODE
    2506 00000eb0 00009170"          .LONG   DM_7                           ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2507 00000ed0     0003           .WORD   SHOW_2
    2508 00000ee0 0000cb70"          .LONG   GERMAN_15                      ;1 DM / 5 DM
    2509                    *
    2510                    *        GERMAN 3    COINAGE IS 8 PLAYS FOR 5 DM
    2511                    *
    2512 00000f00     0007           .WORD   7,14,35,5,35,0                 ;WILLY PRICING
    2513 00000f60     0001           .WORD   1                              ;DMS HAVE NO FRACTIONS
    2514 00000f70     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2515 00000f80     0001           .WORD   1,2,5                          ;COIN VALUE
    2516 00000fb0 000067b0"          .LONG   NULL_ST,DM_TRAIL               ;CHARACTER STRINGS.
    2517 00000ff0 00000001           .LONG   CSM_LIST
    2518 00001010 00008140"          .LONG   GERMAN_3                       ;TITLE OF COIN MODE
    2519 00001030 000091d0"          .LONG   DM_8                           ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2520 00001050     0003           .WORD   SHOW_2
    2521 00001060 0000cb70"          .LONG   GERMAN_15                      ;1 DM / 5 DM
    2522                    *
    2523                    *        GERMAN 4    COINAGE IS 5 PLAYS FOR 5 DM
    2524                    *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   57

    2525 00001080     0001           .WORD   1,2,5,1,0,0                    ;WILLY PRICING
    2526 000010e0     0001           .WORD   1                              ;DMS HAVE NO FRACTIONS
    2527 000010f0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2528 00001100     0001           .WORD   1,2,5                          ;COIN VALUE
    2529 00001130 000067b0"          .LONG   NULL_ST,DM_TRAIL               ;CHARACTER STRINGS.
    2530 00001170 00000001           .LONG   CSM_LIST
    2531 00001190 00008190"          .LONG   GERMAN_4                       ;TITLE OF COIN MODE
    2532 000011b0 000090b0"          .LONG   DM_5                           ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2533 000011d0     0003           .WORD   SHOW_2
    2534 000011e0 0000cb70"          .LONG   GERMAN_15                      ;1 DM / 5 DM
    2535                    
    2536                    ****************************************************************************
    2537                    ****************************************************************************
    2538                    *******  THE FOLLOWING NUMBERS ARE FIGURED FOR THE FRENCH SETTINGS
    2539                    *******  REQUESTED BY DIMITRI K. OF P.S.D.
    2540                    *******
    2541                    *******                          1F   5F   10F   U/C   U/B  M/U
    2542                    *******                         --------------------------------
    2543                    *******  1/2F  3/5F    7/10F     3    15    30    5    30    0
    2544                    *******  1/3F  2/5F    5/10F     2    10    20    5    20    0
    2545                    *******  1/5F  3/10F             1     5    10    5    10    0
    2546                    *******  1/5F  3/10F   7/20F     3    15    30   10    60   15
    2547                    *******  2/5F  4/10F   9/20F     2    10    20    5    40   10
    2548                    *******  2/5F  5/10F  11/20F     1     5    10    2    20    5
    2549                    *******
    2550                    *
    2551                    *
    2552                    *        FRENCH 1               2/5F    5/10F
    2553                    *
    2554                    *
    2555 00001200     0002           .WORD   2,0,4,1,4,0      ; 2/5F    5/10F
    2556 00001260     0001           .WORD   1                              ;1 FRANC PER FRANC
    2557 00001270     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2558 00001280     0005           .WORD   5,0,10                         ;COIN VALUE
    2559 000012b0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2560 000012f0 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2561 00001310 000081e0"          .LONG   FRENCH_1                       ;TITLE OF COIN MODE
    2562 00001330 00009350"          .LONG   FIVE_10                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2563 00001350     0003           .WORD   SHOW_2
    2564 00001360 0000cc10"          .LONG   FRENCH510
    2565                    
    2566              000d  F1SEL    EQU     ($-CSELCT)/CS_SIZE             ;COIN SELECT VALUE FOR FRENCH 1
    2567                    
    2568                    *
    2569                    *        FRENCH 2               2/5F    4/10F
    2570                    *
    2571                    *
    2572 00001380     0002           .WORD   2,0,4,1,0,0      ; 2/5F    4/10F
    2573 000013e0     0001           .WORD   1                              ;1 FRANC PER FRANC
    2574 000013f0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2575 00001400     0005           .WORD   5,0,10                         ;COIN VALUE
    2576 00001430 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2577 00001470 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2578 00001490 00008230"          .LONG   FRENCH_2                       ;TITLE OF COIN MODE
    2579 000014b0 00009430"          .LONG   FOUR_10                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   58

    2580 000014d0     0003           .WORD   SHOW_2
    2581 000014e0 0000cc10"          .LONG   FRENCH510
    2582                    *
    2583                    *        FRENCH 3               1/5F  3/10F        
    2584                    *
    2585                    *
    2586 00001500     0001           .WORD   1,0,2,1,2,0       ;1/5F  3/10F        
    2587 00001560     0001           .WORD   1                              ;1 FRANC PER FRANC
    2588 00001570     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2589 00001580     0005           .WORD   5,0,10                         ;COIN VALUE
    2590 000015b0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2591 000015f0 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2592 00001610 00008280"          .LONG   FRENCH_3                       ;TITLE OF COIN MODE
    2593 00001630 00009510"          .LONG   THREE_10                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2594 00001650     0003           .WORD   SHOW_2
    2595 00001660 0000cc10"          .LONG   FRENCH510
    2596                    *
    2597                    *        FRENCH 4               1/5F  2/10F   
    2598                    *
    2599                    *
    2600 00001680     0001           .WORD   1,0,2,1,0,0    ;1/5F  2/10F
    2601 000016e0     0001           .WORD   1                              ;1 FRANC PER FRANC
    2602 000016f0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2603 00001700     0005           .WORD   5,0,10                         ;COIN VALUE
    2604 00001730 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2605 00001770 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2606 00001790 000082d0"          .LONG   FRENCH_4                       ;TITLE OF COIN MODE
    2607 000017b0 000095f0"          .LONG   TWO_10                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2608 000017d0     0002           .WORD   SHOW_1
    2609 000017e0 0000cc10"          .LONG   FRENCH510
    2610                    *
    2611                    *
    2612                    *        FRENCH 5               2/5F    5/10F    11/2 X 10F
    2613                    *
    2614                    *
    2615 00001800     0005           .WORD   5,0,10,2,20,0                  ;2/5F  5/10F  11/20F
    2616 00001860     0001           .WORD   1                              ;1 FRANC PER FRANC
    2617 00001870     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2618 00001880     0005           .WORD   5,0,10                         ;COIN VALUE
    2619 000018b0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2620 000018f0 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2621 00001910 00008320"          .LONG   FRENCH_5                       ;TITLE OF COIN MODE
    2622 00001930 000093b0"          .LONG   FIVE_10_11                     ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2623 00001950     0004           .WORD   SHOW_3                         ;USE LINE 3 WHEN ONLY 1 WILL FIT
    2624 00001960 0000cc10"          .LONG   FRENCH510
    2625                    *
    2626                    *        FRENCH 6               2/5F    4/10F    9/2 X 10F
    2627                    *
    2628                    *
    2629 00001980     0002           .WORD   2,0,4,1,8,0                    ;2/5F  4/10F   9/20F
    2630 000019e0     0001           .WORD   1                              ;1 FRANC PER FRANC
    2631 000019f0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2632 00001a00     0005           .WORD   5,0,10                         ;COIN VALUE
    2633 00001a30 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2634 00001a70 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   59

    2635 00001a90 00008370"          .LONG   FRENCH_6                       ;TITLE OF COIN MODE
    2636 00001ab0 00009490"          .LONG   FOUR_10_9                      ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2637 00001ad0     0004           .WORD   SHOW_3                         ;USE LINE 3 WHEN ONLY 1 WILL FIT
    2638 00001ae0 0000cc10"          .LONG   FRENCH510
    2639                    *
    2640                    *        FRENCH 7               1/5F    3/10F    7/2 X 10F
    2641                    *
    2642                    *
    2643 00001b00     0003           .WORD   3,0,6,2,12,0                   ;1/5F  3/10F   7/20F
    2644 00001b60     0001           .WORD   1                              ;1 FRANC PER FRANC
    2645 00001b70     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2646 00001b80     0005           .WORD   5,0,10                         ;COIN VALUE
    2647 00001bb0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2648 00001bf0 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2649 00001c10 000083c0"          .LONG   FRENCH_7                       ;TITLE OF COIN MODE
    2650 00001c30 00009570"          .LONG   THREE_10_7                     ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2651 00001c50     0004           .WORD   SHOW_3                         ;USE LINE 3 WHEN ONLY 1 WILL FIT
    2652 00001c60 0000cc10"          .LONG   FRENCH510
    2653                    *
    2654                    *        FRENCH 8               1/5F    2/10F    5/2 X 10F
    2655                    *
    2656                    *
    2657 00001c80     0001           .WORD   1,0,2,1,4,0                    ;1/5F  2/10F  5/20F
    2658 00001ce0     0001           .WORD   1                              ;1 FRANC PER FRANC
    2659 00001cf0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2660 00001d00     0005           .WORD   5,0,10                         ;COIN VALUE
    2661 00001d30 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2662 00001d70 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2663 00001d90 00008410"          .LONG   FRENCH_8                       ;TITLE OF COIN MODE
    2664 00001db0 00009650"          .LONG   TWO_10_5                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2665 00001dd0     0004           .WORD   SHOW_3                         ;USE LINE 3 WHEN ONLY 1 WILL FIT
    2666 00001de0 0000cc10"          .LONG   FRENCH510
    2667                    *
    2668                    *        FRENCH 9               1/3 X 1F      2/5F
    2669                    *
    2670                    *        COIN SLOTS ARE  1F -- 5F
    2671                    *
    2672                    *
    2673 00001e00     0002           .WORD   2,0,10,5,0,0                   ;1/3x1F  2/5F  
    2674 00001e60     0001           .WORD   1                              ;1 FRANC PER FRANC
    2675 00001e70     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2676 00001e80     0001           .WORD   1,0,5                          ;COIN VALUE
    2677 00001eb0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2678 00001ef0 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2679 00001f10 00008460"          .LONG   FRENCH_9                       ;TITLE OF COIN MODE
    2680 00001f30 000096d0"          .LONG   F1325                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2681 00001f50     0003           .WORD   SHOW_2                         ;USE LINE 2 WHEN ONLY 1 WILL FIT
    2682 00001f60 0000ccb0"          .LONG   FRENCH1F5F
    2683                    *
    2684                    *        FRENCH 10               1/2 X 1F      3/5F
    2685                    *
    2686                    *        COIN SLOTS ARE  1F -- 5F
    2687                    *
    2688                    *
    2689 00001f80     0003           .WORD   3,0,15,5,0,0                   ;1/2x1F  3/5F  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   60

    2690 00001fe0     0001           .WORD   1                              ;1 FRANC PER FRANC
    2691 00001ff0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2692 00002000     0001           .WORD   1,0,5                          ;COIN VALUE
    2693 00002030 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2694 00002070 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2695 00002090 000084b0"          .LONG   FRENCH_10                      ;TITLE OF COIN MODE
    2696 000020b0 000097b0"          .LONG   F1235                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2697 000020d0     0003           .WORD   SHOW_2                         ;USE LINE 2 WHEN ONLY 1 WILL FIT
    2698 000020e0 0000ccb0"          .LONG   FRENCH1F5F
    2699                    *
    2700                    *        FRENCH 11               1/3 X 1F      2/5F    5/2 X 5F
    2701                    *
    2702                    *        COIN SLOTS ARE  1F -- 5F
    2703                    *
    2704                    *
    2705 00002100     0002           .WORD   2,0,10,5,20,0                  ;1/3x1F  2/5F  5/10F
    2706 00002160     0001           .WORD   1                              ;1 FRANC PER FRANC
    2707 00002170     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2708 00002180     0001           .WORD   1,0,5                          ;COIN VALUE
    2709 000021b0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2710 000021f0 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2711 00002210 00008500"          .LONG   FRENCH_11                      ;TITLE OF COIN MODE
    2712 00002230 00009730"          .LONG   F13255                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2713 00002250     0004           .WORD   SHOW_3                         ;USE LINE 2 WHEN ONLY 1 WILL FIT
    2714 00002260 0000ccb0"          .LONG   FRENCH1F5F
    2715                    *
    2716                    *        FRENCH 12               1/2 X 1F      3/5F      7 / 2 X 5F
    2717                    *
    2718                    *        COIN SLOTS ARE  1F -- 5F
    2719                    *
    2720                    *
    2721 00002280     0003           .WORD   3,0,15,5,30,0                  ;1/2x1F  3/5F  7/10F
    2722 000022e0     0001           .WORD   1                              ;1 FRANC PER FRANC
    2723 000022f0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2724 00002300     0001           .WORD   1,0,5                          ;COIN VALUE
    2725 00002330 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2726 00002370 00000001           .LONG   CSM_LIST                       ;WAIT TILL HE SAYS "IF IT IS NOT POSSIBLE"
    2727 00002390 00008550"          .LONG   FRENCH_12                      ;TITLE OF COIN MODE
    2728 000023b0 00009810"          .LONG   F12355                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2729 000023d0     0004           .WORD   SHOW_3                         ;USE LINE 2 WHEN ONLY 1 WILL FIT
    2730 000023e0 0000ccb0"          .LONG   FRENCH1F5F
    2731                    *
    2732                    *        SWISS 1    COINAGE IS 6 PLAYS FOR 5 FRANC
    2733                    *
    2734 00002400     0006           .WORD   6,0,30,5,0,0                  ;WILLY PRICING
    2735 00002460     0001           .WORD   1                              ;FRANCS HAVE NO FRACTIONS
    2736 00002470     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2737 00002480     0001           .WORD   1,0,5                          ;COIN VALUE
    2738 000024b0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL               ;CHARACTER STRINGS.
    2739 000024f0 00000001           .LONG   CSM_LIST
    2740 00002510 000085a0"          .LONG   SWISS_1                        ;TITLE OF COIN MODE
    2741 00002530 00009230"          .LONG   SFRANC_6                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2742 00002550     0003           .WORD   SHOW_2
    2743 00002560 0000ccb0"          .LONG   SWISS15
    2744                    *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   61

    2745                    *        SWISS 2    COINAGE IS 7 PLAYS FOR 5 FRANC
    2746                    *
    2747 00002580     0006           .WORD   6,0,30,5,30,0                 ;WILLY PRICING
    2748 000025e0     0001           .WORD   1                              ;FRANCS HAVE NO FRACTIONS
    2749 000025f0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2750 00002600     0001           .WORD   1,0,5                          ;COIN VALUE
    2751 00002630 000067b0"          .LONG   NULL_ST,FRANC_TRAIL               ;CHARACTER STRINGS.
    2752 00002670 00000001           .LONG   CSM_LIST
    2753 00002690 000085e0"          .LONG   SWISS_2                        ;TITLE OF COIN MODE
    2754 000026b0 00009290"          .LONG   SFRANC_7                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2755 000026d0     0003           .WORD   SHOW_2
    2756 000026e0 0000ccb0"          .LONG   SWISS15
    2757                    *
    2758                    *        SWISS 3     COINAGE IS 8 PLAYS FOR 5 FRANC
    2759                    *
    2760 00002700     0007           .WORD   7,0,35,5,35,0                 ;WILLY PRICING
    2761 00002760     0001           .WORD   1                              ;FRANCS HAVE NO FRACTIONS
    2762 00002770     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2763 00002780     0001           .WORD   1,0,5                          ;COIN VALUE
    2764 000027b0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL               ;CHARACTER STRINGS.
    2765 000027f0 00000001           .LONG   CSM_LIST
    2766 00002810 00008620"          .LONG   SWISS_3                        ;TITLE OF COIN MODE
    2767 00002830 000092f0"          .LONG   SFRANC_8                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2768 00002850     0003           .WORD   SHOW_2
    2769 00002860 0000ccb0"          .LONG   SWISS15
    2770                    *
    2771                    *        ITALY COINAGE IS 1 PLAYS FOR 500 LIRE
    2772                    *
    2773 00002880     0001           .WORD   1,0,1,1,0,0                 ;WILLY PRICING
    2774 000028e0     0001           .WORD   1                              ;LIRE HAVE NO FRACTIONS
    2775 000028f0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2776 00002900     01f4           .WORD   500,0,500                          ;COIN VALUE
    2777 00002930 000067b0"          .LONG   NULL_ST,LIRE_TRAIL               ;CHARACTER STRINGS.
    2778 00002970 00000001           .LONG   CSM_LIST
    2779 00002990 00008660"          .LONG   ITALY_1                        ;TITLE OF COIN MODE
    2780 000029b0 00009890"          .LONG   P1500L                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2781 000029d0     0002           .WORD   SHOW_1
    2782 000029e0 0000cd40"          .LONG   ITALYLIRE
    2783                    *
    2784                    *        U.K. 1   COINAGE IS 1 PLAY FOR 20P   3 FOR 50P
    2785                    *
    2786 00002a00     0006           .WORD   6,0,15,5,0,0                   ;WILLY PRICING
    2787 00002a60     000a           .WORD   10                             ;PENCE ARE FRACTIONS!
    2788 00002a70     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2789 00002a80     0002           .WORD   2,0,5                          ;COIN VALUE
    2790 00002ab0 00006790"          .LONG   POUND_LEAD,NULL_ST             ;CHARACTER STRINGS.
    2791 00002af0 00000001           .LONG   CSM_LIST
    2792 00002b10 00008690"          .LONG   UK_1                           ;TITLE OF COIN MODE
    2793 00002b30 000098d0"          .LONG   UK_120                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2794 00002b50     0003           .WORD   SHOW_2
    2795 00002b60 0000ce00"          .LONG   UK2050
    2796                    *
    2797                    *        U.K. 2   COINAGE IS 2 PLAY FOR 20P   5 FOR 50P
    2798                    *
    2799 00002b80     0002           .WORD   2,0,5,1,0,0                    ;WILLY PRICING
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   62

    2800 00002be0     000a           .WORD   10                             ;PENCE ARE FRACTIONS!
    2801 00002bf0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2802 00002c00     0002           .WORD   2,0,5                          ;COIN VALUE
    2803 00002c30 00006790"          .LONG   POUND_LEAD,NULL_ST             ;CHARACTER STRINGS.
    2804 00002c70 00000001           .LONG   CSM_LIST
    2805 00002c90 000086d0"          .LONG   UK_2                           ;TITLE OF COIN MODE
    2806 00002cb0 00009930"          .LONG   UK_220                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2807 00002cd0     0002           .WORD   SHOW_1
    2808 00002ce0 0000ce00"          .LONG   UK2050
    2809                    *
    2810                    *        U.K. ELECTRONIC 1   
    2811                    *
    2812                    *        CENTER = 10P  XTRA = 20P  LEFT = 50P  RIGHT = POUND
    2813                    *        1 PLAY / 30 P
    2814                    *        2 PLAY / 50 P
    2815                    *        4 PLAY / 1 POUND
    2816                    *
    2817                    *         .WORD   2,10,20,5,0,0                 ;NUMBERS FOR 10/50/100
    2818 00002d00     000a           .WORD   10,2,20,5,0,0                  ;NUMBERS FOR 50/10/100
    2819 00002d60     000a           .WORD   10                             ;PENCE ARE FRACTIONS!
    2820 00002d70     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2821 00002d80     0005           .WORD   5,1,10                         ;COIN VALUE
    2822 00002db0 00006790"          .LONG   POUND_LEAD,NULL_ST             ;CHARACTER STRINGS.
    2823 00002df0 00007040"          .LONG   UK_ELECTRONIC                  ;SPECIAL TITLE W/ POUND
    2824 00002e10 00008710"          .LONG   UK_3                           ;TITLE OF COIN MODE
    2825 00002e30 00009990"          .LONG   UK_320                         ;1/30P  2/50P  4/1L
    2826 00002e50     0003           .WORD   SHOW_2
    2827 00002e60 0000cea0"          .LONG   UK_ELEC
    2828                    *
    2829                    *        U.K. ELECTRONIC 2  (CCU) 
    2830                    *
    2831                    *        CREDITS ARE AWARDED 1 COIN / 1 PLAY.....
    2832                    *
    2833                    *        CCU ACCUMULATES 4 COINS AND STROKES US AS FOLLOWS:
    2834                    *
    2835                    *        1 PLAY / 30 P
    2836                    *        2 PLAY / 50 P
    2837                    *        4 PLAY / 1 POUND
    2838                    *
    2839 00002e80     0001           .WORD   1,0,0,1,0,0                    ;NUMBERS FOR 
    2840 00002ee0     0001           .WORD   1                              ;PENCE ARE FRACTIONS!
    2841 00002ef0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2842 00002f00     0001           .WORD   1,0,0                          ;COIN VALUE
    2843 00002f30 000067b0"          .LONG   NULL_ST,COINS_TRAIL            ;CHARACTER STRINGS.
    2844 00002f70 00007040"          .LONG   UK_ELECTRONIC                  ;SPECIAL TITLE W/ POUND
    2845 00002f90 00008790"          .LONG   UK_4                           ;TITLE OF COIN MODE
    2846 00002fb0 00009990"          .LONG   UK_320                         ;1/30P  2/50P  4/1L
    2847 00002fd0     0003           .WORD   SHOW_2
    2848 00002fe0 0000cf40"          .LONG   UK_CCU     
    2849                    *
    2850                    *        SPAIN 1     1 play / 25 Peseta   5 play / 100 Peseta
    2851                    *
    2852 00003000     0001           .WORD   1,0,4,1,4,0                    ;WILLY PRICING
    2853 00003060     0001           .WORD   1                              ;no fractions
    2854 00003070     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   63

    2855 00003080     0019           .WORD   25,0,100                       ;COIN VALUE
    2856 000030b0 000067b0"          .LONG   NULL_ST,PESETA_TRAIL           ;CHARACTER STRINGS.
    2857 000030f0 00000001           .LONG   CSM_LIST
    2858 00003110 00008810"          .LONG   SP_1                           ;TITLE OF COIN MODE
    2859 00003130 00009a70"          .LONG   SP_5100                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2860 00003150     0003           .WORD   SHOW_2
    2861 00003160 0000d030"          .LONG   PESETA25
    2862                    
    2863                    *
    2864                    *        SPAIN 2     1 play / 25 Peseta   4 play / 100 Peseta
    2865                    *
    2866 00003180     0001           .WORD   1,0,4,1,0,0                    ;WILLY PRICING
    2867 000031e0     0001           .WORD   1                              ;no fractions
    2868 000031f0     0000           .WORD   0                              ;DON'T DISPLAY COIN FRACTIONS
    2869 00003200     0019           .WORD   25,0,100                       ;COIN VALUE
    2870 00003230 000067b0"          .LONG   NULL_ST,PESETA_TRAIL           ;CHARACTER STRINGS.
    2871 00003270 00000001           .LONG   CSM_LIST
    2872 00003290 00008850"          .LONG   SP_2                           ;TITLE OF COIN MODE
    2873 000032b0 00009a10"          .LONG   SP_4100                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2874 000032d0     0003           .WORD   SHOW_2
    2875 000032e0 0000d030"          .LONG   PESETA25
    2876                    *
    2877                    *        AUSTRALIA 1   1 play / 3 X 20 CENTS    2 FOR $1.00
    2878                    *
    2879 00003300     0002           .WORD   2,0,10,5,0,0                   ;WILLY PRICING
    2880 00003360     0005           .WORD   5                              ;DOLLARS
    2881 00003370     0000           .WORD   0                              ;DON'T SHOW FRACTIONS FOR THE 3 COINS
    2882 00003380     0001           .WORD   1,0,5                          ;COIN VALUE
    2883 000033b0 00006770"          .LONG   DOLLAR_LEAD,NULL_ST           ;CHARACTER STRINGS.
    2884 000033f0 00000001           .LONG   CSM_LIST
    2885 00003410 00008890"          .LONG   AUS_1                          ;TITLE OF COIN MODE
    2886 00003430 00009ad0"          .LONG   AU_60                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2887 00003450     0003           .WORD   SHOW_2
    2888 00003460 0000d100"          .LONG   AUST20C
    2889                    *
    2890                    *        AUSTRALIA 2   1 play / $1.00    3 plays for $2.00
    2891                    *
    2892 00003480     0001           .WORD   1,0,5,5,10,0                   ;WILLY PRICING
    2893 000034e0     0005           .WORD   5                              ;DOLLARS
    2894 000034f0     0001           .WORD   1                              ;SHOW FRACTIONS FOR THE 3 COINS
    2895 00003500     0001           .WORD   1,0,5                          ;COIN VALUE
    2896 00003530 00006770"          .LONG   DOLLAR_LEAD,NULL_ST           ;CHARACTER STRINGS.
    2897 00003570 00000001           .LONG   CSM_LIST
    2898 00003590 000088f0"          .LONG   AUS_2                          ;TITLE OF COIN MODE
    2899 000035b0 00009b30"          .LONG   AU_100                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2900 000035d0     0004           .WORD   SHOW_3
    2901 000035e0 0000d100"          .LONG   AUST20C
    2902                    *
    2903                    *        JAPAN 1  1 play / 100 yen    
    2904                    *
    2905 00003600     0001           .WORD   1,1,1,1,0,0                    ;WILLY PRICING
    2906 00003660     0001           .WORD   1                              ;DOLLARS
    2907 00003670     0001           .WORD   1                              ;FRACTIONS OK
    2908 00003680     0064           .WORD   100,100,100                    ;COIN VALUE
    2909 000036b0 000067b0"          .LONG   NULL_ST,YEN_TRAIL              ;CHARACTER STRINGS.
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   64

    2910 000036f0 00000001           .LONG   CSM_LIST
    2911 00003710 00008950"          .LONG   JAP_1                          ;TITLE OF COIN MODE
    2912 00003730 00009bb0"          .LONG   JAP_100                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2913 00003750     0002           .WORD   SHOW_1
    2914 00003760 0000d1b0"          .LONG   YEN100
    2915                    *
    2916                    *        JAPAN 2  2 play / 100 yen    
    2917                    *
    2918 00003780     0002           .WORD   2,2,2,1,0,0                    ;WILLY PRICING
    2919 000037e0     0001           .WORD   1                              ;DOLLARS
    2920 000037f0     0001           .WORD   1                              ;FRACTIONS OK
    2921 00003800     0064           .WORD   100,100,100                    ;COIN VALUE
    2922 00003830 000067b0"          .LONG   NULL_ST,YEN_TRAIL              ;CHARACTER STRINGS.
    2923 00003870 00000001           .LONG   CSM_LIST
    2924 00003890 00008990"          .LONG   JAP_2                          ;TITLE OF COIN MODE
    2925 000038b0 00009bf0"          .LONG   JAP_200                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2926 000038d0     0002           .WORD   SHOW_1
    2927 000038e0 0000d1b0"          .LONG   YEN100
    2928                    *
    2929                    *        AUSTRIA  1   1 Play / 5 Schilling  2 Play / 10 Schilling  
    2930                    *
    2931 00003900     0001           .WORD   1,0,2,1,0,0                    ;WILLY PRICING
    2932 00003960     0001           .WORD   1                              ;DOLLARS
    2933 00003970     0001           .WORD   1                              ;FRACTIONS OK
    2934 00003980     0005           .WORD   5,0,10                        ;COIN VALUE
    2935 000039b0 000067b0"          .LONG   NULL_ST,SHILL_TRAIL            ;CHARACTER STRINGS.
    2936 000039f0 00000001           .LONG   CSM_LIST
    2937 00003a10 000089d0"          .LONG   ASTA_1                          ;TITLE OF COIN MODE
    2938 00003a30 00009c90"          .LONG   ASTA_15                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2939 00003a50     0002           .WORD   SHOW_1
    2940 00003a60 0000d260"          .LONG   SHILL510
    2941                    *
    2942                    *        AUSTRIA  2   1 Play / 2 X 5 Schilling  3 Play / 10 Schilling  
    2943                    *
    2944 00003a80     0001           .WORD   1,0,2,2,4,0                    ;WILLY PRICING
    2945 00003ae0     0001           .WORD   1                              ;DOLLARS
    2946 00003af0     0001           .WORD   1                              ;FRACTIONS OK
    2947 00003b00     0005           .WORD   5,0,10                        ;COIN VALUE
    2948 00003b30 000067b0"          .LONG   NULL_ST,SHILL_TRAIL            ;CHARACTER STRINGS.
    2949 00003b70 00000001           .LONG   CSM_LIST
    2950 00003b90 00008a20"          .LONG   ASTA_2                          ;TITLE OF COIN MODE
    2951 00003bb0 00009c30"          .LONG   ASTA_10                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2952 00003bd0     0003           .WORD   SHOW_2
    2953 00003be0 0000d260"          .LONG   SHILL510
    2954                    *
    2955                    *        BELGIUM 1  1 play / 20F    
    2956                    *
    2957 00003c00     0001           .WORD   1,0,1,1,0,0                    ;WILLY PRICING
    2958 00003c60     0001           .WORD   1                              ;DOLLARS
    2959 00003c70     0001           .WORD   1                              ;FRACTIONS OK
    2960 00003c80     0014           .WORD   20,0,20                       ;COIN VALUE
    2961 00003cb0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2962 00003cf0 00000001           .LONG   CSM_LIST
    2963 00003d10 00008a70"          .LONG   BEL_1                          ;TITLE OF COIN MODE
    2964 00003d30 00009cf0"          .LONG   BEL_120                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   65

    2965 00003d50     0002           .WORD   SHOW_1
    2966 00003d60 0000d340"          .LONG   FRANC20
    2967                    *
    2968                    *        BELGIUM 2  3 play / 20F    
    2969                    *
    2970 00003d80     0003           .WORD   3,0,3,1,0,0                    ;WILLY PRICING
    2971 00003de0     0001           .WORD   1                              ;DOLLARS
    2972 00003df0     0001           .WORD   1                              ;FRACTIONS OK
    2973 00003e00     0014           .WORD   20,0,20                       ;COIN VALUE
    2974 00003e30 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2975 00003e70 00000001           .LONG   CSM_LIST
    2976 00003e90 00008ac0"          .LONG   BEL_2                          ;TITLE OF COIN MODE
    2977 00003eb0 00009d70"          .LONG   BEL_320                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2978 00003ed0     0002           .WORD   SHOW_1
    2979 00003ee0 0000d340"          .LONG   FRANC20
    2980                    *
    2981                    *        BELGIUM 3  2 play / 20F    
    2982                    *
    2983 00003f00     0002           .WORD   2,0,2,1,0,0                    ;WILLY PRICING
    2984 00003f60     0001           .WORD   1                              ;DOLLARS
    2985 00003f70     0001           .WORD   1                              ;FRACTIONS OK
    2986 00003f80     0014           .WORD   20,0,20                       ;COIN VALUE
    2987 00003fb0 000067b0"          .LONG   NULL_ST,FRANC_TRAIL            ;CHARACTER STRINGS.
    2988 00003ff0 00000001           .LONG   CSM_LIST
    2989 00004010 00008b10"          .LONG   BEL_3                          ;TITLE OF COIN MODE
    2990 00004030 00009d30"          .LONG   BEL_220                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    2991 00004050     0002           .WORD   SHOW_1
    2992 00004060 0000d340"          .LONG   FRANC20
    2993                    *
    2994                    *        SWEDEN        1 play / 3 X 1 KRONA   2 PLAY  5 KRONA    
    2995                    *
    2996 00004080     0002           .WORD   2,0,10,5,0,0                  ;WILLY PRICING
    2997 000040e0     0001           .WORD   1                              ;DOLLARS
    2998 000040f0     0000           .WORD   0                              ;DON'T SHOW FRACTIONS FOR THE 3 COINS
    2999 00004100     0001           .WORD   1,0,5                          ;COIN VALUE
    3000 00004130 000067b0"          .LONG   NULL_ST,KRONA_TRAIL            ;CHARACTER STRINGS.
    3001 00004170 00000001           .LONG   CSM_LIST
    3002 00004190 00008b60"          .LONG   SWED_1                         ;TITLE OF COIN MODE
    3003 000041b0 00009db0"          .LONG   SWED_2X5                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    3004 000041d0     0002           .WORD   SHOW_1
    3005 000041e0 0000d3e0"          .LONG   KRONA5
    3006                    *
    3007                    *        NEW ZEALAND 1        1 play / 3 X 20 CENT       
    3008                    *
    3009 00004200     0001           .WORD   1,0,1,3,0,0                    ;WILLY PRICING
    3010 00004260     0005           .WORD   5                              ;FIVE PER
    3011 00004270     0001           .WORD   1                              ;SHOW FRACTIONS FOR THE 3 COINS
    3012 00004280     0001           .WORD   1,0,1                          ;COIN VALUE
    3013 000042b0 00006770"          .LONG   DOLLAR_LEAD,NULL_ST           ;CHARACTER STRINGS.
    3014 000042f0 00000001           .LONG   CSM_LIST
    3015 00004310 00008ba0"          .LONG   NZ_1                           ;TITLE OF COIN MODE
    3016 00004330 00009e50"          .LONG   NZ_13                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    3017 00004350     0002           .WORD   SHOW_1
    3018 00004360 0000d490"          .LONG   NZ20
    3019                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   66

    3020                    *
    3021                    *        NEW ZEALAND 2        1 play / 2 X 20 CENT       
    3022                    *
    3023 00004380     0001           .WORD   1,0,1,2,0,0                    ;WILLY PRICING
    3024 000043e0     0005           .WORD   5                              ;FIVE PER
    3025 000043f0     0001           .WORD   1                              ;SHOW FRACTIONS FOR THE 3 COINS
    3026 00004400     0001           .WORD   1,0,1                          ;COIN VALUE
    3027 00004430 00006770"          .LONG   DOLLAR_LEAD,NULL_ST           ;CHARACTER STRINGS.
    3028 00004470 00000001           .LONG   CSM_LIST
    3029 00004490 00008c10"          .LONG   NZ_2                           ;TITLE OF COIN MODE
    3030 000044b0 00009e10"          .LONG   NZ_12                          ;1 COIN PER CREDIT (SERIES OF STRINGS)
    3031 000044d0     0002           .WORD   SHOW_1
    3032 000044e0 0000d490"          .LONG   NZ20
    3033                    *
    3034                    *        NETHERLANDS        1 PLAY / 1 HFL.   3 PLAY / 2.5 HFL.       
    3035                    *
    3036 00004500     0001           .WORD   1,0,3,1,0,0                    ;WILLY PRICING
    3037 00004560     0002           .WORD   2                              ;FIVE PER
    3038 00004570     0000           .WORD   0                              ;SHOW FRACTIONS FOR THE 3 COINS
    3039 00004580     0002           .WORD   2,0,5                          ;COIN VALUE
    3040 000045b0 000067b0"          .LONG   NULL_ST,HFL_TRAIL              ;CHARACTER STRINGS.
    3041 000045f0 00000001           .LONG   CSM_LIST
    3042 00004610 00008c80"          .LONG   NETH                           ;TITLE OF COIN MODE
    3043 00004630 00009e90"          .LONG   NETH_HF                        ;1 COIN PER CREDIT (SERIES OF STRINGS)
    3044 00004650     0003           .WORD   SHOW_2
    3045 00004660 0000d540"          .LONG   HFSLOT
    3046                    
    3047                    *
    3048                    *        FINLAND        1 PLAY / 1 MARKKA       
    3049                    *
    3050 00004680     0001           .WORD   1,0,1,1,0,0                    ;WILLY PRICING
    3051 000046e0     0001           .WORD   1                              ;FIVE PER
    3052 000046f0     0000           .WORD   0                              ;SHOW FRACTIONS FOR THE 3 COINS
    3053 00004700     0001           .WORD   1,0,1                          ;COIN VALUE
    3054 00004730 000067b0"          .LONG   NULL_ST,MARKKA_TRAIL           ;CHARACTER STRINGS.
    3055 00004770 00000001           .LONG   CSM_LIST
    3056 00004790 00008ce0"          .LONG   FINLAND                        ;TITLE OF COIN MODE
    3057 000047b0 00009ef0"          .LONG   FINMKA                         ;1 COIN PER CREDIT (SERIES OF STRINGS)
    3058 000047d0     0002           .WORD   SHOW_1
    3059 000047e0 0000d5f0"          .LONG   MKSLOT
    3060                    *
    3061                    *        NORWAY        1 PLAY / 2 X 1 KRONE    3/ 5 X 1 KRONE       
    3062                    *
    3063 00004800     0003           .WORD   3,0,3,5,0,0                    ;WILLY PRICING
    3064 00004860     0001           .WORD   1                              ;FIVE PER
    3065 00004870     0000           .WORD   0                              ;SHOW FRACTIONS FOR THE 3 COINS
    3066 00004880     0001           .WORD   1,0,1                          ;COIN VALUE
    3067 000048b0 000067b0"          .LONG   NULL_ST,KRONE_TRAIL           ;CHARACTER STRINGS.
    3068 000048f0 00000001           .LONG   CSM_LIST
    3069 00004910 00008d20"          .LONG   NORWAY                        ;TITLE OF COIN MODE
    3070 00004930 00009f30"          .LONG   KR_LIST                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    3071 00004950     0003           .WORD   SHOW_2
    3072 00004960 0000d6b0"          .LONG   NKRSLOT
    3073                    *
    3074                    *        DENMARK        1 PLAY / 2 X 1 KRONE    3/ 5 KRONE    7 / 10 KRONE     
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   67

    3075                    *
    3076 00004980     0003           .WORD   3,0,15,5,30,0                  ;WILLY PRICING
    3077 000049e0     0001           .WORD   1                              ;FIVE PER
    3078 000049f0     0000           .WORD   0                              ;SHOW FRACTIONS FOR THE 3 COINS
    3079 00004a00     0001           .WORD   1,0,5                          ;COIN VALUE
    3080 00004a30 000067b0"          .LONG   NULL_ST,KRONE_TRAIL           ;CHARACTER STRINGS.
    3081 00004a70 00000001           .LONG   CSM_LIST
    3082 00004a90 00008d60"          .LONG   DENMARK                        ;TITLE OF COIN MODE
    3083 00004ab0 00009f90"          .LONG   DKR_LIST                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    3084 00004ad0     0004           .WORD   SHOW_3
    3085 00004ae0 0000d760"          .LONG   DKRSLOT
    3086                    
    3087                    *
    3088                    *        ANTILLES      1 PLAY / 25 CENTS   4 PLAYS / 1 GUILDER     
    3089                    *
    3090 00004b00     0001           .WORD   1,0,4,1,0,0                    ;WILLY PRICING
    3091 00004b60     0004           .WORD   4                              ;FIVE PER
    3092 00004b70     0000           .WORD   0                              ;SHOW FRACTIONS FOR THE 3 COINS
    3093 00004b80     0001           .WORD   1,0,4                          ;COIN VALUE
    3094 00004bb0 000067b0"          .LONG   NULL_ST,GUILDER_TRAIL           ;CHARACTER STRINGS.
    3095 00004bf0 00000001           .LONG   CSM_LIST
    3096 00004c10 00008da0"          .LONG   ANTILLES                       ;TITLE OF COIN MODE
    3097 00004c30 0000a010"          .LONG   ANT_LIST                       ;1 COIN PER CREDIT (SERIES OF STRINGS)
    3098 00004c50     0002           .WORD   SHOW_1
    3099 00004c60 0000d810"          .LONG   ANTSLOT
    3100                    
    3101              0033  CS_ENTS  EQU     ($-CSELCT)/CS_SIZE             ;NUMBER OF ENTRIES IN TABLE
    3102                    
    3103                    *
    3104                    *        AUDIT TEXT
    3105                    *
    3106                    
    3107 00004c80           MESS_ERROR
    3108 00004c80                    MESS_MAC  RD7FONT,SPACING07,0,0,NARCS_RED,STRLNRM,0
    3109 00004d20       20           .STRING   "  ERROR"
    3110 00004d58       00           .BYTE     0
    3111 00004d60                    .EVEN
    3112                    
    3113 00004d60           MESS_AUD_NUM
    3114 00004d60                    MESS_MAC  RD15FONT,SPACING20,470,355,NARCS_YELLOW,STRRNRM,0
    3115                    
    3116 00004e00           MESS_AUD_LINE
    3117 00004e00                    MESS_MAC  RD15FONT,SPACING20,30,355,NARCS_YELLOW,STRLNRM,0
    3118                    
    3119 00004ea0       47  MES_AUD  .STRING "GAME AUDITS"
    3120 00004ef8       00           .BYTE   0
    3121 00004f00                    .EVEN
    3122                    
    3123 00004f00           MES_BOOK
    3124 00004f00       43           .STRING "COIN  BOOKKEEPING"
    3125 00004f88       00           .BYTE   0
    3126 00004f90                    .EVEN
    3127                    
    3128 00004f90       4c  M_LCOIN  .STRING "LEFT SLOT COINS"
    3129 00005008       00           .BYTE   0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   68

    3130 00005010                    .EVEN
    3131                    
    3132 00005010       43  M_CCOIN  .STRING "CENTER SLOT COINS"
    3133 00005098       00           .BYTE   0
    3134 000050a0                    .EVEN
    3135                    
    3136 000050a0       52  M_RCOIN  .STRING "RIGHT SLOT COINS"
    3137 00005120       00           .BYTE   0
    3138 00005130                    .EVEN
    3139                    
    3140 00005130       50  M_PAIDC  .STRING "PAID CREDITS"
    3141 00005190       00           .BYTE   0
    3142 000051a0                    .EVEN
    3143                    
    3144 000051a0       47  M_START  .STRING "GAMES STARTED"
    3145 00005208       00           .BYTE   0
    3146 00005210                    .EVEN
    3147                    
    3148 00005210       47  M_CONT   .STRING "GAMES CONTINUED"
    3149 00005288       00           .BYTE   0
    3150 00005290                    .EVEN
    3151                    
    3152 00005290       54  M_PLAYS  .STRING "TOTAL PLAYS"
    3153 000052e8       00           .BYTE   0
    3154 000052f0                    .EVEN
    3155                    
    3156 000052f0       50  M_HSLEFT .STRING "PLAYS UNTIL H.S. RESET"
    3157 000053a0       00           .BYTE   0
    3158 000053b0                    .EVEN
    3159 000053b0       4f  M_HSOFF  .STRING "OFF"
    3160 000053c8       00           .BYTE   0
    3161 000053d0                    .EVEN
    3162                    
    3163 000053d0       45  M_EXTRA  .STRING "EXTRA MEN EARNED"
    3164 00005450       00           .BYTE   0
    3165 00005460                    .EVEN
    3166 00005460       48  M_P1MIN  .STRING "HOURS OF SINGLE PLAY"
    3167 00005500       00           .BYTE   0
    3168 00005510                    .EVEN
    3169 00005510       48  M_P2MIN  .STRING "HOURS OF DUAL PLAY"
    3170 000055a0       00           .BYTE   0
    3171 000055b0                    .EVEN
    3172 000055b0       54  M_HOURS  .STRING "TOTAL HOURS OF PLAY"
    3173 00005648       00           .BYTE   0
    3174 00005650                    .EVEN
    3175 00005650       41  M_AVGT   .STRING "AVG. "
    3176 00005678       22           .BYTE   ASCII_DQ        ;DOUBLE QUOTE
    3177 00005680       50           .STRING "PLAYER"
    3178 000056b0       81           .BYTE   FONT_RQUOTE     ;DOUBLE QUOTE
    3179 000056b8       20           .STRING " GAME TIME (MIN.)"
    3180 00005740       00           .BYTE   0
    3181 00005750                    .EVEN
    3182 00005750       41  M_ELAPSE .STRING "AVG. ELAPSED TIME/PLAY"
    3183 00005800       00           .BYTE   0
    3184 00005810                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   69

    3185                    
    3186 00005810       57  M_WAVE1  .STRING "WAVE 1 (JUNKYARD)"
    3187 00005898       00           .BYTE   0
    3188 000058a0                    .EVEN
    3189 000058a0       57  M_WAVE2  .STRING "WAVE 2 (KRAK STREET)"
    3190 00005940       00           .BYTE   0
    3191 00005950                    .EVEN
    3192 00005950       57  M_WAVE3  .STRING "WAVE 3 (THE BRIDGE)"
    3193 000059e8       00           .BYTE   0
    3194 000059f0                    .EVEN
    3195 000059f0       57  M_WAVE4  .STRING "WAVE 4 (SUNSET STRIP)"
    3196 00005a98       00           .BYTE   0
    3197 00005aa0                    .EVEN
    3198 00005aa0       57  M_WAVE5  .STRING "WAVE 5 (SKYHIGH'S NURSERY)"
    3199 00005b70       00           .BYTE   0
    3200 00005b80                    .EVEN
    3201 00005b80       57  M_WAVE6  .STRING "WAVE 6 (DOWNTOWN)"
    3202 00005c08       00           .BYTE   0
    3203 00005c10                    .EVEN
    3204 00005c10       57  M_WAVE7  .STRING "WAVE 7 (MR. BIG'S OFFICE)"
    3205 00005cd8       00           .BYTE   0
    3206 00005ce0                    .EVEN
    3207 00005ce0       57  M_WAVE8  .STRING "WAVE 8 (INNER SANCTUM)"
    3208 00005d90       00           .BYTE   0
    3209 00005da0                    .EVEN
    3210 00005da0       4d  M_MRBIG  .STRING "MR. BIG CONQUERED"
    3211 00005e28       00           .BYTE   0
    3212 00005e30                    .EVEN
    3213                    
    3214 00005e30           M_MONEY
    3215 00005e30                    MESS_MAC  RD15FONT,SPACING20,470,355,NARCS_WHITE,STRRNRM,0
    3216                    
    3217 00005ed0           T_MONEY 
    3218 00005ed0                    MESS_MAC  RD15FONT,SPACING20,30,355,NARCS_WHITE,STRLNRM,0
    3219 00005f70       54           .STRING "TOTAL COLLECTION"
    3220 00005ff0       00           .BYTE   0
    3221 00006000                    .EVEN
    3222                    
    3223 00006000           T_SUB     MESS_MAC  RD15FONT,SPACING20,30,355,NARCS_WHITE,STRLNRM,0
    3224 000060a0       53           .STRING "SUBTOTAL"
    3225 000060e0       00           .BYTE   0
    3226 000060f0                    .EVEN
    3227                    
    3228              0014  DT_Y1    EQU     20
    3229              00be  DT_Y2    EQU     0BEH
    3230                    
    3231 000060f0           DETAIL_TITLES
    3232 000060f0                    MESS_MAC  RD15FONT,SPACING20,0FDH,DT_Y1,NARCS_ORANGE,STRCNRM,0
    3233 00006190       54           .STRING "TOTAL COLLECTION"
    3234 00006210       00           .BYTE   0,1
    3235 00006220                    .EVEN
    3236 00006220                    MESS_MAC  RD15FONT,SPACING20,0FDH,DT_Y2,NARCS_ORANGE,STRCNRM,0
    3237 000062c0       43           .STRING "COLLECTED WITH COIN DOOR CLOSED"
    3238 000063b8       00           .BYTE   0,0
    3239 000063d0                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   70

    3240                    
    3241 000063d0           MESS_OPEN_OR_CANCEL
    3242 000063d0                    MESS_MAC  RD15FONT,SPACING20,256,200,NARCS_RED,STRCNRM,0
    3243 00006470       4f           .STRING   "OPEN COIN DOOR, OR"
    3244 00006500       00           .BYTE   0,1
    3245 00006510                    .EVEN
    3246 00006510                    MESS_MAC  RD15FONT,SPACING20,256,230,NARCS_RED,STRCNRM,0
    3247 000065b0       50           .STRING   "PRESS ANY BUTTON"
    3248 00006630       00           .BYTE   0,1
    3249 00006640                    .EVEN
    3250 00006640                    MESS_MAC  RD15FONT,SPACING20,256,260,NARCS_RED,STRCNRM,0
    3251 000066e0       54           .STRING   "TO CANCEL"
    3252 00006728       00           .BYTE   0,0
    3253 00006740                    .EVEN
    3254                    
    3255                    **************************************************************************
    3256                    *                                                                        *
    3257                    *          COLLECTION MESSAGES                                           *
    3258                    *                                                                        *
    3259                    **************************************************************************
    3260 00006740       30  ME_ZERO          .STRING "0"
    3261 00006748       00           .BYTE   0
    3262 00006750                    .EVEN
    3263                    
    3264 00006750       2e  ME_DECIMAL       .STRING "."
    3265 00006758       00           .BYTE   0
    3266 00006760                    .EVEN
    3267                    
    3268 00006760       3a  ME_COLON .STRING ":"
    3269 00006768       00           .BYTE   0
    3270 00006770                    .EVEN
    3271                    
    3272 00006770       24  DOLLAR_LEAD      .STRING "$  "
    3273 00006788       00           .BYTE   0
    3274 00006790                    .EVEN
    3275                    
    3276 00006790           POUND_LEAD
    3277 00006790       82           .BYTE   FONT_EPOUND
    3278 00006798       20           .STRING "  "
    3279 000067a8       00           .BYTE   0
    3280 000067b0                    .EVEN
    3281                    
    3282 000067b0           NULL_ST       
    3283 000067b0       00           .BYTE   0
    3284 000067c0                    .EVEN
    3285                    
    3286 000067c0       20  DM_TRAIL         .STRING "  DM"
    3287 000067e0       00           .BYTE   0
    3288 000067f0                    .EVEN
    3289                    
    3290 000067f0       20  FRANC_TRAIL      .STRING "  FRANC"
    3291 00006828       00           .BYTE   0
    3292 00006830                    .EVEN
    3293                    
    3294 00006830       20  LIRE_TRAIL       .STRING "  LIRE"
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   71

    3295 00006860       00           .BYTE   0
    3296 00006870                    .EVEN
    3297                    
    3298 00006870       20  PESETA_TRAIL     .STRING "  PESETA"
    3299 000068b0       00           .BYTE   0
    3300 000068c0                    .EVEN
    3301                    
    3302 000068c0           YEN_TRAIL
    3303 000068c0       20           .STRING "  YEN"
    3304 000068e8       00           .BYTE   0
    3305 000068f0                    .EVEN
    3306                    
    3307 000068f0           SHILL_TRAIL
    3308 000068f0       20           .STRING "  SCHILLINGS"
    3309 00006950       00           .BYTE   0
    3310 00006960                    .EVEN
    3311                    
    3312 00006960           KRONA_TRAIL
    3313 00006960       20           .STRING "  KRONA"
    3314 00006998       00           .BYTE   0
    3315 000069a0                    .EVEN
    3316                    
    3317 000069a0           COINS_TRAIL
    3318 000069a0       20           .STRING "  COINS"
    3319 000069d8       00           .BYTE   0
    3320 000069e0                    .EVEN
    3321                    
    3322 000069e0           HFL_TRAIL
    3323 000069e0       20           .STRING "  HFI."
    3324 00006a10       00           .BYTE   0
    3325 00006a20                    .EVEN
    3326                    
    3327 00006a20           MARKKA_TRAIL
    3328 00006a20       20           .STRING "  MARKKA"
    3329 00006a60       00           .BYTE   0
    3330 00006a70                    .EVEN
    3331                    
    3332 00006a70           KRONE_TRAIL
    3333 00006a70       20           .STRING "  KRONE"
    3334 00006aa8       00           .BYTE 0
    3335 00006ab0                    .EVEN
    3336                    
    3337 00006ab0           GUILDER_TRAIL
    3338 00006ab0       20           .STRING "  GUILDER"
    3339 00006af8       00           .BYTE 0
    3340 00006b00                    .EVEN
    3341                    
    3342 00006b00       4c  M_LOCKUP .STRING "LOCKUP"
    3343 00006b30       00           .BYTE   0
    3344 00006b40                    .EVEN
    3345 00006b40       57  M_DOG    .STRING "WATCHDOG"
    3346 00006b80       00           .BYTE   0
    3347 00006b90                    .EVEN
    3348 00006b90       55  M_TRAP   .STRING "UNUSED TRAP"
    3349 00006be8       00           .BYTE   0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   72

    3350 00006bf0                    .EVEN
    3351 00006bf0       53  M_SURV   .STRING "SURVIVED LOCKUPS"
    3352 00006c70       00           .BYTE   0
    3353 00006c80                    .EVEN
    3354 00006c80       53  M_HIDB   .STRING "SECRET BONUS SCREENS"
    3355 00006d20       00           .BYTE   0
    3356 00006d30                    .EVEN
    3357 00006d30       4c  M_LOOP   .STRING "LOOP-AROUND BUY-IN"
    3358 00006dc0       00           .BYTE   0
    3359 00006dd0                    .EVEN
    3360                    
    3361 00006dd0           TWO_PER_PLAYER
    3362 00006dd0                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_11,NARCS_LASER,STRCNRM,0
    3363 00006e70       32           .STRING   "2 COINS PER PLAYER"
    3364 00006f00       00           .BYTE     0,0
    3365 00006f10                    .EVEN
    3366                    
    3367 00006f10           OCOP     MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_11,NARCS_LASER,STRCNRM,0
    3368 00006fb0       31           .STRING   "1 COIN / 1 PLAY"
    3369 00007028       00           .BYTE     0,0
    3370 00007040                    .EVEN
    3371                    
    3372 00007040           UK_ELECTRONIC
    3373 00007040                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_13,NARCS_LASER,STRCNRM,0
    3374 000070e0       31           .STRING   "1 CREDIT / 30 P"
    3375 00007158       00           .BYTE     0,1
    3376 00007170                    .EVEN
    3377 00007170                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_23,NARCS_LASER,STRCNRM,0
    3378 00007210       32           .STRING   "2 CREDITS / 50 P"
    3379 00007290       00           .BYTE     0,1
    3380 000072a0                    .EVEN
    3381 000072a0                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_33,NARCS_LASER,STRCNRM,0
    3382 00007340       34           .STRING         "4 CREDITS / "
    3383 000073a0       82           .BYTE           FONT_EPOUND
    3384 000073a8       31           .STRING         "1.00"
    3385 000073c8       00           .BYTE     0,0
    3386 000073e0                    .EVEN
    3387                    *
    3388                    *        THE FOLLOWING 2 MESSAGES ARE GENERIC AND WILL
    3389                    *        BE DISPLAYED IF THE MODE MATCHES AND NO 
    3390                    *        APPROPRIATE MESSAGE EXISTS
    3391                    *
    3392                    *        THIS IS FOR THIS BEING THE ONLY MESSAGE DISPLAYED ON
    3393                    *        THE SCREEN
    3394                    *
    3395 000073e0           TWO_TO_START
    3396 000073e0                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_12,NARCS_LASER,STRCNRM,0
    3397 00007480       32           .STRING   "2 CREDITS TO START"
    3398 00007510       00           .BYTE     0,1
    3399 00007520                    .EVEN
    3400 00007520                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_22,NARCS_LASER,STRCNRM,0
    3401 000075c0       31           .STRING   "1 CREDIT TO CONTINUE"
    3402 00007660       00           .BYTE     0,0
    3403 00007670                    .EVEN
    3404                    *
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   73

    3405                    *        THIS IS FOR LINES TWO AND 3 WITH AN ADDITIONAL LINE ABOVE
    3406                    *
    3407                    
    3408 00007670           TWO_TS
    3409 00007670                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_23,NARCS_LASER,STRCNRM,0
    3410 00007710       32           .STRING   "2 CREDITS TO START"
    3411 000077a0       00           .BYTE     0,1
    3412 000077b0                    .EVEN
    3413 000077b0                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_33,NARCS_LASER,STRCNRM,0
    3414 00007850       31           .STRING   "1 CREDIT TO CONTINUE"
    3415 000078f0       00           .BYTE     0,0
    3416 00007900                    .EVEN
    3417                    
    3418 00007900           TWO_TP
    3419 00007900                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_22,NARCS_LASER,STRCNRM,0
    3420 000079a0       32           .STRING   "2 CREDITS PER PLAYER"
    3421 00007a40       00           .BYTE     0,0
    3422 00007a50                    .EVEN
    3423                    
    3424 00007a50           TWO_CRED_PER_PLAYER
    3425 00007a50                    MESS_MAC  RD15FONT,SPACING20,CP_CX,CP_11,NARCS_LASER,STRCNRM,0
    3426 00007af0       32           .STRING   "2 CREDITS PER PLAYER"
    3427 00007b90       00           .BYTE     0,0
    3428 00007ba0                    .EVEN
    3429                    
    3430 00007ba0           MAX_C_M  MESS_MAC  RD20FONT,SPACING20,CP_CX,CP_11,NARCS_LF,STRCNRM,0
    3431 00007c40       4d           .STRING   "MAXIMUM CREDITS!"
    3432 00007cc0       00           .BYTE     0,0
    3433 00007cd0                    .EVEN
    3434                    *
    3435                    *        FOR CUSTOM MESSAGE ECHO
    3436                    *
    3437                    *
    3438 00007cd0           MESS_CMESS
    3439 00007cd0                    MESS_MAC  RD15FONT,SPACING20,CIN_X,CP_11,NARCS_YELLOW,STRCNRM,0
    3440                    
    3441 00007d70           M_CMES_CURSOR
    3442 00007d70                    MESS_MAC  RD15FONT,SPACING20,CIN_X,CP_11,NARCS_LF,STRLNRM,0
    3443 00007e10       5f           .STRING   "_"
    3444 00007e18       00           .BYTE 0
    3445 00007e20                    .EVEN
    3446                    *
    3447                    *        FOR THE COINAGE ADJUSTMENT MODE:
    3448                    *
    3449                    *
    3450                    *        THIS SET IS TITLES FOR THE CANNED MODES.
    3451                    *
    3452 00007e20       55  USA_1    .STRING "U.S.A. 1"
    3453 00007e60       00           .BYTE   0
    3454 00007e70                    .EVEN
    3455 00007e70       55  USA_2    .STRING "U.S.A. 2"
    3456 00007eb0       00           .BYTE   0
    3457 00007ec0                    .EVEN
    3458 00007ec0       55  USA_3    .STRING "U.S.A. 3"
    3459 00007f00       00           .BYTE   0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   74

    3460 00007f10                    .EVEN
    3461 00007f10       55  USA_4    .STRING "U.S.A. 4"
    3462 00007f50       00           .BYTE   0
    3463 00007f60                    .EVEN
    3464 00007f60       55  USA_5    .STRING "U.S.A. 5"
    3465 00007fa0       00           .BYTE   0
    3466 00007fb0                    .EVEN
    3467 00007fb0       55  USA_6    .STRING "U.S.A. 6"
    3468 00007ff0       00           .BYTE   0
    3469 00008000                    .EVEN
    3470 00008000       55  USA_7    .STRING "U.S.A. 7"
    3471 00008040       00           .BYTE   0
    3472 00008050                    .EVEN
    3473 00008050       55  USA_8    .STRING "U.S.A. 8"
    3474 00008090       00           .BYTE   0
    3475 000080a0                    .EVEN
    3476                    
    3477 000080a0       47  GERMAN_1 .STRING "GERMAN 1"
    3478 000080e0       00           .BYTE   0
    3479 000080f0                    .EVEN
    3480 000080f0       47  GERMAN_2 .STRING "GERMAN 2"
    3481 00008130       00           .BYTE   0
    3482 00008140                    .EVEN
    3483 00008140       47  GERMAN_3 .STRING "GERMAN 3"
    3484 00008180       00           .BYTE   0
    3485 00008190                    .EVEN
    3486 00008190       47  GERMAN_4 .STRING "GERMAN 4"
    3487 000081d0       00           .BYTE   0
    3488 000081e0                    .EVEN
    3489 000081e0       46  FRENCH_1 .STRING "FRANCE 1"
    3490 00008220       00           .BYTE   0
    3491 00008230                    .EVEN
    3492 00008230       46  FRENCH_2 .STRING "FRANCE 2"
    3493 00008270       00           .BYTE   0
    3494 00008280                    .EVEN
    3495 00008280       46  FRENCH_3 .STRING "FRANCE 3"
    3496 000082c0       00           .BYTE   0
    3497 000082d0                    .EVEN
    3498 000082d0       46  FRENCH_4 .STRING "FRANCE 4"
    3499 00008310       00           .BYTE   0
    3500 00008320                    .EVEN
    3501 00008320       46  FRENCH_5 .STRING "FRANCE 5"
    3502 00008360       00           .BYTE   0
    3503 00008370                    .EVEN
    3504 00008370       46  FRENCH_6 .STRING "FRANCE 6"
    3505 000083b0       00           .BYTE   0
    3506 000083c0                    .EVEN
    3507 000083c0       46  FRENCH_7 .STRING "FRANCE 7"
    3508 00008400       00           .BYTE   0
    3509 00008410                    .EVEN
    3510 00008410       46  FRENCH_8 .STRING "FRANCE 8"
    3511 00008450       00           .BYTE   0
    3512 00008460                    .EVEN
    3513 00008460       46  FRENCH_9 .STRING "FRANCE 9"
    3514 000084a0       00           .BYTE   0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   75

    3515 000084b0                    .EVEN
    3516 000084b0       46  FRENCH_10 .STRING "FRANCE 10"
    3517 000084f8       00           .BYTE   0
    3518 00008500                    .EVEN
    3519 00008500       46  FRENCH_11 .STRING "FRANCE 11"
    3520 00008548       00           .BYTE   0
    3521 00008550                    .EVEN
    3522 00008550       46  FRENCH_12 .STRING "FRANCE 12"
    3523 00008598       00           .BYTE   0
    3524 000085a0                    .EVEN
    3525 000085a0       53  SWISS_1 .STRING "SWISS 1"
    3526 000085d8       00           .BYTE   0
    3527 000085e0                    .EVEN
    3528 000085e0       53  SWISS_2 .STRING "SWISS 2"
    3529 00008618       00           .BYTE   0
    3530 00008620                    .EVEN
    3531 00008620       53  SWISS_3 .STRING "SWISS 3"
    3532 00008658       00           .BYTE   0
    3533 00008660                    .EVEN
    3534 00008660       49  ITALY_1 .STRING "ITALY"
    3535 00008688       00           .BYTE   0
    3536 00008690                    .EVEN
    3537 00008690       55  UK_1     .STRING "U.K. 1"
    3538 000086c0       00           .BYTE   0
    3539 000086d0                    .EVEN
    3540 000086d0       55  UK_2     .STRING "U.K. 2"
    3541 00008700       00           .BYTE   0
    3542 00008710                    .EVEN
    3543 00008710       55  UK_3     .STRING "U.K. ELECTRONIC"
    3544 00008788       00           .BYTE   0
    3545 00008790                    .EVEN
    3546 00008790       55  UK_4     .STRING "U.K. ELEC W/CCU"
    3547 00008808       00           .BYTE   0
    3548 00008810                    .EVEN
    3549 00008810       53  SP_1     .STRING "SPAIN 1"
    3550 00008848       00           .BYTE   0
    3551 00008850                    .EVEN
    3552 00008850       53  SP_2     .STRING "SPAIN 2"
    3553 00008888       00           .BYTE   0
    3554 00008890                    .EVEN
    3555 00008890       41  AUS_1    .STRING "AUSTRALIA 1"
    3556 000088e8       00           .BYTE   0
    3557 000088f0                    .EVEN
    3558 000088f0       41  AUS_2    .STRING "AUSTRALIA 2"
    3559 00008948       00           .BYTE   0
    3560 00008950                    .EVEN
    3561 00008950       4a  JAP_1    .STRING "JAPAN 1"
    3562 00008988       00           .BYTE   0
    3563 00008990                    .EVEN
    3564 00008990       4a  JAP_2    .STRING "JAPAN 2"
    3565 000089c8       00           .BYTE   0
    3566 000089d0                    .EVEN
    3567 000089d0       41  ASTA_1   .STRING "AUSTRIA 1"
    3568 00008a18       00           .BYTE   0
    3569 00008a20                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   76

    3570 00008a20       41  ASTA_2   .STRING "AUSTRIA 2"
    3571 00008a68       00           .BYTE   0
    3572 00008a70                    .EVEN
    3573 00008a70       42  BEL_1    .STRING "BELGIUM 1"
    3574 00008ab8       00           .BYTE   0
    3575 00008ac0                    .EVEN
    3576 00008ac0       42  BEL_2    .STRING "BELGIUM 2"
    3577 00008b08       00           .BYTE   0
    3578 00008b10                    .EVEN
    3579 00008b10       42  BEL_3    .STRING "BELGIUM 3"
    3580 00008b58       00           .BYTE   0
    3581 00008b60                    .EVEN
    3582 00008b60       53  SWED_1   .STRING "SWEDEN"
    3583 00008b90       00           .BYTE   0
    3584 00008ba0                    .EVEN
    3585 00008ba0       4e  NZ_1     .STRING "NEW ZEALAND 1"
    3586 00008c08       00           .BYTE   0
    3587 00008c10                    .EVEN
    3588 00008c10       4e  NZ_2     .STRING "NEW ZEALAND 2"
    3589 00008c78       00           .BYTE   0
    3590 00008c80                    .EVEN
    3591 00008c80       4e  NETH     .STRING "NETHERLANDS"
    3592 00008cd8       00           .BYTE   0
    3593 00008ce0                    .EVEN
    3594                    
    3595 00008ce0       46  FINLAND  .STRING "FINLAND"
    3596 00008d18       00           .BYTE 0
    3597 00008d20                    .EVEN
    3598                    
    3599 00008d20       4e  NORWAY   .STRING "NORWAY"
    3600 00008d50       00           .BYTE 0
    3601 00008d60                    .EVEN
    3602                    
    3603 00008d60       44  DENMARK  .STRING "DENMARK"
    3604 00008d98       00           .BYTE 0
    3605 00008da0                    .EVEN
    3606                    
    3607 00008da0       41  ANTILLES .STRING "ANTILLES"
    3608 00008de0       00           .BYTE 0
    3609 00008df0                    .EVEN
    3610                    *
    3611                    *        THIS SECTION IS A POINTER TO STRING LISTS
    3612                    *        FOR THE "CURRENT SETTING" BOX.
    3613                    *
    3614                    *
    3615                    *        1 COIN / 1 CREDIT
    3616 00008df0 0000a070" Q_Q      .LONG   C11                  ;THIS POINTS AT MESSAGE
    3617 00008e10 00000000           .LONG   0                    ;THIS ENDS LIST
    3618                    *
    3619                    *         2 COINS / 1 CREDIT
    3620                    *
    3621 00008e30 0000a100" C2_PERC  .LONG   C21
    3622 00008e50 00000000           .LONG   0
    3623                    *
    3624                    *        2 COINS / 1 CREDIT
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   77

    3625                    *        4 COINS / 3 CREDITS
    3626                    *
    3627 00008e70 0000a100" DOLLAR_3 .LONG   C21
    3628 00008e90 0000a1a0"          .LONG   C43
    3629 00008eb0 00000000           .LONG   0
    3630                    *
    3631                    *        2 COINS / 1 CREDIT
    3632                    *        4 COINS / 4 CREDITS
    3633                    *
    3634 00008ed0 0000a100" DOLLAR_4 .LONG   C21
    3635 00008ef0 0000a240"          .LONG   C44
    3636 00008f10 00000000           .LONG   0
    3637                    
    3638 00008f30 0000a070" U1Q4D    .LONG   C11                  ;THIS POINTS AT MESSAGE
    3639 00008f50 0000a400"          .LONG   DOLL4                ;4 FOR A DOLLAR
    3640 00008f70 00000000           .LONG   0
    3641                    
    3642 00008f90 0000a100" UFS2D    .LONG   C21                  ;THIS POINTS AT MESSAGE
    3643 00008fb0 0000a2e0"          .LONG   DOLL2                ;2 FOR A DOLLAR
    3644 00008fd0 00000000           .LONG   0
    3645                    
    3646 00008ff0 0000a100" UFS3D    .LONG   C21                  ;THIS POINTS AT MESSAGE
    3647 00009010 0000a370"          .LONG   DOLL3                ;3 FOR A DOLLAR
    3648 00009030 00000000           .LONG   0
    3649                    
    3650 00009050 0000a100" UFS4D    .LONG   C21                  ;THIS POINTS AT MESSAGE
    3651 00009070 0000a400"          .LONG   DOLL4                ;4 FOR A DOLLAR
    3652 00009090 00000000           .LONG   0
    3653                    *
    3654                    *        1 PLAY 1/DM
    3655                    *        5 PLAY 5/DM
    3656                    *
    3657 000090b0 0000a490" DM_5     .LONG   DM11
    3658 000090d0 0000a510"          .LONG   DM55
    3659 000090f0 00000000           .LONG   0
    3660                    
    3661 00009110 0000a490" DM_6     .LONG   DM11
    3662 00009130 0000a5a0"          .LONG   DM65
    3663 00009150 00000000           .LONG   0
    3664                    
    3665 00009170 0000a490" DM_7     .LONG   DM11
    3666 00009190 0000a630"          .LONG   DM75
    3667 000091b0 00000000           .LONG   0
    3668                    
    3669 000091d0 0000a490" DM_8     .LONG   DM11
    3670 000091f0 0000a6c0"          .LONG   DM85
    3671 00009210 00000000           .LONG   0
    3672                    
    3673 00009230 0000afb0" SFRANC_6     .LONG   SFRANC11
    3674 00009250 0000b020"          .LONG   SFRANC65
    3675 00009270 00000000           .LONG   0
    3676                    
    3677 00009290 0000afb0" SFRANC_7     .LONG   SFRANC11
    3678 000092b0 0000b0a0"          .LONG   SFRANC75
    3679 000092d0 00000000           .LONG   0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   78

    3680                    
    3681 000092f0 0000afb0" SFRANC_8     .LONG   SFRANC11
    3682 00009310 0000b120"          .LONG   SFRANC85
    3683 00009330 00000000           .LONG   0
    3684                    *
    3685                    *        2 PLAYS 5F / 5 PLAYS 10F
    3686                    *
    3687 00009350 0000a7d0" FIVE_10  .LONG   F25
    3688 00009370 0000a8c0"          .LONG   F510
    3689 00009390 00000000           .LONG   0
    3690                    
    3691 000093b0           FIVE_10_11
    3692 000093b0 0000a7d0"          .LONG   F25
    3693 000093d0 0000a8c0"          .LONG   F510
    3694 000093f0 0000a940"          .LONG   F1120
    3695 00009410 00000000           .LONG   0
    3696                    
    3697 00009430 0000a7d0" FOUR_10  .LONG   F25  
    3698 00009450 0000abd0"          .LONG   F410
    3699 00009470 00000000           .LONG   0
    3700                    
    3701 00009490           FOUR_10_9
    3702 00009490 0000a7d0"          .LONG   F25  
    3703 000094b0 0000abd0"          .LONG   F410
    3704 000094d0 0000a9f0"          .LONG   F4109
    3705 000094f0 00000000           .LONG   0
    3706                    
    3707 00009510 0000a850" THREE_10 .LONG   F15  
    3708 00009530 0000ac50"          .LONG   F310
    3709 00009550 00000000           .LONG   0
    3710                    
    3711 00009570           THREE_10_7
    3712 00009570 0000a850"          .LONG   F15  
    3713 00009590 0000ac50"          .LONG   F310
    3714 000095b0 0000aa90"          .LONG   F4107
    3715 000095d0 00000000           .LONG   0
    3716                    
    3717 000095f0 0000a850" TWO_10   .LONG   F15  
    3718 00009610 0000acd0"          .LONG   F210
    3719 00009630 00000000           .LONG   0
    3720                    
    3721 00009650 0000a850" TWO_10_5 .LONG   F15  
    3722 00009670 0000acd0"          .LONG   F210
    3723 00009690 0000ab30"          .LONG   F4105
    3724 000096b0 00000000           .LONG   0
    3725                    
    3726 000096d0 0000ad50" F1325    .LONG   F3X1F
    3727 000096f0 0000a7d0"          .LONG   F2F5
    3728 00009710 00000000           .LONG   0
    3729                    
    3730 00009730 0000ad50" F13255   .LONG   F3X1F
    3731 00009750 0000a7d0"          .LONG   F2F5
    3732 00009770 0000ae70"          .LONG   F52X5
    3733 00009790 00000000           .LONG   0
    3734                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   79

    3735 000097b0 0000ade0" F1235    .LONG   F2X1F
    3736 000097d0 0000a750"          .LONG   F3F5
    3737 000097f0 00000000           .LONG   0
    3738                    
    3739 00009810 0000ade0" F12355   .LONG   F2X1F
    3740 00009830 0000a750"          .LONG   F3F5
    3741 00009850 0000af10"          .LONG   F72X5
    3742 00009870 00000000           .LONG   0
    3743                    
    3744                    *
    3745                    *        500 LIRE
    3746                    *
    3747 00009890 0000b1a0" P1500L   .LONG   P1500L_P
    3748 000098b0 00000000           .LONG   0
    3749                    *
    3750                    *        1 PLAY / 20 P    3 PLAYS 50 P
    3751                    *
    3752 000098d0 0000b240" UK_120   .LONG   UK_1201
    3753 000098f0 0000b2c0"          .LONG   UK_1202
    3754 00009910 00000000           .LONG   0
    3755                    
    3756 00009930 0000b350" UK_220   .LONG   UK_2201
    3757 00009950 0000b3e0"          .LONG   UK_2202
    3758 00009970 00000000           .LONG   0
    3759                    
    3760 00009990 0000b470" UK_320   .LONG   UK_3201
    3761 000099b0 0000b4f0"          .LONG   UK_3202
    3762 000099d0 0000b580"          .LONG   UK_3203
    3763 000099f0 00000000           .LONG   0
    3764                    
    3765 00009a10 0000b610" SP_4100  .LONG   SP_11
    3766 00009a30 0000b6c0"          .LONG   SP_44
    3767 00009a50 00000000           .LONG   0
    3768                    
    3769 00009a70 0000b610" SP_5100  .LONG   SP_11
    3770 00009a90 0000b780"          .LONG   SP_54
    3771 00009ab0 00000000           .LONG   0
    3772                    
    3773 00009ad0 0000b840" AU_60    .LONG   AU_36
    3774 00009af0 0000b900"          .LONG   AU_2D
    3775 00009b10 00000000           .LONG   0
    3776                    
    3777 00009b30 0000b9a0" AU_100   .LONG   AU_520
    3778 00009b50 0000ba60"          .LONG   AU_1D
    3779 00009b70 0000baf0"          .LONG   AU_32D
    3780 00009b90 00000000           .LONG   0
    3781                    
    3782 00009bb0 0000bb90" JAP_100  .LONG   JAP_101
    3783 00009bd0 00000000           .LONG   0
    3784                    
    3785 00009bf0 0000bc30" JAP_200  .LONG   JAP_201
    3786 00009c10 00000000           .LONG   0
    3787                    
    3788 00009c30 0000bcd0" ASTA_10  .LONG   ASTA101
    3789 00009c50 0000bdb0"          .LONG   ASTA102
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   80

    3790 00009c70 00000000           .LONG   0
    3791                    
    3792 00009c90 0000bea0" ASTA_15  .LONG   ASTA151
    3793 00009cb0 0000bf60"          .LONG   ASTA152
    3794 00009cd0 00000000           .LONG   0
    3795                    
    3796 00009cf0 0000c030" BEL_120  .LONG   BEL_1201
    3797 00009d10 00000000           .LONG   0
    3798 00009d30 0000c0b0" BEL_220  .LONG   BEL_2201
    3799 00009d50 00000000           .LONG   0
    3800 00009d70 0000c130" BEL_320  .LONG   BEL_3201
    3801 00009d90 00000000           .LONG   0
    3802                    
    3803 00009db0 0000c1b0" SWED_2X5 .LONG   SWED_S51
    3804 00009dd0 0000c270"          .LONG   SWED_S52
    3805 00009df0 00000000           .LONG   0
    3806                    
    3807 00009e10 0000c310" NZ_12    .LONG   NZ_121
    3808 00009e30 00000000           .LONG   0
    3809                    
    3810 00009e50 0000b840" NZ_13    .LONG   NZ_131
    3811 00009e70 00000000           .LONG   0
    3812                    
    3813 00009e90 0000c3d0" NETH_HF  .LONG   HF_11
    3814 00009eb0 0000c460"          .LONG   HF_32
    3815 00009ed0 00000000           .LONG   0
    3816                    
    3817 00009ef0 0000c500" FINMKA   .LONG   FIN_1
    3818 00009f10 00000000           .LONG   0
    3819                    
    3820 00009f30 0000c5a0" KR_LIST  .LONG   NOR_12
    3821 00009f50 0000c660"          .LONG   NOR_35
    3822 00009f70 00000000           .LONG   0
    3823                    
    3824 00009f90 0000c5a0" DKR_LIST .LONG   DEN_12
    3825 00009fb0 0000c720"          .LONG   DEN_35
    3826 00009fd0 0000c7c0"          .LONG   DEN_710
    3827 00009ff0 00000000           .LONG   0
    3828                    
    3829 0000a010 0000c880" ANT_LIST .LONG   ANT1P25
    3830 0000a030 0000c920"          .LONG   ANT4DOL
    3831 0000a050 00000000           .LONG   0
    3832                    
    3833 0000a070       31  C11      .STRING  "1 CREDIT / 1 COIN"
    3834 0000a0f8       00           .BYTE 0
    3835 0000a100                    .EVEN
    3836 0000a100       31  C21      .STRING  "1 CREDIT / 2 COINS"
    3837 0000a190       00           .BYTE 0
    3838 0000a1a0                    .EVEN
    3839 0000a1a0       33  C43      .STRING  "3 CREDITS / 4 COINS"
    3840 0000a238       00           .BYTE 0
    3841 0000a240                    .EVEN
    3842 0000a240       34  C44      .STRING  "4 CREDITS / 4 COINS"
    3843 0000a2d8       00           .BYTE 0
    3844 0000a2e0                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   81

    3845                    
    3846 0000a2e0       32  DOLL2    .STRING  "2 CREDITS / $1.00"
    3847 0000a368       00           .BYTE 0
    3848 0000a370                    .EVEN
    3849                    
    3850 0000a370       33  DOLL3    .STRING  "3 CREDITS / $1.00"
    3851 0000a3f8       00           .BYTE 0
    3852 0000a400                    .EVEN
    3853                    
    3854 0000a400       34  DOLL4    .STRING  "4 CREDITS / $1.00"
    3855 0000a488       00           .BYTE 0
    3856 0000a490                    .EVEN
    3857                    
    3858 0000a490       31  DM11     .STRING  "1 CREDIT / 1 DM"
    3859 0000a508       00           .BYTE 0
    3860 0000a510                    .EVEN
    3861 0000a510       35  DM55     .STRING  "5 CREDITS / 5 DM"
    3862 0000a590       00           .BYTE 0
    3863 0000a5a0                    .EVEN
    3864 0000a5a0       36  DM65     .STRING  "6 CREDITS / 5 DM"
    3865 0000a620       00           .BYTE 0
    3866 0000a630                    .EVEN
    3867 0000a630       37  DM75     .STRING  "7 CREDITS / 5 DM"
    3868 0000a6b0       00           .BYTE 0
    3869 0000a6c0                    .EVEN
    3870 0000a6c0       38  DM85     .STRING  "8 CREDITS / 5 DM"
    3871 0000a740       00           .BYTE 0
    3872 0000a750                    .EVEN
    3873                    
    3874 0000a750       33  F3F5     .STRING  "3 CREDITS / 5F"
    3875 0000a7c0       00           .BYTE 0
    3876 0000a7d0                    .EVEN
    3877 0000a7d0           F2F5
    3878 0000a7d0       32  F25      .STRING  "2 CREDITS / 5F"
    3879 0000a840       00           .BYTE 0
    3880 0000a850                    .EVEN
    3881 0000a850       31  F15      .STRING  "1 CREDIT / 5F"
    3882 0000a8b8       00           .BYTE 0
    3883 0000a8c0                    .EVEN
    3884 0000a8c0       35  F510     .STRING  "5 CREDITS / 10F"
    3885 0000a938       00           .BYTE 0
    3886 0000a940                    .EVEN
    3887 0000a940       31  F1120    .STRING  "11 CREDITS / 2 X 10F"
    3888 0000a9e0       00           .BYTE 0
    3889 0000a9f0                    .EVEN
    3890 0000a9f0       39  F4109    .STRING  "9 CREDITS / 2 X 10F"
    3891 0000aa88       00           .BYTE 0
    3892 0000aa90                    .EVEN
    3893 0000aa90       37  F4107    .STRING  "7 CREDITS / 2 X 10F"
    3894 0000ab28       00           .BYTE 0
    3895 0000ab30                    .EVEN
    3896 0000ab30       35  F4105    .STRING  "5 CREDITS / 2 X 10F"
    3897 0000abc8       00           .BYTE 0
    3898 0000abd0                    .EVEN
    3899 0000abd0       34  F410     .STRING  "4 CREDITS / 10F"
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   82

    3900 0000ac48       00           .BYTE 0
    3901 0000ac50                    .EVEN
    3902 0000ac50       33  F310     .STRING  "3 CREDITS / 10F"
    3903 0000acc8       00           .BYTE 0
    3904 0000acd0                    .EVEN
    3905 0000acd0       32  F210     .STRING  "2 CREDITS / 10F"
    3906 0000ad48       00           .BYTE 0
    3907 0000ad50                    .EVEN
    3908                    
    3909 0000ad50       31  F3X1F    .STRING  "1 CREDIT / 3 X 1F"
    3910 0000add8       00           .BYTE   0
    3911 0000ade0                    .EVEN
    3912                    
    3913 0000ade0       31  F2X1F    .STRING  "1 CREDIT / 2 X 1F"
    3914 0000ae68       00           .BYTE   0
    3915 0000ae70                    .EVEN
    3916                    
    3917 0000ae70       35  F52X5    .STRING  "5 CREDITS / 2 X 5F"
    3918 0000af00       00           .BYTE   0
    3919 0000af10                    .EVEN
    3920                    
    3921 0000af10       37  F72X5    .STRING  "7 CREDITS / 2 X 5F"
    3922 0000afa0       00           .BYTE   0
    3923 0000afb0                    .EVEN
    3924                    
    3925 0000afb0       31  SFRANC11     .STRING  "1 CREDIT / 1F"
    3926 0000b018       00           .BYTE 0
    3927 0000b020                    .EVEN
    3928 0000b020       36  SFRANC65     .STRING  "6 CREDITS / 5F"
    3929 0000b090       00           .BYTE 0
    3930 0000b0a0                    .EVEN
    3931 0000b0a0       37  SFRANC75     .STRING  "7 CREDITS / 5F"
    3932 0000b110       00           .BYTE 0
    3933 0000b120                    .EVEN
    3934 0000b120       38  SFRANC85     .STRING  "8 CREDITS / 5F"
    3935 0000b190       00           .BYTE 0
    3936 0000b1a0                    .EVEN
    3937                    
    3938 0000b1a0       31  P1500L_P .STRING      "1 CREDIT / 500 LIRE"
    3939 0000b238       00           .BYTE 0
    3940 0000b240                    .EVEN
    3941                    
    3942 0000b240       31  UK_1201  .STRING         "1 CREDIT / 20 P"
    3943 0000b2b8       00           .BYTE 0
    3944 0000b2c0                    .EVEN
    3945 0000b2c0       33  UK_1202  .STRING         "3 CREDITS / 50 P"
    3946 0000b340       00           .BYTE 0
    3947 0000b350                    .EVEN
    3948                    
    3949 0000b350       32  UK_2201  .STRING         "2 CREDITS / 20 P"
    3950 0000b3d0       00           .BYTE 0
    3951 0000b3e0                    .EVEN
    3952 0000b3e0       35  UK_2202  .STRING         "5 CREDITS / 50 P"
    3953 0000b460       00           .BYTE 0
    3954 0000b470                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   83

    3955                    
    3956 0000b470       31  UK_3201  .STRING         "1 CREDIT / 30 P"
    3957 0000b4e8       00           .BYTE 0
    3958 0000b4f0                    .EVEN
    3959 0000b4f0       32  UK_3202  .STRING         "2 CREDITS / 50 P"
    3960 0000b570       00           .BYTE 0
    3961 0000b580                    .EVEN
    3962 0000b580       34  UK_3203  .STRING         "4 CREDITS / L1.00"
    3963 0000b608       00           .BYTE 0
    3964 0000b610                    .EVEN
    3965                    
    3966 0000b610       31  SP_11    .STRING         "1 CREDIT / 25 PESETA"
    3967 0000b6b0       00           .BYTE   0
    3968 0000b6c0                    .EVEN
    3969                    
    3970 0000b6c0       34  SP_44    .STRING         "4 CREDITS / 100 PESETA"
    3971 0000b770       00           .BYTE   0
    3972 0000b780                    .EVEN
    3973                    
    3974 0000b780       35  SP_54    .STRING         "5 CREDITS / 100 PESETA"
    3975 0000b830       00           .BYTE   0
    3976 0000b840                    .EVEN
    3977 0000b840           NZ_131
    3978 0000b840       31  AU_36    .STRING         "1 CREDIT / 3 X 20 CENTS"
    3979 0000b8f8       00           .BYTE   0
    3980 0000b900                    .EVEN
    3981 0000b900       32  AU_2D    .STRING         "2 CREDITS / $ 1.00"
    3982 0000b990       00           .BYTE   0
    3983 0000b9a0                    .EVEN
    3984 0000b9a0       31  AU_520   .STRING         "1 CREDIT / 5 X 20 CENTS"
    3985 0000ba58       00           .BYTE   0
    3986 0000ba60                    .EVEN
    3987 0000ba60       31  AU_1D    .STRING         "1 CREDIT / $ 1.00"
    3988 0000bae8       00           .BYTE   0
    3989 0000baf0                    .EVEN
    3990 0000baf0       33  AU_32D   .STRING         "3 CREDITS / $ 2.00"
    3991 0000bb80       00           .BYTE   0
    3992 0000bb90                    .EVEN
    3993 0000bb90       31  JAP_101  .STRING         "1 CREDIT / 100 YEN"
    3994 0000bc20       00           .BYTE   0
    3995 0000bc30                    .EVEN
    3996 0000bc30       32  JAP_201  .STRING         "2 CREDITS / 100 YEN"
    3997 0000bcc8       00           .BYTE   0
    3998 0000bcd0                    .EVEN
    3999 0000bcd0       31  ASTA101  .STRING         "1 CREDIT / 2 X 5 SCHILLING"
    4000 0000bda0       00           .BYTE   0
    4001 0000bdb0                    .EVEN
    4002 0000bdb0       33  ASTA102  .STRING         "3 CREDITS / 2 X 10 SCHILLING"
    4003 0000be90       00           .BYTE   0
    4004 0000bea0                    .EVEN
    4005 0000bea0       31  ASTA151  .STRING         "1 CREDIT / 5 SCHILLING"
    4006 0000bf50       00           .BYTE   0
    4007 0000bf60                    .EVEN
    4008 0000bf60       32  ASTA152  .STRING         "2 CREDITS / 10 SCHILLING"
    4009 0000c020       00           .BYTE   0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   84

    4010 0000c030                    .EVEN
    4011                    
    4012 0000c030       31  BEL_1201 .STRING         "1 CREDIT / 2OF"
    4013 0000c0a0       00           .BYTE   0
    4014 0000c0b0                    .EVEN
    4015 0000c0b0       32  BEL_2201 .STRING         "2 CREDITS / 2OF"
    4016 0000c128       00           .BYTE   0
    4017 0000c130                    .EVEN
    4018 0000c130       33  BEL_3201 .STRING         "3 CREDITS / 2OF"
    4019 0000c1a8       00           .BYTE   0
    4020 0000c1b0                    .EVEN
    4021                    
    4022 0000c1b0       31  SWED_S51 .STRING         "1 CREDIT / 3 X 1 KRONA"
    4023 0000c260       00           .BYTE   0
    4024 0000c270                    .EVEN
    4025 0000c270       32  SWED_S52 .STRING         "2 CREDITS / 5 KRONA"
    4026 0000c308       00           .BYTE   0
    4027 0000c310                    .EVEN
    4028                    
    4029 0000c310       31  NZ_121   .STRING         "1 CREDIT / 2 X 20 CENTS"
    4030 0000c3c8       00           .BYTE   0
    4031 0000c3d0                    .EVEN
    4032                    
    4033 0000c3d0       31  HF_11    .STRING         "1 CREDIT / 1 HFI"
    4034 0000c450       00           .BYTE   0
    4035 0000c460                    .EVEN
    4036                    
    4037 0000c460       33  HF_32    .STRING         "3 CREDITS / 2.5 HFI"
    4038 0000c4f8       00           .BYTE   0
    4039 0000c500                    .EVEN
    4040                    
    4041 0000c500       31  FIN_1    .STRING         "1 CREDIT / 1 MARKKA"
    4042 0000c598       00           .BYTE   0
    4043 0000c5a0                    .EVEN
    4044                    
    4045 0000c5a0           DEN_12
    4046 0000c5a0       31  NOR_12   .STRING         "1 CREDIT / 2 X 1 KRONE"
    4047 0000c650       00           .BYTE 0
    4048 0000c660                    .EVEN
    4049                    
    4050 0000c660       33  NOR_35   .STRING         "3 CREDITS / 5 X 1 KRONE"
    4051 0000c718       00           .BYTE 0
    4052 0000c720                    .EVEN
    4053                    
    4054 0000c720       33  DEN_35   .STRING         "3 CREDITS / 5 KRONE"
    4055 0000c7b8       00           .BYTE 0
    4056 0000c7c0                    .EVEN
    4057                    
    4058 0000c7c0       37  DEN_710  .STRING         "7 CREDITS / 2 X 5 KRONE"
    4059 0000c878       00           .BYTE 0
    4060 0000c880                    .EVEN
    4061                    
    4062 0000c880       31  ANT1P25  .STRING         "1 CREDIT / 25 CENTS"
    4063 0000c918       00           .BYTE 0
    4064 0000c920                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   85

    4065                    
    4066 0000c920       34  ANT4DOL  .STRING         "4 CREDITS / 1 GUILDER"
    4067 0000c9c8       00           .BYTE 0
    4068 0000c9d0                    .EVEN
    4069                    
    4070                    **************************************************************************
    4071                    *                                                                        *
    4072                    *          COIN SLOT TITLES                                              *
    4073                    *                                                                        *
    4074                    **************************************************************************
    4075 0000c9d0       32  USA_QQ       .STRING   "25 CENT       25 CENT"
    4076 0000ca78       00               .BYTE 0
    4077 0000ca80                        .EVEN
    4078 0000ca80       32  USA_QDQ       .STRING   "25 CENT     $1.00     25 CENT"
    4079 0000cb68       00               .BYTE 0
    4080 0000cb70                        .EVEN
    4081 0000cb70       31  GERMAN_15    .STRING   "1 DM          5 DM"
    4082 0000cc00       00               .BYTE 0
    4083 0000cc10                        .EVEN
    4084 0000cc10       35  FRENCH510    .STRING   "5 F           10 F"
    4085 0000cca0       00               .BYTE 0
    4086 0000ccb0                        .EVEN
    4087 0000ccb0           FRENCH1F5F
    4088 0000ccb0       31  SWISS15      .STRING   "1 F           5 F"
    4089 0000cd38       00               .BYTE 0
    4090 0000cd40                        .EVEN
    4091 0000cd40       35  ITALYLIRE    .STRING   "500 LIRE      500 LIRE"
    4092 0000cdf0       00               .BYTE 0
    4093 0000ce00                        .EVEN
    4094 0000ce00       32  UK2050       .STRING   "20 P          50 P"   
    4095 0000ce90       00               .BYTE 0
    4096 0000cea0                        .EVEN
    4097 0000cea0       35  UK_ELEC      .STRING   "50P    10P   L1.00"   
    4098 0000cf30       00               .BYTE 0
    4099 0000cf40                        .EVEN
    4100 0000cf40       43  UK_CCU       .STRING   "CCU ON LEFT SLOT            "   
    4101 0000d020       00               .BYTE 0
    4102 0000d030                        .EVEN
    4103 0000d030       32  PESETA25     .STRING   "25 PESETA     100 PESETA"
    4104 0000d0f0       00               .BYTE 0
    4105 0000d100                        .EVEN
    4106 0000d100       32  AUST20C      .STRING   "20 CENT       $ 1.00"
    4107 0000d1a0       00               .BYTE 0
    4108 0000d1b0                        .EVEN
    4109 0000d1b0       31  YEN100       .STRING   "100 YEN       100 YEN"
    4110 0000d258       00               .BYTE 0
    4111 0000d260                        .EVEN
    4112 0000d260       35  SHILL510     .STRING   "5 SCHILLING   10 SCHILLING"
    4113 0000d330       00               .BYTE 0
    4114 0000d340                        .EVEN
    4115 0000d340       32  FRANC20      .STRING   "20 F          20 F"
    4116 0000d3d0       00               .BYTE 0
    4117 0000d3e0                        .EVEN
    4118 0000d3e0       31  KRONA5       .STRING   "1 KRONA       5 KRONA"
    4119 0000d488       00               .BYTE 0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   86

    4120 0000d490                        .EVEN
    4121 0000d490       32  NZ20         .STRING   "20 CENT       20 CENT"
    4122 0000d538       00               .BYTE 0
    4123 0000d540                        .EVEN
    4124 0000d540       31  HFSLOT       .STRING   "1 HFI         2.5 HFI"
    4125 0000d5e8       00               .BYTE 0
    4126 0000d5f0                        .EVEN
    4127                    
    4128 0000d5f0       31  MKSLOT       .STRING   "1 MARKKA      1 MARKKA"
    4129 0000d6a0       00               .BYTE 0
    4130 0000d6b0                        .EVEN
    4131                    
    4132 0000d6b0       31  NKRSLOT      .STRING   "1 KRONE       1 KRONE"
    4133 0000d758       00               .BYTE 0
    4134 0000d760                        .EVEN
    4135                    
    4136 0000d760       31  DKRSLOT      .STRING   "1 KRONE       5 KRONE"
    4137 0000d808       00               .BYTE 0
    4138 0000d810                        .EVEN
    4139                    
    4140 0000d810       32  ANTSLOT      .STRING   "25 CENTS      1 GUILDER"
    4141 0000d8c8       00               .BYTE 0
    4142 0000d8d0                        .EVEN
    4143                    
    4144                    **************************************************************************
    4145                    *                                                                        *
    4146                    *          MENU DESCRIPTORS                                              *
    4147                    *                                                                        *
    4148                    **************************************************************************
    4149                    *
    4150                    *        MAIN TEST MENU
    4151                    *
    4152 0000d8d0           MEN_MAIN
    4153 0000d8d0 00000000!          .LONG   RD15FONT        ;FONT
    4154 0000d8f0 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4155 0000d910 00015cc0"          .LONG   MESSMAIN        ;TITLE
    4156 0000d930     fefe           .WORD   NARCS_WHITE     ;COLOR OF TITLE
    4157 0000d940     00a9           .WORD   MENU_X          ;UL X
    4158 0000d950     0090           .WORD   MENU_Y          ;UL Y
    4159 0000d960     002a           .WORD   MENU_DY         ;VERTICAL SPACING
    4160 0000d970     fefe           .WORD   NARCS_WHITE     ;COLOR WHEN NOT SELECTED
    4161 0000d980     0028           .WORD   BAR_HITE        ;HEIGHT OF SELECTION BAR
    4162 0000d990     fff4           .WORD   BAR_DY          ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4163 0000d9a0     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4164 0000d9b0     00eb           .WORD   BAR_WID       ;WIDTH OF BAR!
    4165 0000d9c0     f1f1           .WORD   NARCS_DECAY      ;TEXT COLOR OF SELECTED ITEM
    4166 0000d9d0 000102d0"          .LONG   MESS_DIAG,GO_DIAG,DIAG_HELP
    4167 0000da30 00010360"          .LONG   MESS_COIN_AUD,GO_BOOK,COIN_HELP
    4168 0000da90 000103f0"          .LONG   MESS_GAME_AUD,GO_AUD,AUDIT_HELP
    4169 0000daf0 00010450"          .LONG   MESS_GAME_ADJ,GO_ADJ,ADJUST_HELP
    4170 0000db50 000104d0"          .LONG   MESS_UTIL,GO_UTIL,UTIL_HELP
    4171 0000dbb0 00010520"          .LONG   MESS_EXIT,0,EXIT_HELP       ;SPECIAL CASE!
    4172 0000dc10 00000000           .LONG   0               ;END
    4173                    *
    4174                    *        UTILITES MENU GOES LEFT OF CENTER
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   87

    4175                    *
    4176              0108  UM_WID   EQU     264
    4177              00b8  UM_X     EQU     TIT_ULX+GAP+MB_XWID+(UM_WID/2)+C_KLUDGE
    4178                    
    4179 0000dc30 00000000! MEN_UTIL .LONG   RD15FONT        ;FONT
    4180 0000dc50 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4181 0000dc70 00015d50"          .LONG   MESSUTIL        ;TITLE
    4182 0000dc90     d9d9           .WORD   NARCS_PINK      ;COLOR OF TITLE
    4183 0000dca0     00b8           .WORD   UM_X            ;UL X
    4184 0000dcb0     008b           .WORD   MENU_Y-5        ;UL Y
    4185 0000dcc0     001f           .WORD   1FH             ;VERTICAL SPACING
    4186                    *         .WORD   24H
    4187 0000dcd0     d9d9           .WORD   NARCS_PINK      ;COLOR WHEN NOT SELECTED
    4188 0000dce0     001e           .WORD   30              ;HEIGHT OF SELECTION BAR
    4189 0000dcf0     fff9           .WORD   -7              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4190                    *         .WORD   BAR_HITE        ;HEIGHT OF SELECTION BAR
    4191                    *         .WORD   BAR_DY          ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4192 0000dd00     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4193 0000dd10     0108           .WORD   UM_WID          ;WIDTH OF BAR!
    4194 0000dd20     f1f1           .WORD   NARCS_DECAY      ;TEXT COLOR OF SELECTED ITEM
    4195 0000dd30 00010d20"          .LONG   MESS_OPMESS,DO_OPMESS,OPMESS_HELP
    4196 0000dd90 00010950"          .LONG   MESS_CLCRED,DO_CLCRED,CLCRED_HELP
    4197 0000ddf0 00010a40"          .LONG   MESS_CLCOIN,DO_CLCOIN,CLCOIN_HELP
    4198 0000de50 00010ae0"          .LONG   MESS_CLAUD,DO_CLAUD,CLAUD_HELP
    4199 0000deb0 00010c00"          .LONG   MESS_HSRES,DO_HSRES,HSRES_HELP
    4200 0000df10 00010ed0"          .LONG   MESS_DEF_ADJ,DO_DEF_ADJ,DEF_ADJ_HELP
    4201 0000df70 00011000"          .LONG   MESS_FACSET,DO_FACSET,FACSET_HELP
    4202 0000dfd0 00010230"          .LONG   MESS_MM,0,BLNK_HELP        ;RETURN TO MAIN MENU
    4203 0000e030 00000000           .LONG   0               ;END
    4204                    *
    4205                    *        DIAGNOSTIC TESTS MENU
    4206                    *
    4207 0000e050           MEN_DIAG
    4208 0000e050 00000000!          .LONG   RD15FONT        ;FONT
    4209 0000e070 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4210 0000e090 000102d0"          .LONG   MESSDIAG        ;TITLE
    4211 0000e0b0     f9f9           .WORD   NARCS_RED       ;COLOR OF TITLE
    4212 0000e0c0     0100           .WORD   256             ;UL X
    4213 0000e0d0     008d           .WORD   MENU_Y-3          ;UL Y
    4214 0000e0e0     0025           .WORD   37              ;VERTICAL SPACING
    4215 0000e0f0     f9f9           .WORD   NARCS_RED       ;COLOR WHEN NOT SELECTED
    4216 0000e100     0022           .WORD   34              ;HEIGHT OF SELECTION BAR
    4217 0000e110     fff6           .WORD   -10             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4218                    *         .WORD   MENU_DY         ;VERTICAL SPACING
    4219                    *         .WORD   NARCS_RED       ;COLOR WHEN NOT SELECTED
    4220                    *         .WORD   BAR_HITE        ;HEIGHT OF SELECTION BAR
    4221                    *         .WORD   BAR_DY          ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4222 0000e120     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4223 0000e130     00fa           .WORD   250             ;WIDTH OF BAR!  (A LITTLE FATTER)
    4224 0000e140     f1f1           .WORD   NARCS_DECAY      ;TEXT COLOR OF SELECTED ITEM
    4225 0000e150 00011110"          .LONG   MESS_SWTEST,GO_SWTEST,BLNK_HELP   
    4226 0000e1b0 00011170"          .LONG   MESS_ROMTEST,GO_ROMTEST,BLNK_HELP  
    4227              0003  ROM_LEV  EQU     3               ;TEST NUMBER FOLLOWING ROM TEST
    4228 0000e210 000111f0"          .LONG   MESS_CPUTEST,GO_CPUTEST,BLNK_HELP  
    4229              0004  RTR_LEV  EQU     4               ;TEST NUMBER FOLLOWING CPU TEST (FOR RETURN)
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   88

    4230 0000e270 00011270"          .LONG   M_STEST,GO_STEST,BLNK_HELP
    4231 0000e2d0 00011300"          .LONG   MESS_PATTERNS,GO_PATTERNS,BLNK_HELP
    4232 0000e330 00010e40"          .LONG   MESS_BURN,DO_BURN,BLNK_HELP
    4233 0000e390 00010230"          .LONG   MESS_MM,0,BLNK_HELP        ;RETURN TO MAIN MENU
    4234 0000e3f0 00000000           .LONG   0
    4235                    
    4236              0140  STM_WID   EQU     320
    4237                    
    4238 0000e410           MEN_STEST
    4239 0000e410 00000000!          .LONG   RD15FONT        ;FONT
    4240 0000e430 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4241 0000e450 00011270"          .LONG   M_STEST         ;TITLE
    4242 0000e470     ffff           .WORD   NARCS_PURPLE    ;COLOR OF TITLE
    4243 0000e480     0100           .WORD   256             ;UL X
    4244 0000e490     008b           .WORD   MENU_Y-5        ;UL Y
    4245 0000e4a0     001f           .WORD   1FH             ;VERTICAL SPACING
    4246 0000e4b0     ffff           .WORD   NARCS_PURPLE     ;COLOR WHEN NOT SELECTED
    4247 0000e4c0     001e           .WORD   30              ;HEIGHT OF SELECTION BAR
    4248 0000e4d0     fff9           .WORD   -7              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4249 0000e4e0     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4250 0000e4f0     0140           .WORD   STM_WID          ;WIDTH OF BAR!
    4251 0000e500     f1f1           .WORD   NARCS_DECAY      ;TEXT COLOR OF SELECTED ITEM
    4252 0000e510 00011690"          .LONG   M_SYNT,GO_SYNT,SND_HELP
    4253 0000e570 00011720"          .LONG   M_DIGT,GO_DIGT,SND_HELP
    4254 0000e5d0 000117a0"          .LONG   M_SYNP,GO_SYNP,SND_PLAY
    4255 0000e630 00011830"          .LONG   M_DIGP,GO_DIGP,SND_PLAY
    4256 0000e690 000115c0"          .LONG   MESS_DIAGM,0,SND_HELP
    4257 0000e6f0 00010230"          .LONG   MESS_MM,FORCE_MAIN,NO_HELP        ;RETURN TO MAIN MENU
    4258 0000e750 00000000           .LONG   0
    4259                    *
    4260                    *        PRESS ANY BUTTON TO CONTINUE
    4261                    *
    4262 0000e770           ANY_MENU
    4263 0000e770 00000000!          .LONG   RD15FONT        ;FONT
    4264 0000e790 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4265 0000e7b0 00000000           .LONG   0               ;TITLE
    4266 0000e7d0     0000           .WORD   0               ;COLOR OF TITLE
    4267 0000e7e0     0100           .WORD   256             ;UL X
    4268 0000e7f0     0130           .WORD   130H            ;UL Y
    4269 0000e800     002a           .WORD   MENU_DY         ;VERTICAL SPACING
    4270 0000e810     2c2c           .WORD   NARCS_CYAN      ;COLOR WHEN NOT SELECTED
    4271 0000e820     0028           .WORD   BAR_HITE        ;HEIGHT OF SELECTION BAR
    4272 0000e830     fff4           .WORD   BAR_DY          ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4273 0000e840     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4274 0000e850     012c           .WORD   300             ;WIDTH OF BAR!
    4275 0000e860     f1f1           .WORD   NARCS_DECAY      ;TEXT COLOR OF SELECTED ITEM
    4276 0000e870 00010170"          .LONG   MESS_ANY,0,NO_HELP   
    4277 0000e8d0 00000000           .LONG   0
    4278                    *
    4279                    *        MONITOR PATTERNS
    4280                    *
    4281 0000e8f0           MEN_PATTERNS
    4282 0000e8f0 00000000!          .LONG   RD15FONT        ;FONT
    4283 0000e910 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4284 0000e930 00011300"          .LONG   MESSPAT         ;TITLE
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   89

    4285 0000e950     fbfb           .WORD   NARCS_YELLOW    ;COLOR OF TITLE
    4286 0000e960     0100           .WORD   256             ;UL X      (CENTER IT!)
    4287 0000e970     008d           .WORD   MENU_Y-3        ;UL Y
    4288 0000e980     0025           .WORD   37              ;VERTICAL SPACING
    4289 0000e990     fbfb           .WORD   NARCS_YELLOW    ;COLOR WHEN NOT SELECTED
    4290 0000e9a0     0022           .WORD   34              ;HEIGHT OF SELECTION BAR
    4291 0000e9b0     fff6           .WORD   -10             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4292 0000e9c0     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4293 0000e9d0     012c           .WORD   300             ;WIDTH OF BAR!
    4294 0000e9e0     f1f1           .WORD   NARCS_DECAY      ;TEXT COLOR OF SELECTED ITEM
    4295 0000e9f0 00011390"          .LONG   MESS_RED,GO_RED,BLNK_HELP
    4296 0000ea50 000113f0"          .LONG   MESS_GREEN,GO_GREEN,BLNK_HELP
    4297 0000eab0 00011460"          .LONG   MESS_BLUE,GO_BLUE,BLNK_HELP
    4298 0000eb10 000114c0"          .LONG   MESS_BARS,GO_BARS,BLNK_HELP
    4299 0000eb70 00011520"          .LONG   MESS_CROSS,GO_CROSS,BLNK_HELP
    4300 0000ebd0 000115c0"          .LONG   MESS_DIAGM,0,BLNK_HELP
    4301 0000ec30 00010230"          .LONG   MESS_MM,FORCE_MAIN,NO_HELP        ;RETURN TO MAIN MENU
    4302 0000ec90 00000000           .LONG   0
    4303                    *
    4304                    *        DETAILED COINAGE AVAILABLE (ON 1ST COINAGE PAGE)
    4305                    *
    4306 0000ecb0           MEN_DETAIL
    4307 0000ecb0 00000000!          .LONG   RD7FONT         ;FONT
    4308 0000ecd0 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4309 0000ecf0 00011300"          .LONG   MESSPAT         ;TITLE
    4310 0000ed10     fbfb           .WORD   NARCS_YELLOW       ;COLOR OF TITLE
    4311 0000ed20     0100           .WORD   256             ;UL X      (CENTER IT!)
    4312 0000ed30     0162           .WORD   354             ;UL Y
    4313 0000ed40     0014           .WORD   20              ;VERTICAL SPACING
    4314 0000ed50     2c2c           .WORD   NARCS_CYAN      ;COLOR WHEN NOT SELECTED
    4315 0000ed60     0012           .WORD   18              ;HEIGHT OF SELECTION BAR
    4316 0000ed70     fffb           .WORD   -5              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4317 0000ed80     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4318 0000ed90     00b4           .WORD   180             ;WIDTH OF BAR!
    4319 0000eda0     f1f1           .WORD   NARCS_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4320 0000edb0 0000ffb0"          .LONG   MESS_DETAIL,0,NO_HELP               ;DETAILED SECTION
    4321 0000ee10 00010230"          .LONG   MESS_MM,FORCE_MAIN,NO_HELP   ;RETURN TO MAIN MENU
    4322 0000ee70 00000000           .LONG   0
    4323                    *
    4324                    *        CLEAR SUB-TOTALS (ON DETAILED COINAGE PAGE)
    4325                    *
    4326 0000ee90           MEN_CLR_SUB
    4327 0000ee90 00000000!          .LONG   RD7FONT         ;FONT
    4328 0000eeb0 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4329 0000eed0 00011300"          .LONG   MESSPAT         ;TITLE
    4330 0000eef0     fbfb           .WORD   NARCS_YELLOW       ;COLOR OF TITLE
    4331 0000ef00     0100           .WORD   256             ;UL X      (CENTER IT!)
    4332 0000ef10     0168           .WORD   168H            ;UL Y
    4333 0000ef20     0011           .WORD   17              ;VERTICAL SPACING
    4334 0000ef30     2c2c           .WORD   NARCS_CYAN      ;COLOR WHEN NOT SELECTED
    4335 0000ef40     0012           .WORD   18              ;HEIGHT OF SELECTION BAR
    4336 0000ef50     fffb           .WORD   -5              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4337 0000ef60     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4338 0000ef70     00b4           .WORD   180             ;WIDTH OF BAR!
    4339 0000ef80     f1f1           .WORD   NARCS_DECAY     ;TEXT COLOR OF SELECTED ITEM
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   90

    4340 0000ef90 0000fea0"          .LONG   MESS_CLEAR_SUBS,0,NO_HELP           ;CLEAR SUB-TOTALS
    4341 0000eff0 00010230"          .LONG   MESS_MM,FORCE_MAIN,NO_HELP   ;RETURN TO MAIN MENU
    4342 0000f050 00000000           .LONG   0
    4343                    *
    4344                    *        YES/NO   (FOR ARE YOU SURE?)
    4345                    *
    4346 0000f070 00000000! MEN_YN   .LONG   RD15FONT        ;FONT
    4347 0000f090 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4348 0000f0b0 000102d0"          .LONG   MESSDIAG        ;TITLE
    4349 0000f0d0     f9f9           .WORD   NARCS_RED       ;COLOR OF TITLE
    4350 0000f0e0     0100           .WORD   256             ;UL X
    4351 0000f0f0     0104           .WORD   260             ;UL Y
    4352 0000f100     001e           .WORD   30              ;VERTICAL SPACING
    4353 0000f110     fbfb           .WORD   NARCS_YELLOW    ;COLOR WHEN NOT SELECTED
    4354 0000f120     001e           .WORD   30              ;HEIGHT OF SELECTION BAR
    4355 0000f130     fff9           .WORD   -7              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4356 0000f140     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4357 0000f150     0064           .WORD   100             ;WIDTH OF BAR!  (A LITTLE FATTER)
    4358 0000f160     f1f1           .WORD   NARCS_DECAY      ;TEXT COLOR OF SELECTED ITEM
    4359 0000f170 0000fe60"          .LONG   MESS_YES,0,NO_HELP
    4360 0000f1d0 0000fe80"          .LONG   MESS_NO,0,NO_HELP
    4361 0000f230 00000000           .LONG   0
    4362                    *
    4363                    *        NEXT AUDIT PAGE
    4364                    *
    4365 0000f250 00000000! MEN_AP1  .LONG   RD7FONT         ;FONT
    4366 0000f270 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4367 0000f290 00011300"          .LONG   MESSPAT         ;TITLE
    4368 0000f2b0     fbfb           .WORD   NARCS_YELLOW       ;COLOR OF TITLE
    4369 0000f2c0     0100           .WORD   256             ;UL X      (CENTER IT!)
    4370 0000f2d0     0162           .WORD   354             ;UL Y
    4371 0000f2e0     0014           .WORD   20              ;VERTICAL SPACING
    4372 0000f2f0     2c2c           .WORD   NARCS_CYAN      ;COLOR WHEN NOT SELECTED
    4373 0000f300     0012           .WORD   18              ;HEIGHT OF SELECTION BAR
    4374 0000f310     fffb           .WORD   -5              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4375 0000f320     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4376 0000f330     00b4           .WORD   180             ;WIDTH OF BAR!
    4377 0000f340     f1f1           .WORD   NARCS_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4378 0000f350 00010050"          .LONG   MESS_TOPAGE2,0,NO_HELP               ;DETAILED SECTION
    4379 0000f3b0 00010230"          .LONG   MESS_MM,FORCE_MAIN,NO_HELP   ;RETURN TO MAIN MENU
    4380 0000f410 00000000           .LONG   0
    4381                    *
    4382                    *        PREVIOUS AUDIT PAGE?  (ON 2ND GAME AUDIT PAGE)
    4383                    *
    4384 0000f430 00000000! MEN_AP2  .LONG   RD7FONT         ;FONT
    4385 0000f450 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    4386 0000f470 00011300"          .LONG   MESSPAT         ;TITLE
    4387 0000f490     fbfb           .WORD   NARCS_YELLOW       ;COLOR OF TITLE
    4388 0000f4a0     0100           .WORD   256             ;UL X      (CENTER IT!)
    4389 0000f4b0     0162           .WORD   354             ;UL Y
    4390 0000f4c0     0014           .WORD   20              ;VERTICAL SPACING
    4391 0000f4d0     2c2c           .WORD   NARCS_CYAN      ;COLOR WHEN NOT SELECTED
    4392 0000f4e0     0012           .WORD   18              ;HEIGHT OF SELECTION BAR
    4393 0000f4f0     fffb           .WORD   -5              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4394 0000f500     0008           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   91

    4395 0000f510     00b4           .WORD   180             ;WIDTH OF BAR!
    4396 0000f520     f1f1           .WORD   NARCS_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4397 0000f530 000100d0"          .LONG   MESS_BACKP1,0,NO_HELP               ;DETAILED SECTION
    4398 0000f590 00010230"          .LONG   MESS_MM,FORCE_MAIN,NO_HELP   ;RETURN TO MAIN MENU
    4399 0000f5f0 00000000           .LONG   0
    4400                    
    4401                    **************************************************************************
    4402                    *                                                                        *
    4403                    *         HELP MENUS FOR MAIN MENU                                       *
    4404                    *                                                                        *
    4405                    **************************************************************************
    4406                    *        HM_JUST         0 = CENTER   1 = LEFT
    4407                    *        HM_COLOR
    4408                    *        HM_ENTS 
    4409                    *
    4410 0000f610           DIAG_HELP
    4411 0000f610     0000           .WORD   0               ;CENTER JUSTIFY
    4412 0000f620     d9d9           .WORD   NARCS_PINK      ;COLOR
    4413 0000f630     0006           .WORD   6               ;2 ENTRIES
    4414 0000f640 00011110"          .LONG   MESS_SWTEST
    4415 0000f660 00011170"          .LONG   MESS_ROMTEST
    4416 0000f680 000111f0"          .LONG   MESS_CPUTEST
    4417 0000f6a0 00011270"          .LONG   M_STEST
    4418 0000f6c0 00011300"          .LONG   MESS_PATTERNS
    4419 0000f6e0 00010dd0"          .LONG   U_BURNIN
    4420                    
    4421 0000f700           COIN_HELP
    4422 0000f700     0000           .WORD   0               ;CENTER JUSTIFY
    4423 0000f710     d9d9           .WORD   NARCS_PINK      ;COLOR
    4424 0000f720     0003           .WORD   3               ;2 ENTRIES
    4425 0000f730 000105b0"          .LONG   CH_0
    4426 0000f750 00010620"          .LONG   CH_1
    4427 0000f770 00010680"          .LONG   CH_2
    4428                    
    4429 0000f790           AUDIT_HELP
    4430 0000f790     0000           .WORD   0               ;CENTER JUSTIFY
    4431 0000f7a0     d9d9           .WORD   NARCS_PINK      ;COLOR
    4432 0000f7b0     0002           .WORD   2               ;2 ENTRIES
    4433 0000f7c0 00010710"          .LONG   AH_1
    4434 0000f7e0 00010760"          .LONG   AH_2
    4435                    
    4436 0000f800           ADJUST_HELP
    4437 0000f800     0000           .WORD   0               ;CENTER JUSTIFY
    4438 0000f810     d9d9           .WORD   NARCS_PINK      ;COLOR
    4439 0000f820     0003           .WORD   3               ;3 ENTRIES
    4440 0000f830 000107e0"          .LONG   AD_1
    4441 0000f850 00010850"          .LONG   AD_2
    4442 0000f870 000108d0"          .LONG   AD_3
    4443                    
    4444 0000f890           UTIL_HELP
    4445 0000f890     0000           .WORD   0               ;CENTER JUSTIFY
    4446 0000f8a0     d9d9           .WORD   NARCS_PINK      ;COLOR
    4447                    *         .WORD    5               ;UNTIL OPERATOR MESSAGE IS READY!
    4448 0000f8b0     0006           .WORD   6               ;6 ENTRIES
    4449 0000f8c0 00010c90"          .LONG   U_OPMESS
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   92

    4450 0000f8e0 00010950"          .LONG   U_CLR_CRED
    4451 0000f900 00010a40"          .LONG   U_CLR_COIN
    4452 0000f920 00010ae0"          .LONG   U_CLR_AUD
    4453 0000f940 00010b70"          .LONG   U_HSRESET
    4454 0000f960 00010f70"          .LONG   U_FACTORY
    4455                    
    4456 0000f980           EXIT_HELP
    4457 0000f980     0000           .WORD   0               ;CENTER JUSTIFY
    4458 0000f990     d9d9           .WORD   NARCS_PINK      ;COLOR
    4459 0000f9a0     0001           .WORD   1               ;1 ENTRY
    4460 0000f9b0 000110b0"          .LONG   U_END
    4461                    
    4462                    *
    4463                    *        HELP FOR UTILITY MENU
    4464                    *
    4465 0000f9d0           CLCRED_HELP
    4466 0000f9d0     0000           .WORD   0               ;CENTER JUSTIFY
    4467 0000f9e0     2c2c           .WORD   NARCS_CYAN      ;COLOR
    4468 0000f9f0     0003           .WORD   3               ;2 ENTRIES
    4469 0000fa00 000150f0"          .LONG   MEH_CLCRED1
    4470 0000fa20 00015150"          .LONG   MEH_CLCRED2
    4471 0000fa40 000151d0"          .LONG   MEH_CLCRED3
    4472                    
    4473 0000fa60           CLCOIN_HELP
    4474 0000fa60     0000           .WORD   0               ;CENTER JUSTIFY
    4475 0000fa70     2c2c           .WORD   NARCS_CYAN      ;COLOR
    4476 0000fa80     0004           .WORD   4               ;2 ENTRIES
    4477 0000fa90 00015240"          .LONG   MEH_CLCOIN1
    4478 0000fab0 000152c0"          .LONG   MEH_CLCOIN2
    4479 0000fad0 00015330"          .LONG   MEH_CLCOIN3
    4480 0000faf0 000153a0"          .LONG   MEH_CLCOIN4
    4481                    
    4482 0000fb10           CLAUD_HELP
    4483 0000fb10     0000           .WORD   0               ;CENTER JUSTIFY
    4484 0000fb20     2c2c           .WORD   NARCS_CYAN      ;COLOR
    4485 0000fb30     0002           .WORD   2               ;2 ENTRIES
    4486 0000fb40 00015410"          .LONG   MEH_CLAUD1
    4487 0000fb60 00015490"          .LONG   MEH_CLAUD2
    4488                    
    4489 0000fb80           HSRES_HELP
    4490 0000fb80     0000           .WORD   0               ;CENTER JUSTIFY
    4491 0000fb90     2c2c           .WORD   NARCS_CYAN      ;COLOR
    4492 0000fba0     0003           .WORD   3               ;2 ENTRIES
    4493 0000fbb0 000154f0"          .LONG   MEH_RESHS1
    4494 0000fbd0 00015580"          .LONG   MEH_RESHS2
    4495 0000fbf0 00015610"          .LONG   MEH_RESHS3
    4496                    
    4497 0000fc10           OPMESS_HELP
    4498 0000fc10     0000           .WORD   0               ;CENTER JUSTIFY
    4499 0000fc20     2c2c           .WORD   NARCS_CYAN      ;COLOR
    4500 0000fc30     0004           .WORD   4               ;2 ENTRIES
    4501 0000fc40 00015690"          .LONG   MEH_CUSM1
    4502 0000fc60 00015710"          .LONG   MEH_CUSM2
    4503 0000fc80 00015770"          .LONG   MEH_CUSM3
    4504 0000fca0 000157e0"          .LONG   MEH_CUSM4
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   93

    4505                    
    4506 0000fcc0           DEF_ADJ_HELP
    4507 0000fcc0     0000           .WORD   0               ;CENTER JUSTIFY
    4508 0000fcd0     2c2c           .WORD   NARCS_CYAN      ;COLOR
    4509 0000fce0     0004           .WORD   4               ;2 ENTRIES
    4510 0000fcf0 00015850"          .LONG   MEH_DEFA1
    4511 0000fd10 000158c0"          .LONG   MEH_DEFA2
    4512 0000fd30 00015940"          .LONG   MEH_DEFA3
    4513 0000fd50 000159b0"          .LONG   MEH_DEFA4
    4514                    
    4515 0000fd70           FACSET_HELP
    4516 0000fd70     0000           .WORD   0               ;CENTER JUSTIFY
    4517 0000fd80     2c2c           .WORD   NARCS_CYAN      ;COLOR
    4518 0000fd90     0006           .WORD   6               ;2 ENTRIES
    4519 0000fda0 00015a20"          .LONG   MEH_FAC1
    4520 0000fdc0 00015ab0"          .LONG   MEH_FAC2
    4521 0000fde0 00015b40"          .LONG   MEH_FAC3
    4522 0000fe00 00015b90"          .LONG   MEH_FAC4
    4523 0000fe20 00015c10"          .LONG   MEH_FAC5
    4524 0000fe40 00015c90"          .LONG   MEH_FAC6
    4525                    
    4526                    **************************************************************************
    4527                    *                                                                        *
    4528                    *          TEXT STRINGS                                                  *
    4529                    *                                                                        *
    4530                    **************************************************************************
    4531 0000fe60           MESS_YES
    4532 0000fe60       59           .STRING         "YES"
    4533 0000fe78       00           .BYTE           0
    4534 0000fe80                    .EVEN
    4535                    
    4536 0000fe80       4e  MESS_NO  .STRING         "NO"
    4537 0000fe90       00           .BYTE           0
    4538 0000fea0                    .EVEN
    4539                    
    4540 0000fea0           MESS_CLEAR_SUBS
    4541 0000fea0       43           .STRING         "CLEAR SUBTOTALS"
    4542 0000ff18       00           .BYTE           0
    4543 0000ff20                    .EVEN
    4544                    
    4545 0000ff20           MESS_SUBS_CLEAR
    4546 0000ff20       53           .STRING         "SUBTOTALS CLEARED"
    4547 0000ffa8       00           .BYTE           0
    4548 0000ffb0                    .EVEN
    4549                    
    4550 0000ffb0           MESS_DETAIL
    4551 0000ffb0       4d           .STRING         "MORE DETAILED DATA"
    4552 00010040       00           .BYTE           0
    4553 00010050                    .EVEN
    4554                    
    4555 00010050           MESS_TOPAGE2
    4556 00010050       4e           .STRING         "NEXT AUDIT PAGE"
    4557 000100c8       00           .BYTE           0
    4558 000100d0                    .EVEN
    4559                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   94

    4560 000100d0           MESS_BACKP1
    4561 000100d0       50           .STRING         "PREVIOUS AUDIT PAGE"
    4562 00010168       00           .BYTE           0
    4563 00010170                    .EVEN
    4564                    
    4565 00010170           MESS_ANY
    4566 00010170       41           .STRING         "ANY BUTTON TO CONTINUE"
    4567 00010220       00           .BYTE           0
    4568 00010230                    .EVEN
    4569                    
    4570 00010230           MESS_MM
    4571 00010230       52           .STRING         "RETURN TO MAIN MENU"
    4572 000102c8       00           .BYTE           0
    4573 000102d0                    .EVEN
    4574                    
    4575 000102d0           MESSDIAG                                      ;THIS IS TITLE OF PAGE
    4576 000102d0           MESS_DIAG
    4577 000102d0       44           .STRING         "DIAGNOSTIC TESTS"
    4578 00010350       00           .BYTE     0
    4579 00010360                    .EVEN
    4580 00010360           MESS_COIN_AUD
    4581 00010360       43           .STRING         "COIN BOOKKEEPING"
    4582 000103e0       00           .BYTE     0
    4583 000103f0                    .EVEN
    4584 000103f0           MESS_GAME_AUD
    4585 000103f0       47           .STRING         "GAME AUDITS"
    4586 00010448       00           .BYTE     0
    4587 00010450                    .EVEN
    4588                    
    4589 00010450           MESS_GAME_ADJ
    4590 00010450       47           .STRING         "GAME ADJUSTMENT"
    4591 000104c8       00           .BYTE     0
    4592 000104d0                    .EVEN
    4593 000104d0           MESS_UTIL
    4594 000104d0       55           .STRING         "UTILITIES"
    4595 00010518       00           .BYTE     0
    4596 00010520                    .EVEN
    4597                    
    4598 00010520           MESS_EXIT
    4599 00010520       45           .STRING         "EXIT TO GAME OVER"
    4600 000105a8       00           .BYTE     0
    4601 000105b0                    .EVEN
    4602                    
    4603 000105b0       56  CH_0     .STRING         "VIEW COINBOX"
    4604 00010610       00           .BYTE   0
    4605 00010620                    .EVEN
    4606 00010620       54  CH_1     .STRING         "TOTALS AND"
    4607 00010670       00           .BYTE   0
    4608 00010680                    .EVEN
    4609 00010680       47  CH_2     .STRING         "GAMEPLAY COUNTERS"
    4610 00010708       00           .BYTE   0
    4611 00010710                    .EVEN
    4612                    
    4613 00010710       56  AH_1     .STRING         "VIEW GAME"
    4614 00010758       00           .BYTE   0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   95

    4615 00010760                    .EVEN
    4616 00010760       50  AH_2     .STRING         "PLAY STATISTICS"
    4617 000107d8       00           .BYTE   0
    4618 000107e0                    .EVEN
    4619                    
    4620 000107e0       4d  AD_1     .STRING         "MAKE CHANGES"
    4621 00010840       00           .BYTE   0
    4622 00010850                    .EVEN
    4623 00010850       54  AD_2     .STRING         "TO PRICING AND"
    4624 000108c0       00           .BYTE   0
    4625 000108d0                    .EVEN
    4626 000108d0       47  AD_3     .STRING         "GAME DIFFICULTY"
    4627 00010948       00           .BYTE   0
    4628 00010950                    .EVEN
    4629                    
    4630 00010950           MESS_CLCRED
    4631 00010950       43  U_CLR_CRED       .STRING "CLEAR CREDITS"
    4632 000109b8       00           .BYTE   0
    4633 000109c0                    .EVEN
    4634                    
    4635 000109c0       43  MESS_CCCONF      .STRING "CREDITS CLEARED"
    4636 00010a38       00           .BYTE   0
    4637 00010a40                    .EVEN
    4638                    
    4639 00010a40           MESS_CLCOIN
    4640 00010a40       43  U_CLR_COIN       .STRING "CLEAR COIN COUNTERS"
    4641 00010ad8       00           .BYTE   0
    4642 00010ae0                    .EVEN
    4643                    
    4644 00010ae0           MESS_CLAUD
    4645 00010ae0       43  U_CLR_AUD        .STRING "CLEAR GAME AUDITS"
    4646 00010b68       00           .BYTE   0
    4647 00010b70                    .EVEN
    4648                    
    4649 00010b70           MESS_HSRESET
    4650 00010b70       52  U_HSRESET        .STRING "RESET HIGH SCORES"
    4651 00010bf8       00           .BYTE   0
    4652 00010c00                    .EVEN
    4653                    
    4654 00010c00           MESS_HSRES
    4655 00010c00       52           .STRING "RESET HIGH SCORES"
    4656 00010c88       00           .BYTE   0
    4657 00010c90                    .EVEN
    4658                    
    4659 00010c90           M_OPMESS_TIT
    4660 00010c90       4f  U_OPMESS         .STRING "OPERATOR MESSAGE"
    4661 00010d10       00           .BYTE   0
    4662 00010d20                    .EVEN
    4663                    
    4664 00010d20           M_SET_OMESS
    4665 00010d20       53  MESS_OPMESS      .STRING "SET OPERATOR MESSAGE"
    4666 00010dc0       00           .BYTE   0
    4667 00010dd0                    .EVEN
    4668                    
    4669 00010dd0       42  U_BURNIN         .STRING "BURN-IN TEST"
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   96

    4670 00010e30       00           .BYTE   0
    4671 00010e40                    .EVEN
    4672                    
    4673 00010e40       52  MESS_BURN        .STRING "RUN BURN-IN TEST"
    4674 00010ec0       00           .BYTE   0
    4675 00010ed0                    .EVEN
    4676                    
    4677                    
    4678 00010ed0       44  MESS_DEF_ADJ     .STRING "DEFAULT ADJUSTMENTS"
    4679 00010f68       00           .BYTE   0
    4680 00010f70                    .EVEN
    4681                    
    4682 00010f70       46  U_FACTORY        .STRING "FACTORY SETTINGS"
    4683 00010ff0       00           .BYTE   0
    4684 00011000                    .EVEN
    4685                    
    4686 00011000       46  MESS_FACSET      .STRING "FULL FACTORY RESTORE"
    4687 000110a0       00           .BYTE   0
    4688 000110b0                    .EVEN
    4689                    
    4690 000110b0       45  U_END            .STRING "END TESTING"
    4691 00011108       00           .BYTE   0
    4692 00011110                    .EVEN
    4693                    
    4694 00011110       53  MESS_SWTEST           .STRING "SWITCH TEST"
    4695 00011168       00           .BYTE   0
    4696 00011170                    .EVEN
    4697 00011170       52  MESS_ROMTEST          .STRING "ROM BOARD TEST"
    4698 000111e0       00           .BYTE   0
    4699 000111f0                    .EVEN
    4700 000111f0       43  MESS_CPUTEST          .STRING "CPU BOARD TEST"
    4701 00011260       00           .BYTE   0
    4702 00011270                    .EVEN
    4703 00011270       53  M_STEST               .STRING "SOUND BOARD TEST"
    4704 000112f0       00           .BYTE   0
    4705 00011300                    .EVEN
    4706                    
    4707 00011300           MESSPAT                                    ;HEADER TITLE
    4708 00011300       4d  MESS_PATTERNS         .STRING "MONITOR PATTERNS"
    4709 00011380       00           .BYTE   0
    4710 00011390                    .EVEN
    4711                    
    4712 00011390       52  MESS_RED         .STRING "RED SCREEN"
    4713 000113e0       00           .BYTE   0
    4714 000113f0                    .EVEN
    4715 000113f0       47  MESS_GREEN       .STRING "GREEN SCREEN"
    4716 00011450       00           .BYTE   0
    4717 00011460                    .EVEN
    4718 00011460       42  MESS_BLUE        .STRING "BLUE SCREEN"
    4719 000114b8       00           .BYTE   0
    4720 000114c0                    .EVEN
    4721 000114c0       43  MESS_BARS        .STRING "COLOR BARS"
    4722 00011510       00           .BYTE   0
    4723 00011520                    .EVEN
    4724 00011520       43  MESS_CROSS       .STRING "CROSSHATCH  PATTERN"
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   97

    4725 000115b8       00           .BYTE   0
    4726 000115c0                    .EVEN
    4727 000115c0       42  MESS_DIAGM       .STRING "BACK TO DIAGNOSTICS MENU"
    4728 00011680       00           .BYTE   0
    4729 00011690                    .EVEN
    4730                    
    4731 00011690       53  M_SYNT   .STRING "SYNTHESIZER TEST"
    4732 00011710       00           .BYTE   0
    4733 00011720                    .EVEN
    4734 00011720       44  M_DIGT   .STRING "DIGITIZER TEST"
    4735 00011790       00           .BYTE   0
    4736 000117a0                    .EVEN
    4737 000117a0       50  M_SYNP   .STRING "PLAY SYNTHESIZER"
    4738 00011820       00           .BYTE   0
    4739 00011830                    .EVEN
    4740 00011830       50  M_DIGP   .STRING "PLAY DIGITIZER"
    4741 000118a0       00           .BYTE   0
    4742 000118b0                    .EVEN
    4743                    *
    4744                    *        ON FULL RESTORE....THE FOLLOWING IS PRINTED.
    4745                    *
    4746 000118b0           MESS_FFSCONF
    4747 000118b0           MESS_FAC MESS_MAC  RD15FONT,SPACING20,256,150,NARCS_WHITE,STRCNRM,0
    4748 00011950           MESS_DEFCONF
    4749 00011950       44           .STRING   "DEFAULT ADJUSTMENTS RESTORED."
    4750 00011a38       00           .BYTE     0,1
    4751 00011a50                    .EVEN
    4752 00011a50                    MESS_MAC  RD15FONT,SPACING20,256,175,NARCS_YELLOW,STRCNRM,0
    4753 00011af0           MESS_CCNCONF
    4754 00011af0       43           .STRING  "COIN COUNTERS CLEARED."
    4755 00011ba0       00           .BYTE   0,1                  ;0 = END OF STRING...1 = MORE MESSAGES!
    4756 00011bb0                    .EVEN
    4757 00011bb0                    MESS_MAC  RD15FONT,SPACING20,256,200,NARCS_ORANGE,STRCNRM,0
    4758 00011c50           MESS_CAUDCONF
    4759 00011c50       47           .STRING  "GAME AUDITS CLEARED."
    4760 00011cf0       00           .BYTE    0,1
    4761 00011d00                    .EVEN
    4762 00011d00                    MESS_MAC  RD15FONT,SPACING20,256,225,NARCS_CYAN,STRCNRM,0
    4763 00011da0           MESS_HSRCONF
    4764 00011da0       48           .STRING  "HIGH SCORE TABLE RESET."
    4765 00011e58       00           .BYTE    0,0
    4766 00011e70                    .EVEN
    4767                    
    4768 00011e70           MESS_FACFAIL
    4769 00011e70       46           .STRING  "FAILURE IN CMOS RAM"
    4770 00011f08       00           .BYTE    0
    4771 00011f10                    .EVEN
    4772                    
    4773 00011f10           MESS_CANCELLED
    4774 00011f10       43           .STRING "CANCELLED"
    4775 00011f58       00           .BYTE   0
    4776 00011f60                    .EVEN
    4777                    
    4778 00011f60           MESS_SUCCESS
    4779 00011f60       4d           .STRING "MESSAGE SUCCESSFULLY STORED"
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   98

    4780 00012038       00           .BYTE   0
    4781 00012040                    .EVEN
    4782                    
    4783 00012040           MESS_OPFAIL
    4784 00012040       4f           .STRING "OPERATOR MESSAGE CLEARED"
    4785 00012100       00           .BYTE   0
    4786 00012110                    .EVEN
    4787                    
    4788                    *        HOW ABOUT:      USE PLAYER 1 CONTROLS TO ENTER A MESSAGE
    4789                    *                        OF UP TO 3 LINES OF 25 CHARACTERS.
    4790                    *
    4791                    *                        PRESS "ADVANCE" TO CLEAR OUT MESSAGE.
    4792                    *
    4793                    *                        SELECT "CR" TO END EACH LINE.
    4794                    
    4795                    *        CENTER OF CUSTOM MESSAGE ENTRY Y IS BASED ON TITLE BLOCK
    4796                    *
    4797              00fc  CIN_X     EQU    (TIT_ULX+TIT_LRX)/2
    4798              00da  CR_X      EQU    CIN_X-34
    4799              0056  CIN_Y     EQU    86
    4800                    
    4801              0064  CIY1     EQU     CIN_Y+14
    4802              0073  CIY2     EQU     CIY1+15
    4803              008c  CIY3     EQU     CIY2+25
    4804              00a5  CIY4     EQU     CIY3+25
    4805                    
    4806 00012110           CMES_INSTR
    4807 00012110                    MESS_MAC  RD7FONT,SPACING07,CIN_X,CIY1,NARCS_WHITE,STRCNRM,0
    4808 000121b0       55           .STRING   "USE PLAYER 1 CONTROLS TO ENTER A"
    4809 000122b0       00           .BYTE      0,1
    4810 000122c0                    .EVEN
    4811 000122c0                    MESS_MAC  RD7FONT,SPACING07,CIN_X,CIY2,NARCS_WHITE,STRCNRM,0
    4812 00012360       4d           .STRING   "MESSAGE OF UP TO 3 LINES OF 25 LETTERS."
    4813 00012498       00           .BYTE      0,1
    4814 000124b0                    .EVEN
    4815 000124b0                    MESS_MAC  RD7FONT,SPACING07,CIN_X,CIY3,NARCS_YELLOW,STRCNRM,0
    4816 00012550       53           .STRING   "SELECT "
    4817 00012588       22           .BYTE     ASCII_DQ
    4818 00012590       20           .STRING   "   "              ;MAKE ROOM FOR "CR" CRARACTER
    4819 000125a8       22           .BYTE     ASCII_DQ
    4820 000125b0       20           .STRING   " TO END EACH LINE."
    4821 00012640       00           .BYTE      0,1
    4822 00012650                    .EVEN
    4823 00012650                    MESS_MAC  RD7FONT,SPACING07,CIN_X,CIY4,NARCS_ORANGE,STRCNRM,0
    4824 000126f0       50           .STRING   "PRESS "
    4825 00012720       22           .BYTE     ASCII_DQ
    4826 00012728       41           .STRING   "ADVANCE"
    4827 00012760       22           .BYTE     ASCII_DQ
    4828 00012768       20           .STRING   " TO CLEAR OUT MESSAGE."
    4829 00012818       00           .BYTE      0,1
    4830 00012830                    .EVEN
    4831 00012830                    MESS_MAC  RD15FONT,SPACING20,CR_X,CIY3,NARCS_YELLOW,STRCNRM,0
    4832 000128d0       83           .BYTE   FONT_CR
    4833 000128d8       00           .BYTE   0,0
    4834 000128f0                    .EVEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE   99

    4835                    
    4836                    **************************************************************************
    4837                    *                                                                        *
    4838                    *          STRINGS FOR SOUND TEST                                        *
    4839                    *                                                                        *
    4840                    **************************************************************************
    4841                    
    4842              00a0  DAC_LX   EQU     160
    4843                    
    4844 000128f0           DAC_ERR
    4845 000128f0                    MESS_MAC  RD15FONT,SPACING20,256,125,NARCS_LF,STRCNRM,0
    4846 00012990       4c           .STRING   "LISTEN FOR TONES:"
    4847 00012a18       00           .BYTE   0,1
    4848 00012a30                    .EVEN
    4849 00012a30                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,165,NARCS_YELLOW,STRLNRM,0
    4850 00012ad0       30           .STRING   "0 TONES - CHECK U38 OR SYNTHESIZER."
    4851 00012be8       00           .BYTE   0,1
    4852 00012c00                    .EVEN
    4853 00012c00                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,180,NARCS_YELLOW,STRLNRM,0
    4854 00012ca0       31           .STRING   "1 TONE"
    4855 00012cd0       00           .BYTE   0,1
    4856 00012ce0                    .EVEN
    4857              00d8  DAC_LX2  EQU     DAC_LX+56
    4858                    
    4859 00012ce0                    MESS_MAC  RD7FONT,SPACING07,DAC_LX2,180,NARCS_YELLOW,STRLNRM,0
    4860 00012d80       2d           .STRING   "- DIGITIZER OK"
    4861 00012df0       00           .BYTE   0,1
    4862 00012e00                    .EVEN
    4863                    
    4864 00012e00                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,195,NARCS_YELLOW,STRLNRM,0
    4865 00012ea0       32           .STRING   "2 TONES - RAM ERROR  U34"
    4866 00012f60       00           .BYTE   0,1
    4867 00012f70                    .EVEN
    4868 00012f70                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,210,NARCS_YELLOW,STRLNRM,0
    4869 00013010       33           .STRING   "3 TONES - ROM ERROR  U38 "
    4870 000130d8       00           .BYTE   0,1
    4871 000130f0                    .EVEN
    4872 000130f0                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,225,NARCS_YELLOW,STRLNRM,0
    4873 00013190       34           .STRING   "4 TONES - ROM ERROR  U37 "
    4874 00013258       00           .BYTE   0,1
    4875 00013270                    .EVEN
    4876 00013270                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,240,NARCS_YELLOW,STRLNRM,0
    4877 00013310       35           .STRING   "5 TONES - ROM ERROR  U36 "
    4878 000133d8       00           .BYTE   0,1
    4879 000133f0                    .EVEN
    4880 000133f0                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,255,NARCS_YELLOW,STRLNRM,0
    4881 00013490       36           .STRING   "6 TONES - ROM ERROR  U35 "
    4882 00013558       00           .BYTE   0,0
    4883 00013570                    .EVEN
    4884                    
    4885 00013570           YAM_ERR_TAB
    4886 00013570 00014e30"          .LONG   YERR0
    4887 00013590 00014f20"          .LONG   YERR1
    4888 000135b0 00014fa0"          .LONG   YERR2
    4889 000135d0 00015010"          .LONG   YERR3
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE  100

    4890 000135f0 00015080"          .LONG   YERR4
    4891 00013610 00014e30"          .LONG   YERR0
    4892                    
    4893              0005  LAST_Y_CODE EQU  (($-YAM_ERR_TAB)/LONG_SIZE)-1
    4894                    
    4895 00013630       54  M_TESTING        .STRING "TESTING..."
    4896 00013680       00                   .BYTE 0
    4897 00013690                            .EVEN
    4898                    
    4899 00013690           M_CKU5   MESS_MAC  RD15FONT,SPACING20,256,125,NARCS_LF,STRCNRM,0
    4900 00013730       4e           .STRING   "NO RESPONSE - LISTEN FOR TONES:"
    4901 00013828       00           .BYTE   0,1
    4902 00013840                    .EVEN
    4903 00013840                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,165,NARCS_YELLOW,STRLNRM,0
    4904 000138e0       30           .STRING   "0 TONES - NO RESPONSE, CHECK U5"
    4905 000139d8       00           .BYTE   0,1
    4906 000139f0                    .EVEN
    4907 000139f0                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,180,NARCS_YELLOW,STRLNRM,0
    4908 00013a90       31           .STRING   "1 TONE"
    4909 00013ac0       00           .BYTE   0,1
    4910 00013ad0                    .EVEN
    4911 00013ad0                    MESS_MAC  RD7FONT,SPACING07,DAC_LX2,180,NARCS_YELLOW,STRLNRM,0
    4912 00013b70       2d           .STRING   "- SYNTHESIZER OK, CHECK J2 CABLE."
    4913 00013c78       00           .BYTE   0,1
    4914 00013c90                    .EVEN
    4915                    
    4916 00013c90                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,195,NARCS_YELLOW,STRLNRM,0
    4917 00013d30       32           .STRING   "2 TONES - RAM ERROR  U2 "
    4918 00013df0       00           .BYTE   0,1
    4919 00013e00                    .EVEN
    4920 00013e00                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,210,NARCS_YELLOW,STRLNRM,0
    4921 00013ea0       33           .STRING   "3 TONES - ROM ERROR  U5 "
    4922 00013f60       00           .BYTE   0,1
    4923 00013f70                    .EVEN
    4924 00013f70                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,225,NARCS_YELLOW,STRLNRM,0
    4925 00014010       34           .STRING   "4 TONES - ROM ERROR  U4 "
    4926 000140d0       00           .BYTE   0,0
    4927 000140e0                    .EVEN
    4928                    
    4929 000140e0       4e  MES_DEST .STRING   "NARC DESIGN TEAM"
    4930 00014160       00           .BYTE   0
    4931 00014170                    .EVEN
    4932                    
    4933 00014170           M_TEAM   MESS_MAC  RD15FONT,SPACING20,256,106,NARCS_WHITE,STRCNRM,0
    4934 00014210       45           .STRING   "EUGENE JARVIS"
    4935 00014278       00           .BYTE     0,1
    4936 00014288                    MESS_MAC  RD15FONT,SPACING20,256,129,NARCS_WHITE,STRCNRM,0
    4937 00014330       47           .STRING   "GEORGE PETRO"
    4938 00014390       00           .BYTE      0,1
    4939 000143a0                    MESS_MAC  RD15FONT,SPACING20,256,152,NARCS_WHITE,STRCNRM,0
    4940 00014440       54           .STRING   "TODD ALLEN"
    4941 00014490       00           .BYTE      0,1
    4942 000144a0                    MESS_MAC  RD15FONT,SPACING20,256,175,NARCS_WHITE,STRCNRM,0
    4943 00014540       4a           .STRING   "JACK HAEGER"
    4944 00014598       00           .BYTE      0,1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE  101

    4945 000145a8                    MESS_MAC  RD15FONT,SPACING20,256,198,NARCS_WHITE,STRCNRM,0
    4946 00014650       4d           .STRING   "MARK LOFFREDO"
    4947 000146b8       00           .BYTE      0,1
    4948 000146c8                    MESS_MAC  RD15FONT,SPACING20,256,221,NARCS_WHITE,STRCNRM,0
    4949 00014770       4a           .STRING   "JOHN NEWCOMER"
    4950 000147d8       00           .BYTE      0,1
    4951 000147e8                    MESS_MAC  RD15FONT,SPACING20,256,244,NARCS_WHITE,STRCNRM,0
    4952 00014890       4c           .STRING   "LARRY DEMAR"
    4953 000148e8       00           .BYTE      0,1
    4954 000148f8                    MESS_MAC  RD15FONT,SPACING20,256,267,NARCS_WHITE,STRCNRM,0
    4955 000149a0       42           .STRING   "BRIAN SCHMIDT"
    4956 00014a08       00           .BYTE      0,1
    4957 00014a18                    MESS_MAC  RD15FONT,SPACING20,256,290,NARCS_WHITE,STRCNRM,0
    4958 00014ac0       4d           .STRING   "MARK LOCASIO"
    4959 00014b20       00           .BYTE      0,1
    4960 00014b30                    MESS_MAC  RD15FONT,SPACING20,256,313,NARCS_WHITE,STRCNRM,0
    4961 00014bd0       47           .STRING   "GLENN SHIPP"
    4962 00014c28       00           .BYTE      0,1
    4963 00014c38                    MESS_MAC  RD15FONT,SPACING20,256,336,NARCS_WHITE,STRCNRM,0
    4964 00014ce0       4c           .STRING   "LIN YOUNG"
    4965 00014d28       00           .BYTE      0,1
    4966 00014d38                    MESS_MAC  RD15FONT,SPACING20,256,359,NARCS_WHITE,STRCNRM,0
    4967 00014de0       41           .STRING   "AL LASKO"
    4968 00014e20       00           .BYTE      0,0
    4969                    
    4970 00014e30       53  YERR0    .STRING "SYNTHESIZER DOES NOT RESPOND."
    4971 00014f18       00           .BYTE 0
    4972 00014f20                    .EVEN
    4973 00014f20       53  YERR1    .STRING "SYNTHESIZER OK"
    4974 00014f90       00           .BYTE 0
    4975 00014fa0                    .EVEN
    4976 00014fa0       52  YERR2    .STRING "RAM ERROR  U2"
    4977 00015008       00           .BYTE 0
    4978 00015010                    .EVEN
    4979 00015010       52  YERR3    .STRING "ROM ERROR  U5"
    4980 00015078       00           .BYTE 0
    4981 00015080                    .EVEN
    4982 00015080       52  YERR4    .STRING "ROM ERROR  U4"
    4983 000150e8       00           .BYTE 0
    4984 000150f0                    .EVEN
    4985                    
    4986                    **************************************************************************
    4987                    *                                                                        *
    4988                    *          STRINGS FOR UTILITY HELP MENUS                                *
    4989                    *                                                                        *
    4990                    **************************************************************************
    4991 000150f0       52  MEH_CLCRED1      .STRING "REMOVE ANY" 
    4992 00015140       00                   .BYTE   0
    4993 00015150                            .EVEN
    4994 00015150       50  MEH_CLCRED2      .STRING "POSTED CREDITS"
    4995 000151c0       00                   .BYTE   0
    4996 000151d0                            .EVEN
    4997 000151d0       46  MEH_CLCRED3      .STRING "FROM THE GAME"
    4998 00015238       00                   .BYTE   0
    4999 00015240                            .EVEN
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE  102

    5000 00015240       43  MEH_CLCOIN1      .STRING "CLEAR OUT PAID"
    5001 000152b0       00                   .BYTE   0
    5002 000152c0                            .EVEN
    5003 000152c0       43  MEH_CLCOIN2      .STRING "CREDITS TOTAL"
    5004 00015328       00                   .BYTE   0
    5005 00015330                            .EVEN
    5006 00015330       41  MEH_CLCOIN3      .STRING "AND THE COIN"
    5007 00015390       00                   .BYTE   0
    5008 000153a0                            .EVEN
    5009 000153a0       53  MEH_CLCOIN4      .STRING "SLOT COUNTERS"
    5010 00015408       00                   .BYTE   0
    5011 00015410                            .EVEN
    5012 00015410       43  MEH_CLAUD1       .STRING "CLEAR GAMEPLAY"
    5013 00015480       00                   .BYTE   0
    5014 00015490                            .EVEN
    5015 00015490       53  MEH_CLAUD2       .STRING "STATISTICS"
    5016 000154e0       00                   .BYTE   0
    5017 000154f0                            .EVEN
    5018 000154f0       52  MEH_RESHS1       .STRING "RESET HIGH SCORE"
    5019 00015570       00                   .BYTE   0
    5020 00015580                            .EVEN
    5021 00015580       54  MEH_RESHS2       .STRING "TABLE TO FACTORY"
    5022 00015600       00                   .BYTE   0
    5023 00015610                            .EVEN
    5024 00015610       44  MEH_RESHS3       .STRING "DEFAULT VALUES"
    5025 00015680       00                   .BYTE   0
    5026 00015690                            .EVEN
    5027 00015690       45  MEH_CUSM1        .STRING "ENTER YOUR OWN"
    5028 00015700       00                   .BYTE   0
    5029 00015710                            .EVEN
    5030 00015710       4d  MEH_CUSM2        .STRING "MESSAGE TO"
    5031 00015760       00                   .BYTE   0
    5032 00015770                            .EVEN
    5033 00015770       41  MEH_CUSM3        .STRING "APPEAR IN THE"
    5034 000157d8       00                   .BYTE   0
    5035 000157e0                            .EVEN
    5036 000157e0       41  MEH_CUSM4        .STRING "ATTRACT MODE"
    5037 00015840       00                   .BYTE   0
    5038 00015850                            .EVEN
    5039 00015850       53  MEH_DEFA1        .STRING "SET ALL GAME"
    5040 000158b0       00                   .BYTE   0
    5041 000158c0                            .EVEN
    5042 000158c0       41  MEH_DEFA2        .STRING "ADJUSTMENTS TO"
    5043 00015930       00                   .BYTE   0
    5044 00015940                            .EVEN
    5045 00015940       54  MEH_DEFA3        .STRING "THEIR FACTORY"
    5046 000159a8       00                   .BYTE   0
    5047 000159b0                            .EVEN
    5048 000159b0       44  MEH_DEFA4        .STRING "DEFAULT VALUE"
    5049 00015a18       00                   .BYTE   0
    5050 00015a20                            .EVEN
    5051 00015a20       43  MEH_FAC1         .STRING "CLEAR ALL AUDITS,"
    5052 00015aa8       00                   .BYTE   0
    5053 00015ab0                            .EVEN
    5054 00015ab0       41  MEH_FAC2         .STRING "AND ALL COUNTERS."
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

TEST PROGRAM MENUS                                                   PAGE  103

    5055 00015b38       00                   .BYTE   0
    5056 00015b40                            .EVEN
    5057 00015b40       52  MEH_FAC3         .STRING "RESET ALL"
    5058 00015b88       00                   .BYTE   0
    5059 00015b90                            .EVEN
    5060 00015b90       41  MEH_FAC4         .STRING "ADJUSTMENTS AND"
    5061 00015c08       00                   .BYTE   0
    5062 00015c10                            .EVEN
    5063 00015c10       54  MEH_FAC5         .STRING "THE HIGH SCORE"
    5064 00015c80       00                   .BYTE   0
    5065 00015c90                            .EVEN
    5066 00015c90       54  MEH_FAC6         .STRING "TABLE"
    5067 00015cb8       00                   .BYTE   0
    5068 00015cc0                            .EVEN
    5069                    **************************************************************************
    5070                    *                                                                        *
    5071                    *         MAIN MENU NAMES                                                *
    5072                    *                                                                        *
    5073                    **************************************************************************
    5074 00015cc0           MESSMAIN
    5075 00015cc0       4e           .STRING   "NARC  TEST  MENU"
    5076 00015d40       00           .BYTE     0
    5077 00015d50                    .EVEN
    5078                    
    5079 00015d50       55  MESSUTIL .STRING   "UTILITY MENU"
    5080 00015db0       00           .BYTE     0
    5081 00015dc0                    .EVEN
    5082                    
    5083                             .END 

 No Errors,  No Warnings
