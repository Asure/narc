SUBRM .MACRO 	P1,P2,P3
	MOVE	:P2:,A14,:P3:
	SUB	:P1:,A14
	MOVE	A14,:P2:,:P3:
	$ENDM
ADDRM .MACRO 	P1,P2,P3
	MOVE	:P2:,A14,:P3:
	ADD	:P1:,A14
	MOVE	A14,:P2:,:P3:
	$ENDM
INCW .MACRO 	P1
	MOVE	:P1:,A14
	INC	A14
	MOVE	A14,:P1:
	$ENDM
DECW .MACRO 	P1
	MOVE	:P1:,A14
	DEC	A14
	MOVE	A14,:P1:
	$ENDM
SUBM .MACRO 	P1,P2,P3
	MOVE	:P1:,A14,:P3:
	SUB	A14,:P2:
	$ENDM
ADDM .MACRO 	P1,P2,P3
	MOVE	:P1:,A14,:P3:
	ADD	A14,:P2:
	$ENDM
NEGM .MACRO 	P1,P2
	MOVE	:P1:,A14,:P2:
	NEG	A14
	MOVE	A14,:P1:,:P2:
	$ENDM
CMPM .MACRO 	P1,P2,P3
	MOVE	:P1:,A14,:P3:
	CMP	A14,:P2:
	$ENDM
CLRM .MACRO 	P1,P2
	CLR	A14
	MOVE	A14,:P1:,:P2:
	$ENDM
COMM .MACRO 	P1,P2
	MOVE	:P1:,A14,:P2:
	NOT	A14
	MOVE	A14,:P1:,:P2:
	$ENDM
SLLM .MACRO 	P1,P2,P3
	MOVE	:P2:,A14,:P3:
	SLL	:P1:,A14
	MOVE	A14,:P2:,:P3:
	$ENDM
SRAM .MACRO 	P1,P2,P3
	MOVE	:P2:,A14,:P3:
	SEXT	A14,:P3:
	SRA	:P1:,A14
	MOVE	A14,:P2:,:P3:
	$ENDM
SRLM .MACRO 	P1,P2,P3
	MOVE	:P2:,A14,:P3:
	ZEXT 	A14,:P3:
	SRL	:P1:,A14
	MOVE	A14,:P2:,:P3:
	$ENDM
SLEEP .MACRO 	P1
	$IF	P1 < 33
	MOVK	:P1:,A0
	$ELSE	
	MOVI	:P1:,A0
	$ENDIF
	CALLA	PRCSLP
	$ENDM
SLEEPR .MACRO 	REG1
	MOVE	:REG1:,A0
	CALLA	PRCSLP
	$ENDM
SLOOP .MACRO 	P1,P2
	$IF	P1 < 33
	MOVK	:P1:,A0
	$ELSE	
	MOVI	:P1:,A0
	$ENDIF
	MOVI	:P2:,A7,L
	JAUC	PRCLSP
	$ENDM
SLOOPR .MACRO 	P1,P2
	MOVE	:P1:,A0
	MOVI	:P2:,A7,L
	JAUC	PRCLSP
	$ENDM
CREATE .MACRO 	P1,P2
 	MOVI	:P1:,A1
	MOVI	:P2:,A7,L
	CALLA	GETPRC
	$ENDM
KILLIT .MACRO 	P1,P2
	MOVI	:P1:,A0
	MOVI	:P2:,A1
	CALLA	KILALL
	$ENDM
DIE .MACRO 
	JAUC	SUCIDE
	$ENDM
JSRP .MACRO 	P1
	GETPC	A7
	ADDI    060h,A7
	MOVE	A7,-*A12,L	;PUSH RET ADDR
	JAUC	:P1:
	$ENDM
JSRPR .MACRO 	R1
	GETPC	A7
	ADDI    040h,A7
	MOVE	A7,-*A12,L	;PUSH RET ADDR
	JUMP	:R1:
	$ENDM
RETP .MACRO 	
	MMFM	A12,A7		;PULL RETURN ADDR, W/O ZAPPING STAT
	EXGPC	A7
	$ENDM
MATCHP .MACRO 	P1,P2,P3
	MOVI	:P1:,A0
	MOVI	:P2:,A1
	CALLA	EXISTP
	JANZ	:P3:
	$ENDM
NOMATCHP .MACRO 	P1,P2,P3
	 MOVI	:P1:,A0
	 MOVI	:P2:,A1
	 CALLA	EXISTP
	 JAZ	:P3:
	 $ENDM
PUSH .MACRO 	REG
	MOVE :REG:,-*SP,1
	$ENDM
PULL .MACRO 	REG
	MMFM	SP,:REG:
	$ENDM
PUSHP .MACRO 	REG
	MOVE :REG:,-*A12,L
	$ENDM
PULLP .MACRO 	REG
	MMFM	A12,:REG:
	$ENDM
PUSHW .MACRO 	REG
	MOVE :REG:,-*SP,0
	$ENDM
PULLW .MACRO 	REG
	MOVE *SP+,:REG:,0
	$ENDM
SOUND1 .MACRO  SNDNUM
	MOVI :SNDNUM:,A0
	CALLA ONESND
	$ENDM
LONGNULL .MACRO 	 
	.LONG 0								 
	$ENDM								 
CALLERR .MACRO 	REGS
	MOVE	A1,-*SP,L	
	MOVE	*SP((:REGS:+1)*20H),A1,L
	CALLA	ERRORLOG	
	MMFM	SP,A1
	$ENDM
CALLERR1 .MACRO 	REGS
	MOVE	A1,-*SP,L	
	MOVE	*SP((:REGS:+1)*20H),A1,L
	CALLA	ERRLOG1	
	MMFM	SP,A1
	$ENDM
CALLERR2 .MACRO 	REGS
	MOVE	A1,-*SP,L	
	MOVE	*SP((:REGS:+1)*20H),A1,L
	CALLA	ERRLOG2	
	MMFM	SP,A1
	$ENDM
SWAP .MACRO  R1,R2
	XOR    :R1.S:,:R2.S:
	XOR    :R2.S:,:R1.S:
	XOR    :R1.S:,:R2.S:
	$ENDM
TEST .MACRO  R1
	MOVE	:R1.S:,:R1.S:
	$ENDM
JRXEQ .MACRO 	P1
	JRXZ	P1.S
	$ENDM
JRXNE .MACRO 	P1
	JRXNZ	P1.S
	$ENDM
JRXGE .MACRO 	P1
	JRXNN	P1.S
	$ENDM
JRXLT .MACRO 	P1
	JRXN	P1.S
	$ENDM
JRYEQ .MACRO 	P1
	JRYZ	P1.S
	$ENDM
JRYNE .MACRO 	P1
	JRYNZ	P1.S
	$ENDM
JRYGE .MACRO 	P1
	JRYNN	P1.S
	$ENDM
JRYLT .MACRO 	P1
	JRYN	P1.S
	$ENDM
AUDIT .MACRO 	P1
	MOVI	:P1:,A0	
	CALLA	AUD1
	$ENDM
AUDITCNT .MACRO 	P1,P2
	MOVE	@:P2:,A1,W
	MOVI	:P1:,A0
	CALLA	AUD
	$ENDM
ADJUST .MACRO 	P1
	MOVI	:P1:,A0
	CALLA	GET_ADJ
	$ENDM
