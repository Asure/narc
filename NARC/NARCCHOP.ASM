	.FILE	"NARCCHOP.ASM"
	.TITLE	" <<< N  A  R  C  -- THE CHOPPER >>>"

**************************************************************************
*                                                                        *
* 	COPYRIGHT (C) 1988 WILLIAMS ELECTRONICS GAMES, INC. 		 *
* 	ALL RIGHTS RESERVED.						 *
*                                                                        *
**************************************************************************

	.WIDTH	132
	.OPTION	B,D,L
	.MNOLIST

*	GET THE SYSTEM STUFF
	.include	"..\sys\mprocequ.asm"	;mproc equates
	.include	"..\sys\dispequ.asm"	;display processor equates
	.include	"..\sys\gsp.inc"	;gsp assembler equates
	.include	"..\sys\sys.inc"	;zunit system equates
	.include	"..\sys\macros.hdr"	;macros, yeah!
*	LOCAL STUFF
	.INCLUDE	"NARCEQU.ASM"		;NARC Equates
	.INCLUDE	"IMGTBL.GLO"		;Image Label Equates
	.INCLUDE	"NARCFRAG.GLO"
	.TEXT
	.INCLUDE	"NARCCHOP.TBL"		;Image Label Equates
	.INCLUDE	"NARCTEQU.ASM"

*
*GLOBALS IN THIS FILE
	.GLOBAL	CHOPST,CHOPINTR,CHOFCOLD,PBOMBP1,PBOMBP2,KILLCHOY,CHORCOLD
*
*EXTERNALS
	.GLOBAL	XZCNTCK,PDRIVXWW
	.GLOBAL	PCDRIVRC,P1IJDECL,P2IJDECL
	.GLOBAL	LOFDEXP,LDEXP1
	.GLOBAL	NEXPLODE,NEXAIR,OIDATA
	.GLOBAL CHOPRB,CNEWPAL,XVEL2X

BMIRROR	.EQU	ETEMP7	;MIRRORED BLADE PART
**************************************************************************
*                                                                        *
* CHOPCOLD - COLD START THE CHOPPER					 *
*                                                                        *
**************************************************************************
CHOPCOLD
	MOVE	@CHOPCNT,A0,W
	JRNE	CHOPCX
	CREATE	CHOPEPID,CHOPPER
CHOPCX
	RETS

**************************************************************************
*                                                                        *
* CHOPDISP - THE CHOPPER DISPATCHER.					 *
*                                                                        *
**************************************************************************

CHOPST	CREATE	CHOPEPID,CHOPDISP
	RETS

CHOPDSPL
	SLEEP	30
	MOVE	@CHOPCNT,A0,W
	JRNE	CHOPDSPL
	MOVI	0240H,A0		;RANDOM SLEEP TIME
	CALLA	RANDU
	ADDI	0140H,A0
	CALLA	PRCSLP
CHOPDISP
	CREATE	CHOPEPID,CHOPPER1
	JRUC	CHOPDSPL

**************************************************************************
*                                                                        *
* CHOPPER-THE CHOPPER PROCESS!!!					 *
* A8	 = DRIVER							 *	
* A10	 = MAIN BODY							 *
* ETEMP1 = PTR TO SKIDS OBJECT						 *
* ETEMP2 = PTR TO TAIL OBJECT						 *
* ETEMP3 = PTR TO EXTENSION OBJECT					 *
* ETEMP4 = PTR TO BLADE OBJECT						 *
* ETEMP5 = PTR TO ROTOR OBJECT						 *
* ETEMP7 = PTR TO BLADE OBJECT, MIRRORED				 *
*                                                                        *
**************************************************************************
CHOPPER1
	MOVI	CHOPINT1,A14
	JRUC	CHOPPER2
CHOPPER
	MOVI	CHOPINIT,A14
CHOPPER2
	MOVI	D3TAB,A6						 
	CALLA	CARINIT			;INITIALIZE THE CAR
	JAZ	DUMDIE			;BR = INITIALIZATION FAILURE

	MOVK	20,A3	      		;BULLET HIT COUNT
	MOVB	A3,*A13(ECLIP)

	CLR	A3
	MOVE	A3,*A10(OPLINK),L
	MOVE	*A10(OZVAL),A3,L
	MOVE	*A13(ETEMP1),A6,L
	MOVE	A10,*A13(ETEMP1),L
	MOVE	A6,A10
	MOVE	A3,*A10(OZVAL),L
	MOVE	A13,*A10(OPLINK),L	;BODY
	MOVE	A13,*A8(OPLINK),L	;PILOT

***	CALLR	CHOPZRST		;RESET THE CHOPPER Z'S
	CALLR	CHOPFLIP
	CALLR	CHOPSHAD		;MAKE SOME SHADOWS

	MOVE	@CHOPCNT,A6,W
	INC	A6
	MOVE	A6,@CHOPCNT,W

	JSRP	CHOPPOWR		;POWER THIS BEAST UP
	MOVI	0FFFF4000H,A1
	CALLA	CARYVEL
	MOVK	20,B0
	MOVK	32,B1
	CALLA	RANGRAND
	SLEEPR	A0
	SOUND1	CHOPCRUZ
	MOVI	[6,0],A11
	MOVI	1000H,A9
	CALLR	CHOPXACC
	SLEEP	150
	CLR	A1
	CALLA	CARYVEL
	JRUC	CHOPL0
CHOPA1D
	CALLR	CHXVEL
CHOPL0
	CALLA	SELCTPLY	;GET A PLAYER TO GO FOR
CHOPL	
	MOVK	10,A9
CHOPALUP
	CALLR	CHOPVEL		;GET CHOPPER  VELOCITY
	SLEEP	1
	DSJ	A9,CHOPALUP
	CALLA	CARSCRTST
	JRNZ	CHOPOFF   	;NZ = OFF SCREEN	 
	MOVI	400,A0
	CALLA	RANDPER
	JRNC	CHOPL1
	CALLA	RANDOM
	SLL	31,A0
	SRL	26,A0
	ADDI	PILTAB,A0
	MOVE	*A0,A1,L
	MOVE	*A8(OFLAGS),A4,W
	CALLA	ANI
CHOPL1
	CALLR	CHFIRE
	MOVE	@CHOPRB,A0,W
	CALLA	RANDPER
	JRNC	CHOPL2
	CALLR	CHROCK
CHOPL2
	MOVE	@CHOPRB,A0,W
	CALLA	RANDPER
	JRNC	CHOPL
	CALLR	CHBOMB
	JRUC	CHOPL
*
*PILOT ANIMATION TABLE
*
PILTAB	.LONG	pilot5,pilot2
*OFFSCREEN, TURN AROUND
CHOPOFF:
	SLEEP	40		;TAKE A LITTLE TIME OUT
	CALLA	CARSCRTST
	JRZ	CHOPL   	;NZ = OFF SCREEN	 

	CALLR	CHXVEL
	MOVI	700,A0		 ;CHANGE ALTITUDE ?
	CALLA	RANDPER		 
	JRNC	CHOPFL 		;NO
	MOVI	150,A0
	CALLA	RANDU
	ADDK	20,A0		;GET RANDOM ALTITUDE
	MOVI	030000H,A2 	;Y SPEED
	CALLA	DFRMGRND
	CMP	A1,A0
	JRN	CHOPOF1
	NEG	A2
CHOPOF1
	MOVE	A2,A1	
	MOVE	A0,A9
	JSRP	CHUPDWN
CHOPOF2
	MOVK	20,A9 		;TIME OUT TO GET A NEW VELOCITY
CHOPFL
	CALLA	CARSCRTST
	JRZ	CHOPA1D
	CALLR	CHOPVEL
	SLEEP	2
	DSJS	A9,CHOPFL
	CALLR	CHXVEL		;GET NEW VELOCITY, WE MAY BE LOST
	JRUC	CHOPOF2
*
*BLINK CHOPPER LIGHT
*
CHOPLIT:
	MOVI	HELWHT,A0
	CALLA	FINDPAL
	JAZ	SUCIDE
	MOVE	A0,A8		;KEEP PALETTE POSITION
*
*PASS THE PALETTE # IN A8 HERE
CHOPLITG:
	SLL	24,A8
	SRL	16,A8
	ADDI	226,A8		;ADD IN EYE COLOR VALUE
CL0LP
	MOVI	CCOLTAB,A9	;INITIALIZE COLOR TABLE
CLILP:
	MOVE	A8,A1
	MOVK	1,A2
	MOVE	A9,A0
	CALLA	PALSET
	SLEEP	5
	ADDK	16,A9
	CMPI	CCOLTEND,A9
	JRHS	CL0LP
	JRUC	CLILP
*
*                R        G         B
*CHOP LIGHT COLOR TABLE
*0=END
CCOLTAB
      .WORD	0		       		;BLACK
      .word   (5*32*32)+(0 *32)+(  0 )  	;RED
      .word   (10*32*32)+(0*32)+(  0 )  	;WHITE
      .word   (15*32*32)+(0 *32)+( 0 )  
      .word   (20*32*32)+(0 *32)+( 0 )  
      .word   (25*32*32)+(0*32)+( 0)  
      .word   (28*32*32)+(0 *32)+( 0 ) 
      .word   (31*32*32)+(0 *32)+( 0 ) 
      .word   (31*32*32)+(31*32)+( 31 )  	;WHITE
CCOLTEND
*
*GET CHOPPER XVEL AND FLIP
*
CHXVEL
	PUSH	A11
	MOVE	*A8(OXPOS),A1,W
	CMPI	0FFFF8000H,A1,W	 ;ZERO EXTEND TO C000
	JRLO	CHXV1
	CMPI	0FFFFC000H,A1,W
	JRHI	CHXV1
	ZEXT	A1,W
CHXV1
	MOVE	@WORLDTL,A2,W
	ADDI	256,A2		;ADJUST FOR CENTER SCREEN
	CMPI	0FFFF8000H,A2,W
	JRLO	CHXV2
	CMPI	0FFFFC000H,A2,W
	JRHI	CHXV2
	ZEXT	A2,W
CHXV2
	SUB	A2,A1
	PUSH	A1
	SRA	31,A1		;SIGN EXTEND DOWNWARD
	MOVE	*A8(OFLAGS),A2,W
	XOR	A2,A1
	BTST	B_FLIPH,A1
	JRNE	CHXVEL0		 ;DONT FLIP IF FALLING BEHIND
	CALLA	CARSTOP
	CALLR	CHOPFLIP
CHXVEL0
	MOVE	@SCROLLX,A11,L
	ABS	A11
	MOVI	040000H,A0
	CALLA	RANDU
	PUSH	A8
	MOVE	A10,A8
	CALLA	DFRMGRND
	PULL	A8
	CMPI	50,A1
	JRHI	CHXVEL1
	ADDI	020000H,A0	;COOK ON LOW PASS
CHXVEL1
	ADDI	040000H,A0
	ADD	A0,A11
	PULL	A1		;GET BACK DISTANCE
	ABS	A1
	CMPI	600,A1		;WAYS OFF?
	JRLS	CHXVEL2
	CMPI	080000H,A11
	JRHS	CHXVEL2
	MOVI	080000H,A11
CHXVEL2
	MOVI	8000H,A9
	CALLR	CHOPXACC
	PULL	A11
	RETS
*
*Y ADJUST CHOPPER
*A1=YVEL
*A9=DFRMGRND GOAL
*
CHUPDWN
	CALLA	CARYVEL
	CLR	A1
	CALLA	CARZVEL		;NO Z VELOCITY
CHUDLP
	CALLA	DFRMGRND
	SUB	A9,A1
	ABS	A1
	CMPI	8,A1
	JRLS	CHUDX
	CALLR	CHFIRE
	CALLR	CHROCK
	SLOOP	2,CHUDLP
CHUDX
	CLR	A1
	CALLA	CARYVEL		 ;CUT Y VELOCITY
	RETP
*
*CHOPPER BULLET FIRE
*
CHFIRE
	MMTM	SP,A1,A7,A8,A10
	CALLA	CARSCRTST
	JRNZ	CHFIREX   		;NZ = OFF SCREEN	 
	MOVE	A10,A8
	CALLA	DFRMGRND
	CMPI	50,A1
	JRGT	CHFIRE1
	MOVI	[23,81],A10
	CREATE	0EBH,EDBULLET
	JRUC	CHFIREX
CHFIRE1
	MOVI	[30,75],A10		;FIRE A STRAIGHT SHOT
	CREATE	0EBH,EBULL45
CHFIREX
	MMFM	SP,A1,A7,A8,A10
	RETS
*
*CHOPPER BOMB DROP
*
CHBOMB
	MMTM	SP,A1,A7,A8,A10
	CALLA	CARSCRTST
	JRNZ	CHBOMBX   		;NZ = OFF SCREEN	 

	SWAP	A10,A8
	CALLA	DFRMGRND
	CMPI	80,A1
	JRLT	CHBOMBX			;NOT HIGH ENOUGH FOR BOMBING
	MOVE	@P1DATA+POBJ,A0,L	;LOOKING FOR PLAYER 1
	CALLR	BOMBPLY			;SEE IF PLAYER IN SIGHT
	JRC	CHBOMB2

	MOVE	@P2DATA+POBJ,A0,L	;LOOKING FOR PLAYER 1
	CALLR	BOMBPLY			;SEE IF PLAYER IN SIGHT
	JRNC	CHBOMBX
CHBOMB2
	SWAP	A10,A8
	MOVI	pilot1,A1		;FLIP THE DUDE OFF
	MOVE	*A8(OFLAGS),A4,W
	CALLA	ANI
CHBOMB3
	MOVE	A10,A8
	MOVI	[23,81],A10
	CREATE	0EBH,EBOMBP
CHBOMBX
	MMFM	SP,A1,A7,A8,A10
	RETS
*
*DROP A BOMB REGARDLESS
*
BOMBLO
	MMTM	SP,A1,A7,A8,A10
	JRUC	CHBOMB3

**************************************************************************
*                                                                        *
* EBOMBP - ENEMY BOMB PROCESS
* A8  = OBLOCK PTR OF ENEMY						 *
* A10 = XY OFFSETS							 *
*                                                                        *
**************************************************************************
* A8  = PTR TO OBLOCK OF THE OBJECT DOING THE FIRING			 *
* A10 = BULLET OFFSET							 *
* A11 = PLAYER DATA PTR(0 = ENEMY NOT A PLAYER)				 *
* A14 = OBJECT INIT. TABLE						 *
* B0  = RELEASE SOUND TO MAKE						 *
* B4  = PLACE TO JUMP TO FINISH ANIMATION OF PROJECTILE			 *
EBOMBP
	CLR	A11
	MOVI	BOMBINIT,A14
	MOVI	BMBSND,B0
	MOVI	EBMBP1,B4
	JAUC	GBULLET
EBMBP1
	MOVI	BEOID|BOMBID,A1
	MOVE	A1,*A8(OID)		;STUFF YOUR ID
	MOVE	*A0(OXVEL),*A8(OXVEL),L
	MOVI	020000H,A1
	MOVE	A1,*A8(OYVEL),L
	MOVE	A8,A0			;PTR FOR INSERTION TO DATA BLOCK
	CALLA	INSOBJ			;PUT THE OBJECT ON THE LIST	 
	MOVI	ENEMY_BULLETS,A1
	CALLA	ADDSUPP
	CALLA	SHADST			;GIVE THIS GUY A SHADOW
BFALL
	SLEEP	3
	MOVE	*A8(OYVEL),A0,L		;EFFECT OF GRAVITY
	ADDI	05000H,A0
	MOVE	A0,*A8(OYVEL),L
	CALLA	DFRMGRND
	CMPI	0,A1
	JRGT	BFALL			;IN THE AIR STILL

*BLOW THIS BABY UP FOLKS !!!!!
	CLR	A0
	MOVE	A0,*A8(OPLINK),L	;ZERO OUT OPLINK
	MOVE	A8,A0
	CALLR	BCOLL1
	JAUC	SUCIDE			;WERE OUTA HERE

BMBSND	.WORD	0F310H,020H,08093H,0	;FALLING BOMB
*
*BOMB COLLISION
*A8 = PTR TO OTHER THING 
*A0 = PTR TO LAND MINE
*
BCOLL1 
	MOVE	A0,A8
	CALLA	DFRMGRND
	CMPI	10,A1
	JRLE	BCOL1NEX
	MOVI	NEXAIR,A7
	JRUC	BCOL1EXG
BCOL1NEX
	MOVI	NEXPLODE,A7    		;NORMAL EXPLOSION
BCOL1EXG
	MOVI	REXPID,A1		;EXPROSION PROCESS I.D.	
	MOVE	*A0(OZPOS),A2,W		;LAND MINE Z
	MOVE	*A0(OFLAGS),A9,W
	SLL	16,A9
	MOVX	A2,A9			;A9 = OFLAGS:OZPOS
	MOVE	*A0(OXPOS),A11,W
	MOVE	*A0(OYVAL),A2,L

	MOVE	*A0(OID),A10,W		;A10 = BOMB I.D.
	MOVY	A2,A11
	MOVE	A0,B0
	CALLA	GETPRC			;CREATE THE ROCKET EXPLOSION
	MOVE	B0,A0
	MOVE	*A0(OPLINK),A0,L
	JRZ	BCOLL4
	CALLA	KILL
BCOLL4
	MOVE	B0,A0
	MOVI	ENEMY_BULLETS,A1
	CALLA	DELSUPP
	CALLA	DELSOBJ
	CLR	A0
	INC	A0
	RETS

BOMBINIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	ROCKBIG,PROCKZ,BCOLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0
BCOLL
	.WORD	CAR3OID|WSHLDID
	.LONG	DUMRTSG

	.WORD	CAR3OID|CBODYID
	.LONG	DUMRTSG
	
	.WORD	BGLID
	.LONG	DUMRTSG

	.WORD	BGLTID
	.LONG	DUMRTSG

	.WORD	0     			;BLOW EVERYTHING UP
	.LONG	BCOLL1


**************************************************************************
*                                                                        *
* PBOMBP - PLAYER BOMB PROCESS						 *
* A8  = OBLOCK PTR OF ENEMY						 *
* A10 = XY OFFSETS							 *
*                                                                        *
**************************************************************************
* A8  = PTR TO OBLOCK OF THE OBJECT DOING THE FIRING			 *
* A10 = BULLET OFFSET							 *
* A11 = PLAYER DATA PTR(0 = ENEMY NOT A PLAYER)				 *
* A14 = OBJECT INIT. TABLE						 *
* B0  = RELEASE SOUND TO MAKE						 *
* B4  = PLACE TO JUMP TO FINISH ANIMATION OF PROJECTILE			 *
*
*PLAYER ONE BOMB
PBOMBP1
	MOVI	PBMBP1,B4
	MOVI	P1DATA,A11
	JRUC	PBOMBP
*PLAYER TWO BOMB
PBOMBP2
	MOVI	P2DATA,A11
	MOVI	PBMBP2,B4
PBOMBP
	MOVE	*A11(POFFSET),A10,L
	MOVE	@PLAYCAR,A8,L
	MOVI	PBMBINIT,A14
	MOVI	BMBSND,B0
	JAUC	GBULLET
PBMBP1
	MOVI	B1OID|BOMBID,A1
	JRUC	PBMBPG
PBMBP2
	MOVI	B2OID|BOMBID,A1
PBMBPG
	MOVE	A1,*A8(OID)		;STUFF YOUR ID
	MOVE	*A0(OXVEL),*A8(OXVEL),L
	MOVI	020000H,A1
	MOVE	A1,*A8(OYVEL),L
	MOVE	A8,A0			;PTR FOR INSERTION TO DATA BLOCK
	CALLA	INSOBJ			;PUT THE OBJECT ON THE LIST	 
	MOVI	PLAYER_BULLETS,A1
	CALLA	ADDSUPP
	CALLA	SHADST			;GIVE THIS GUY A SHADOW
PBFALL
	SLEEP	3
	MOVE	*A8(OYVEL),A0,L		;EFFECT OF GRAVITY
	ADDI	05000H,A0
	MOVE	A0,*A8(OYVEL),L
	CALLA	DFRMGRND
	CMPI	0,A1
	JRGT	PBFALL			;IN THE AIR STILL

*BLOW THIS BABY UP FOLKS !!!!!
	CLR	A0
	MOVE	A0,*A8(OPLINK),L	;ZERO OUT OPLINK
	MOVE	A8,A0
	CALLR	PBCOLL1
	JAUC	SUCIDE			;WERE OUTA HERE

*
*PLAYER BOMB COLLISION
*A8 = PTR TO OTHER THING 
*A0 = PTR TO LAND MINE
*
PBCOLL1 
	MOVE	A0,A8
	CALLA	DFRMGRND
	CMPI	10,A1
	JRLE	PBCOL1NEX
	MOVI	NEXAIR,A7
	JRUC	PBCOL1EXG
PBCOL1NEX
	MOVI	NEXPLODE,A7    		;NORMAL EXPLOSION
PBCOL1EXG
	MOVI	REXPID,A1		;EXPROSION PROCESS I.D.	
	MOVE	*A0(OZPOS),A2,W		;LAND MINE Z
	MOVE	*A0(OFLAGS),A9,W
	SLL	16,A9
	MOVX	A2,A9			;A9 = OFLAGS:OZPOS
	MOVE	*A0(OXPOS),A11,W
	MOVE	*A0(OYVAL),A2,L

	MOVE	*A0(OID),A10,W		;A10 = BOMB I.D.
	MOVY	A2,A11
	MOVE	A0,B0
	CALLA	GETPRC			;CREATE THE ROCKET EXPLOSION
	MOVE	B0,A0
	MOVE	*A0(OPLINK),A0,L
	JRZ	PBCOLL4
	CALLA	KILL
PBCOLL4
	MOVE	B0,A0
	MOVI	PLAYER_BULLETS,A1
	CALLA	DELSUPP
	CALLA	DELSOBJ

	MOVE	@PCRSNDF,A0,W			;RUN SOUND ON?
	JRZ	PBCOLL5				;NO
	SOUND1	CHOPCRUZ			;RESTART SOUND AFTER BOMB
PBCOLL5
	CLR	A0
	INC	A0
	RETS

PBMBINIT
	.LONG	0,0,0,0
	.WORD	0,0
	.LONG	ROCKBIG,PROCKZ,PBCOLL
	.WORD	DMAWNZ|M_PIXSCAN,0
	.LONG	0

PBCOLL
	.WORD	TRAN2OID|WSHLDID
	.LONG	DUMRTSG

	.WORD	TRAN2OID|CBODYID
	.LONG	DUMRTSG

	.WORD	BGLID
	.LONG	DUMRTSG

	.WORD	BGLTID
	.LONG	DUMRTSG

	.WORD	0     			;BLOW EVERYTHING UP
	.LONG	PBCOLL1

*	CALLA	GPALOBJ
*	JRZ	ENINITX		;BR = FAILURE ON PALETTE CREATION
*	MOVE	A13,*A0(OPLINK),L	;LINK HOME
*	CALLA	STFOBJ
*
*SETUP POSITION	X,Y,Z
*	MOVE	A10,A9
*	ZEXT	A9
*	SRL	16,A10
*
*	MOVE	*A8(OXPOS),A1,W
*	ADD	A9,A1
*	MOVE	A1,*A0(OXPOS),W
*	
*	MOVE	*A8(OYPOS),A1,W
*	ADD	A10,A1
*	MOVE	A1,*A0(OYPOS),W
*
*	MOVE	*A8(OZPOS),A1,W
*	MOVE	A1,*A0(OZPOS),W
*
**SETUP VELOCITY
*	
*	MOVE	A0,A8			;PTR FOR INSERTION TO DATA BLOCK
*	CALLA	INSOBJ			;PUT THE OBJECT ON THE LIST	 
*	MOVI	ENEMY_BULLETS,A1
*	CALLR	ADDSUPP
*	CALLA	SHADST			;GIVE THIS GUY A SHADOW
*
*CHOPPER ROCKET FIRE
*FIRE A ROCKET IF THE PLAYER IS IN LINE OF FIRE
*
CHROCK
	MMTM	SP,A1,A7,A8,A10
	CALLA	CARSCRTST
	JRNZ	CHROCKX		   	;NZ = OFF SCREEN	 

	MOVE	@P1DATA+POBJ,A0,L	;LOOKING FOR PLAYER 1
	CALLR	TARGPLY			;SEE IF PLAYER IN SIGHT
	JRC	CHROCK2

	MOVE	@P2DATA+POBJ,A0,L	;LOOKING FOR PLAYER 1
	CALLR	TARGPLY			;SEE IF PLAYER IN SIGHT
	JRNC	CHROCKX
CHROCK2
	MOVE	A10,A8
	MOVI	[23,81],A10
	CREATE	0EBH,EROCKET
CHROCKX
	MMFM	SP,A1,A7,A8,A10
	RETS
*
*FIRE A ROCKET REGARDLESS
ROCKBLO
	MMTM	SP,A1,A7,A8,A10
	JRUC	CHROCK2
	
*
*CHECK IF PLAYER IN ROCKET RANGE
*RETURNS CS IF IN RANGE
TARGPLY:
	JRZ	TARGPF			;ZERO INDICATES INACTIVE
	CALLA	XZCHK
	CMPI	20,A4
	JRHS	TARGPF
	MOVE	*A8(OXVEL),A7,L
	XOR	A1,A7
	MOVE	A7,A7
	JRN	TARGPF			;COOL YOUR JETS PLAYER OUT OF RANGE
	CMPI	60,A3
	JRLS	TARGPF			;NOT FAR ENOUGH OUT FRONT
	MOVE	*A8(OYPOS),A1
	ADDK	30,A1
	MOVE	*A0(OYPOS),A2
	SUB	A1,A2
	ABS	A2
	CMPI	20,A2
	JRHS	TARGPF
	SETC
	RETS
TARGPF:
	CLRC
	RETS
*
*CHECK IF PLAYER IN BOMB RANGE
*RETURNS CS IF IN RANGE
BOMBPLY:
	JRZ	BOMBPF			;ZERO INDICATES INACTIVE
	CALLA	XZCHK
	CMPI	20,A4
	JRHS	BOMBPF
	MOVE	*A8(OXVEL),A7,L
	XOR	A1,A7
	MOVE	A7,A7
	JRN	BOMBPF			;COOL YOUR JETS PLAYER OUT OF RANGE
	CMPI	60,A3
	JRLS	BOMBPF			;NOT FAR ENOUGH OUT FRONT
	SETC
	RETS
BOMBPF:
	CLRC
	RETS
*
*GET CHOPPER VELOCITY
*A11=PLAYER GOING AFTER
*
CHOPVEL:
	MOVE	A11,A0
	CALLA	GETPLYR		;NOW GET AN ACTIVE PLAYER
	MOVE	*A0(POBJ),A0,L	;GET THE OBJECT BLOCK
	CALLA	XZCHK
	MOVE	*A8(OXVEL),A7,L
	XOR	A1,A7
	MOVE	A7,A7
	JRN	CHOPV00			;COOL YOUR JETS PLAYER OUT OF RANGE
	CMPI	100,A3
	JRLS	CHOPV00			;NOT FAR ENOUGH OUT FRONT
	
	CMPI	7,A4
	JRHS	CHOPV0
CHOPV00
	MOVE	*A8(OZVEL),A2,L
	MOVE	A2,A3
	SRA	2,A3    		;CLEAR VELOCITY, TOO CLOSE
	SUB	A3,A2
	JRUC	CHOPV2
CHOPV0
	MOVI	08000H,A1
	MOVE	A2,A2
	JRNN	CHOPV1
	NEG	A1
CHOPV1
	MOVE	*A8(OYVEL),A3,L		;GET ZVEL
	MOVE	*A8(OZVEL),A2,L
	ADD	A1,A2
	ADD	A1,A3
	MOVE	A2,A4
	MOVE	A3,A5
	ABS	A4
	CMPI	030000H,A4
	JRLS	CHOPV2
	SUB	A1,A2
	SUB	A1,A3
CHOPV2:
	MOVE	A2,A1
	MOVE	*A8(OZPOS),A6,W
	MOVE	@PLZMIN,A7,W
	ADDK	4,A7		;FUDGE FACTOR
	CMP	A6,A7
	JRLO	CHOPV20
	MOVE	A1,A1
	JRNN	CHOPV20		;GET OFF THE WALL
	CLR	A1
CHOPV20
	CALLA	CARYZVEL
	RETS
**************************************************************************
*                                                                        *
* CHOPFIRE - MAKE THE CHOPPER SPAWN A BULLET PROCESS			 *
*                                                                        *
**************************************************************************
CHOPFIRE
	MMTM	SP,A1,A7,A8
	MOVE	A10,A8
	MOVI	[23,81],A10
	CREATE	0EBH,EDBULLET
	MOVE	A8,A10
	MMFM	SP,A1,A7,A8
	RETS
**************************************************************************
*                                                                        *
* CHOPROCK - MAKE THE CHOPPER SPAWN A ROCKET PROCESS			 *
*                                                                        *
**************************************************************************
CHOPROCK
	MMTM	SP,A1,A7,A8
	MOVE	A10,A8
	MOVI	[23,81],A10
	CREATE	0EBH,EROCKET
	MOVE	A8,A10
	MMFM	SP,A1,A7,A8
	RETS
**************************************************************************
*                                                                        *
* CHOPF45 - CHOPPER SPAWN A 45 DEGREE DOWN BULLET			 *
*                                                                        *
**************************************************************************
CHOPF45
	MMTM	SP,A1,A7,A8
	MOVE	A10,A8
	MOVI	[30,75],A10
	CREATE	0EBH,EBULL45
	MOVE	A8,A10
	MMFM	SP,A1,A7,A8
	RETS
**************************************************************************
*                                                                        *
* CHOPFLIP - FLIP THE CHOPPER						 *
* NOTE: KEEP THIS ABOVE CHOPZRST					 *
*                                                                        *
**************************************************************************
CHOPFLIP
	MMTM	SP,A1,A4,A8
	MOVE	A10,A8
	MOVE	*A8(OFLAGS),A4,W
	XORI	M_FLIPH,A4
	MOVE	*A8(OIMG),A1,L
	CALLA	ANI
	MMFM	SP,A1,A4,A8
	CALLR	CHOPART
**************************************************************************
*                                                                        *
* CHOPZRST - RESET ALL CHOPPER PART Z POSITIONS TO MATCH THE MAIN	 *
* 	  BODY.								 *
* A8 = PTR TO PILOT							 *
* A10 = PTR TO CHOPPER							 *
*                                                                        *
**************************************************************************
CHOPZRST
	MMTM	SP,A0,A11
	MOVE	*A10(OZVAL),A11,L	;GET THE CURRENT CAR Z VALUE
	MOVE	*A13(ETEMP1),A0,L
	JRZ	CHOPZR1
	MOVE	A11,*A0(OZVAL),L	;SKIDS
CHOPZR1
	MOVE	*A13(ETEMP2),A0,L
	JRZ	CHOPZR2
	MOVE	A11,*A0(OZVAL),L	;EXTENSION
CHOPZR2
	MOVE	*A13(ETEMP3),A0,L
	JRZ	CHOPZR3
	MOVE	A11,*A0(OZVAL),L	;TAIL
CHOPZR3
	INC	A11
	MOVE	*A13(ETEMP6),A0,L
	JRZ	CHOPZR3A
	MOVE	A11,*A0(OZVAL),L	;LOGO = CHOPPER Z + 1
CHOPZR3A
	SUBK	3,A11
	MOVE	A8,A8
	JRZ	CHOPZR4
	MOVE	A11,*A8(OZVAL),L	;PILOT = CHOPPER Z - 2
CHOPZR4
	INC	A11
	MOVE	*A13(ETEMP8),A0,L
	JRZ	CHOPZR4B
	MOVE	A11,*A0(OZVAL),L	;PASSENGER = CHOPPER Z - 1
CHOPZR4B
	ADDK	2,A11
	MOVE	*A13(ETEMP4),A0,L
	JRZ	CHOPZR4A
	MOVE	A11,*A0(OZVAL),L	;BLADE = CAR Z + 2
CHOPZR4A
	MOVE	*A13(BMIRROR),A0,L
	JRZ	CHOPZR5
	MOVE	A11,*A0(OZVAL),L
CHOPZR5
	MOVE	*A10(OFLAGS),A0,W
	BTST	B_FLIPH,A0
	JRNE	CHOPZR6
	SUBK	2,A11			;MOVE ROTOR TO OTHER SIDE
CHOPZR6
	MOVE	*A13(ETEMP5),A0,L
	JRZ	CHOPZR7
	MOVE	A11,*A0(OZVAL),L	;ROTOR = +/- 1 DEPENDING ON FLIP
CHOPZR7
	MMFM	SP,A0,A11
	RETS

**************************************************************************
*                                                                        *
* CHOPART - SET THE FLIP BITS OF ALL CHOPPER PARTS ACCORDING TO		 *
* 	   THE MAIN BODY. THIS INCLUDES THE DRIVER.			 *
* A8 = PTR TO DRIVER							 *
* A10 = PTR TO THE VEHICLE						 *
* A13 = PTR TO PROC BLOCK						 *
*                                                                        *
**************************************************************************
CHOPART
	MMTM	SP,A0,A1,A4,A8,A13
	MOVE	*A10(OFLAGS),A4,W
	MOVE	A8,A0
	MOVE	A10,A8
	CALLA	GETANIXY
	MOVE	A2,B2
	MOVE	A3,B3
	TEST	A0
	JRZ	CHFLIPP1
	CALLA	GANISAG			;RE-ADJUST DRIVER
CHFLIPP1
	ADDI	ETEMP1,A13
	MOVK	NPARTS,A6
CHFLIPP2
	MOVE	*A13+,A0,L
	JRZ	CHFLIPP3
	MOVE	B2,A2
	MOVE	B3,A3
	CALLA	GANISAG			;RE-ADJUST PARTS
CHFLIPP3
	DSJS	A6,CHFLIPP2
	MOVE	*A10(OPLINK),A13,L
	MOVE	*A13(BMIRROR),A0,L
	JRZ	CHFLIPP4
	XORI	M_FLIPH,A4		;KEEP MIRRORED BLADE CORRECT
	MOVE	B2,A2
	MOVE	B3,A3
	CALLA	GANISAG			;RE-ADJUST BLADE
CHFLIPP4
	MOVE	*A10(OFLAGS),A4,W	;DONT FLIP LOGO
	BTST	B_FLIPH,A4
	JREQ	CHFLIPP5      		;NO FLIP, EXIT
	MOVE	*A10(OPLINK),A13,L
	MOVE	*A13(ETEMP6),A0,L
	JREQ	CHFLIPP5		;NO LOGO, EXIT
	MOVE	*A0(OFLAGS),A4,L
	CLR	A1
	MOVY	A1,A4	  		;ZERO OFFSET
	XORI	M_FLIPH,A4		;CAN FLIP
	MOVE	@kraklo+040H,A1,L	;GET SAG
	MOVE	A4,*A0(OFLAGS),L
	MOVE	A1,*A0(OSAG),L
CHFLIPP5
	MMFM	SP,A0,A1,A4,A8,A13
	RETS

**************************************************************************
*                                                                        *
* CHOPSETZ - SET Z POSITION OF CHOPPER ACCORDING TO THE SKIDS,		 *
* 		THEN RESET THE REST TO MATCH THAT BAD DOG.		 *
* A8 = PTR TO PILOT							 *
* A10 = PTR TO CHOPPER							 *
* A13 = PTR TO PROC BLOC						 *
*                                                                        *
**************************************************************************
CHOPSETZ
	PUSH	A0
	MOVE	*A13(ETEMP1),A0,L	
	CALLA	SETZPOS
	MOVE	*A0(OZVAL),*A10(OZVAL),L
	MMFM	SP,A0
	JRUC	CHOPZRST

**************************************************************************
*                                                                        *
* CHOPPOWR - CHOPPER START UP W/SOUND							 *
* RETURNS								 *
* A11 = PTR TO ROTOR SPIN PROC						 *
* NOTE: CALL THIS ONLY FROM THE CHOPPER MAIN PROCESS IF YOU WANT	 *
*       THE SPAWNED PROCESSES TO RESIDE DIRECTLY AFTER THIS ONE.	 *
*                                                                        *
**************************************************************************
CHOPPOWR
	MMTM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14
	MOVI	4,A0
	CALLA	RANDU
	DEC	A0
	JREQ	CHPPWR1
	MOVI	000100E17H,A14		  	;CREATE A CHOPPER LOAF
	CMPI	3,A0
	JRNE	CHPPWR00
	INC	A14
CHPPWR00:
	CALLA	GETANIXY
	MOVE	A2,A5
	SRL	16,A3
	MOVX	A3,A5
CHPPWR0L
	CALLA	LOFCOLD
	DSJS	A0,CHPPWR0L
CHPPWR1
	MMFM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14
	SOUND1	POWERSND
	MMTM	A12,A9,A11
	MOVE	A8,B0
	MOVE	A10,B1

	MOVE	*A13(ETEMP1),A8,L 	;CHOP LIGHT BLINKER
	CREATE	INDPID,CHOPLIT
	MOVE	A0,*A8(OPLINK),L

	MOVI	ROTORSPN,A9
	MOVK	4,A11			;BLADE SPEED (SLEEP TIME)
	MOVE	*A13(ETEMP5),A8,L
	CREATE	INDPID,ANIMATOR
	MOVE	A0,*A8(OPLINK),L
	MOVE	A0,A3
	MOVI	BLADESPN,A9
	MOVK	4,A11
	MOVE	*A13(ETEMP4),A8,L
	MOVE	*A13(BMIRROR),A10,L
	CREATE	INDPID,ANIMATE2
	MOVE	A0,*A8(OPLINK),L
	MOVE	A0,*A10(OPLINK),L
	MOVE	A0,A9
	MOVE	A3,A11
	MOVI	45H,A0
	MOVE	B0,A8
	MOVE	B1,A10
CHOPP
	MMTM	A12,A0
	JSRP	CHPSLP
	MMFM	A12,A4
	MOVE	A9,A0
	MOVE	A11,A9
	CALLA	GETA11	
	JRZ	CHOPP1
	DEC	A11
	CALLA	PUTA11
CHOPP1
	MOVE	A0,A1
	MOVE	A9,A0
	CALLA	GETA11
	JRZ	CHOPPX
	DEC	A11
	CALLA	PUTA11
	MOVE	A9,A11
	MOVE	A1,A9
	MOVE	A4,A0
	SUBK	8,A0
	JRUC	CHOPP
CHOPPX
	MMFM	A12,A9,A11
	RETP

**************************************************************************
*                                                                        *
* CHOPFULL - SET CHOPPER AT FULL POWER					 *
*                                                                        *
**************************************************************************
CHOPFULL
	MMTM	SP,A0,A1,A7,A8,A9,A10,A11
	MOVE	*A13(ETEMP1),A9,L 	;CHOP LIGHT BLINKER
	MOVE	*A9(OPAL),A8,W		;CREATE THE PROPER CHOPPER FLASHER
	CREATE	INDPID,CHOPLITG
	MOVE	A0,*A9(OPLINK),L

	MOVI	ROTORSPN,A9
	MOVK	1,A11			;BLADE SPEED (SLEEP TIME)
	MOVE	*A13(ETEMP5),A8,L
	CREATE	INDPID,ANIMATOR
	MOVE	A0,*A8(OPLINK),L
	MOVI	BLADESPN,A9
	MOVK	1,A11
	MOVE	*A13(ETEMP4),A8,L
	MOVE	*A13(BMIRROR),A10,L
	CREATE	INDPID,ANIMATE2
	MOVE	A0,*A8(OPLINK),L
	MOVE	A0,*A10(OPLINK),L
	MMFM	SP,A0,A1,A7,A8,A9,A10,A11
	RETS
*
*SLEEP A0, CALL CARSCAN EVERY FRAME

CHPSLP
	CALLR	CARSCAN
	MMTM	A12,A0
	SLEEP	1
	MMFM	A12,A0
	DEC	A0
	JRNE	CHPSLP
	RETP
*
*SCAN FOR CAR COLISSION ON GROUND
*A8=CHOPPER PILOT
CARSCAN
	MMTM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8
	MOVE	@CARLIST,A0,L
	JREQ	CSCLX
CSCL1
	MOVE	*A0(OID),A1,W
	CMPI	TRAN1OID|CBODYID,A1
	JRNE	CSCLP

	MOVI	0,A1		;X OFFSET
	MOVI	0,A3		;Z OFFSET
	MOVI	100,A5		;X RANGE
	MOVI	16,A6		;Z RANGE
	CALLA	XZCNTCK
	JRNC	CSCLP
	MOVE	A0,A8		;A8=THING THAT HIT CHOPPER
	CREATE	INDPID,CHOPHIT
CSCLP
	MOVE	*A0(OSLINK),A0,L
	JRNE	CSCL1
CSCLX
	MMFM	SP,A0,A1,A2,A3,A4,A5,A6,A7,A8
	RETS

CHOPHIT
*	CALLR	ROCKBLO
*	CALLR	BOMBLO
	MOVE	A10,A0		;MAIN BODY T0 A0
	MMTM	SP,A0,A8
	CALLR	CHOPCOLR
	MMFM	SP,A0,A8
	SWAP	A0,A8
	CALLA	PCDRIVRC
	JAUC	SUCIDE
**************************************************************************
*                                                                        *
* ANIMATE2 - INDEPENDENT ANIMATION PROCESS OF A MIRRORED IMAGE,	 	 *
* 	   ANIMATES THE SAME SCRIPT UPON TWO DIFFERENT OBJECTS		 *
* 	   ONE FLIPPED THE OTHER NOT. OH YEAH, INFINITELY?		 *
* A8 = OBJECT TO ANIMATE						 *
* A9 = SCRIPT								 *
* A10 = MIRROR IMAGE							 *
* A11 = # OF TICKS PER FRAME						 *
*                                                                        *
**************************************************************************
ANIMATE2
	PUSHP	A9		;SAVE BEGINNING OF SCRIPT
ANIMAT21
	MOVE	A9,A14
	MOVK	4,A1
	JSRP	FRANIM
	JRC	ANIMAT23	;BR = HIT END OF SCRIPT
	MOVE	A14,A9
	SWAP	A8,A10
	JSRP	FRANIM		;ANIMATE THE OTHER HALF
	SWAP	A8,A10
	MOVI	ANIMAT21,A7
	MOVE	A11,A0
	JRNZ	ANIMAT22	;NO EXTRA SLEEP
	MOVK	1,A0
ANIMAT22
	JAUC	PRCLSP		;SLEEP ADDITIONAL TIME
ANIMAT23	
	PULLP	A9		;RESTORE LIST POINTER
	JRUC	ANIMATE2

**************************************************************************
*                                                                        *
* CHOPLAND - LAND THE CHOPPER ON THE GROUND.				 *
* NOTE: CALL WITH JSRP							 *
*                                                                        *
**************************************************************************
*CHOPLAND
*	PUSHP	A8
*	MOVI	[1,0],A1
*	CALLA	CARYVEL
*	MOVE	*A13(ETEMP1),A8,L
*CHOPLND1
*	SLEEP	3
*	CALLA	DFRMGRND
*	JRGT	CHOPLND1
*	PULLP	A8
*	CALLR	CHOPSETZ		;RESET THE CHOPPER Z FOR YUCKS
*	CLR	A1	
*	CALLA	CARYVEL
*	RETP
*
**************************************************************************
*                                                                        *
* CHOPSHAD - MAKE A CHOPPER SHADOW					 *
*                                                                        *
**************************************************************************
CHOPSHAD
	MMTM	SP,A0,A8
	MOVE	*A13(ETEMP4),A8,L	;FIRST HALF OF BLADE
	JRZ	CHOPSHADX		;BR = NO BLADE
	CALLA	SHADST
	MOVE	*A13(BMIRROR),A8,L	;MIRRORED HALF OF BLADE
	JRZ	CHOPSHADX
	CALLA	SHADST
CHOPSHADX
	MMFM	SP,A0,A8
	RETS
**************************************************************************
*                                                                        *
* CHOPXACC - START CHOPPER X ACCELERATION PROCESS. IT WILL		 *
* 	  TAKE CARE OF FLIPPED VEHICLES					 *
* A8 = PTR TO PILOT							 *
* A9 = ABS(ACCELERATION FACTOR/TICK), 32 BITS				 *
* A10 = PTR TO CHOPPER							 *
* A11 = ABS(TERMINAL VELOCITY), 32 BITS					 *
* A13 = PTR TO CHOPPER PROCESS						 *
* RETURNS:								 *
* A0 = PTR TO PROC. (= 0 IF FAILED)					 *
* A9 = VALUE PASSED							 *
* A11 = VALUE PASSED							 *
* Z BIT SET IF IT FAILED					 	 *
*                                                                        *
**************************************************************************
CHOPXACC
	MMTM	SP,A1,A7
	CALLA	KILLCARP
	MOVE	*A10(OFLAGS),A1,W	
	BTST	B_FLIPH,A1
	JREQ	CHOPACC1
	NEG	A11
	NEG	A9
CHOPACC1
	CREATE	INDPID,CHOPXAPR
	JRZ	CHOPACCX
	MOVE	A13,*A0(PDATA),L
CHOPACCX
	MOVE	A0,*A13(ETEMP),L
	MMFM	SP,A1,A7
	RETS
**************************************************************************
*                                                                        *
* CHOPXAPRM - PROCESS TO ACCELERATE AN OBJECT BY SOME CONSTANT.		 *
* A8 = PTR TO DRIVER							 *
* A9 = ACCELERATION FACTOR/TICK						 *
* A10 = PTR TO VEHICLE							 *
* A11 = TERMINAL VELOCITY, 32 BITS					 *
* *A13(PDATA) = PTR TO VEHICLE CONTROL PROCESS				 *
*                                                                        *
**************************************************************************
CHOPXAPR
	MOVE	*A10(OXVEL),A1,L
	ADD	A9,A1
	MOVE	A1,A2
	MOVE	A11,A3
	ABS	A2
	ABS	A3
	CMP	A2,A3
	JRLS	CHOPXAPX

	MOVE	A13,B0	
	MOVE	*A13(PDATA),A13,L
	CALLA	CARXVEL
	MOVE	B0,A13
	SLOOP	1,CHOPXAPR
CHOPXAPX
	MOVE	A11,A1
	MOVE	A13,B0	
	MOVE	*A13(PDATA),A13,L
	CALLA	CARXVEL
	CLR	A1
	MOVE	A1,*A13(ETEMP),L
	MOVE	B0,A13
	DIE

**************************************************************************
*                                                                        *
* CHOPEXP - CHOPPER EXPLOSION PROCESS					 *
* A8 = CHOPPER BOTTOM OBJECT					 *
* A9 = OID OF ROCKET							 *
* A10= BOTTOM BODY
* A11= CHOPPER TOP
* I.D. = $ED                                                             *
**************************************************************************
CHOPEXP
	CALLA	PSTOPYZ
	MOVE	*A8(OFLAGS),A4,W	   	;NEW BOTTOM BODY
	MOVI	cark3,A1
	CALLA	ANI
	MOVE	A8,A10
	MOVE	A11,A8
	CALLA	PSTOPYZ
	MOVE	*A8(OFLAGS),A4,W	   	;NEW TOP BODY
	MOVI	cark4,A1
	CALLA	ANI
	MOVI	020000H,A0
	MOVE	*A10(OXVEL),A1,L		;DECAY XVEL
	SRA	1,A1
	MOVE	A1,*A10(OXVEL),L
	MOVE	A1,*A11(OXVEL),L
	JRUC	FALLP1
FALLP:
	SLEEP	3
	MOVE	*A10(OYVEL),A0,L		;EFFECT OF GRAVITY
	ADDI	00C000H,A0
FALLP1:
	MOVE	A0,*A10(OYVEL),L
	MOVE	A0,*A11(OYVEL),L
	JRN	FALLP
	MOVE	A10,A8
	CALLA	DFRMGRND
	JRGT	FALLP				;IN THE AIR STILL
	SRL	15,A0				;COLLAPSE RANDOM = 2X VEL
	CALLA	RANDU
	ADDK	8,A0
	MOVE	*A11(OYPOS),A1,W
	ADD	A0,A1
	MOVE	*A10(OYPOS),A2,W
	SUBI	3,A2
	CMP	A2,A1
	JRLS	FALLP10
	MOVE	A2,A1
FALLP10	
	MOVE	A1,*A11(OYPOS),W		;COLLAPSE THE SUCKER
	CALLR	CHOPBLO				;MAKE AN EXPLOSION ON HIT
	MOVE	*A10(OXVEL),A1,L		;DECAY XVEL
	SRA	1,A1
	MOVE	A1,*A10(OXVEL),L
	MOVE	A1,*A11(OXVEL),L
	MOVE	*A10(OYVEL),A0,L		;EFFECT OF GRAVITY
	MOVI	0A0000000H,A1			;BOUNCE EFFECT	RATIO
	MPYU	A1,A0
	NEG	A0
	CMPI	0FFFD8000H,A0
	JRLT	FALLP1
	CLR	A0
	MOVE	A0,*A10(OYVEL),L
	MOVE	A0,*A10(OXVEL),L
	MOVE	A0,*A11(OYVEL),L
	MOVE	A0,*A11(OXVEL),L
	MOVE	A10,A8
	SLEEP	30			;CHECK OUT CARCASS
	CREATE	0EDH,SINKCHOP
	MOVE	A11,A8
FALLP2
	MOVE	*A8(OYPOS),A0,W
	ADDK	1,A0
	MOVE	A0,*A8(OYPOS),W
	CALLA	DFRMGRND
	JRLE	SINKCHOP
	SLEEP	1
	JRUC	FALLP2

SINKCHOP
	MOVI	[1,1],A9
	JSRP	OSINK
	MOVE	A8,A10			;GET OBJECT DESCRIPTOR
	CALLA	DELCBODY 		;DELETE CAR BODY OBJECT AND QUIT
	DIE
*
*MAKE A LITTLE NUKE WHEN CHOPPER HITS THE GROUND
*
*NEXPLODE - NUCLEAR EXPLOSION THANG
*A9 = OFLAGS:OZPOS OF ROCKET
*A10 = OID OF ROCKET
*A11 = YX POSITION OF ROCKET
*ENTER HERE FOR AIR BOMB
CHOPBLO
	MMTM	SP,A0,A8,A9,A10,A11
	MOVE	*A8(OZPOS),A2,W		;LAND MINE Z
	INC	A2			;MAKE HIM IN FRONT OF CHOPPER
	MOVE	*A8(OFLAGS),A9,W
	SLL	16,A9
	MOVX	A2,A9			;A9 = OFLAGS:OZPOS
	CALLA	GETANIX
	MOVE	A0,A11
	MOVK	30,A0
	CALLA	SRAND
	ADD	A0,A11
	MOVE	*A8(OYPOS),A2,L
	MOVE	*A8(OSIZEY),A3,L
	ADD	A3,A2
	SUBI	3,A2			;FUDGE FACTOR
	SLL	16,A2
	MOVY	A2,A11
	MOVI	NEXPLODE,A7    		;NORMAL EXPLOSION
	MOVI	REXPID,A1		;EXPROSION PROCESS I.D.	
	MOVI	BEOID|BOMBID,A10
	CALLA	GETPRC			;CREATE THE ROCKET EXPLOSION
	MMFM	SP,A0,A8,A9,A10,A11
	RETS
*
*BLOW THE PILOT PROCESS
*A8=PILOT
PILBLO
	CALLA	PSTOPYZ
	MOVI	028000H,A0
	CALLA	SRAND
	MOVE	*A8(OXVEL),A1,L		;DECAY XVEL + ADD RANDOM
	SRA	1,A1
	ADD	A0,A1
	MOVE	A1,*A8(OXVEL),L
	MOVI	030000H,A0
	CALLA	RANDU
	ADDI	0FFFC0000H,A0
	MOVE	A0,*A8(OYVEL),L		;Y VEL
	MOVE 	*A8(OXPOS),A10,W	;SAVE OLD POSITION	
	MOVE	*A8(OYPOS),A11,W
	MOVI	LOFDEXP,A9
	MOVK	4,A1
	JSRP	FRANIM
	MOVE	A10,*A8(OXPOS),W	;PUT HIM IN SAME OLD SPOT
	MOVE	A11,*A8(OYPOS),W
PILBLO1
	MOVI	LOFDEXP,A9
PILBLP
	MOVK	4,A1
	JSRP	FRANIM
	JRC	PILBLO1
	MOVE	*A8(OYVEL),A0,L		;DECREASE Y VELOCITY
	ADDI	GRAVITY,A0
	MOVE	A0,*A8(OYVEL),L
      	JRN	PILBL2
	CALLA	DFRMGRND		;DID HE HIT THE GROUND?
	JRLE	PILHIT			;BR = YES
PILBL2
	SLOOP	3,PILBLP
PILHIT
	CALLA	PSTOP
	MOVI	LDEXP1,A9		;GET BURN FRAMES
	CALLA	GETANIXY		;GET THE ANIMATION POINT

	SUBI	[50H,0],A2		;OFFSET TO Y

	MOVE	*A8(OFLAGS),A4,W					 
	ANDNI	M_FLIPV,A4		;NO UPSIDE-DOWN FIRES ALLOWED	 
	BTST	B_FLIPH,A4
	JREQ	PILBL4			;NON-CENTERED A-POINTS ARE A B-I-T-C-H
	SUBI	[60H,0],A3
PILBL4
	ADDI	[30H,0],A3

	SOUND1	SIZZSND			;SIZZLE,SIZZLE, TOIL AND GRIZZLE
	MOVE	A8,A0
	CALLA	GANISAG			;SHOW THE NEW ADJUSTMENTS
	MOVK	1,A1
	JSRP	FRANIM			;ANIMATE THE REST S.V.P.
	MOVI	[1,1],A9
	JAUC	ESINK		;BAIL OUT OF HERE
**************************************************************************
*                                                                        *
* TAILCOLR - CHOPPER TAIL SECTIONS, COLLISION WITH ROCKET BOMB		 *
* A0 = PTR TO TAIL SECTION						 *
* A8 = PTR TO ROCKET BOMB						 *
*                                                                        *
**************************************************************************
PILCOLR
	MOVE	*A0(OPLINK),A0,L	;PILOT KILL
	JRUC	CHOPCOL0
TAILCOLR
	CALLA	FINDMVP			;GET THE MASTER VEHICLE PROCESS
	JRZ	CHOPCOLRX
CHOPCOL0
	CALLA	GETA10			;GET THE PTR TO THE MAIN
	MOVE	A10,A0
**************************************************************************
*                                                                        *
* CHOPCOLR - CHOPPER MAIN, COLLISION WITH ROCKET BOMB			 *
* A0 = PTR TO CHOPPER MAIN						 *
* A8 = PTR TO OBJECT THAT HIT IT					 *
*                                                                        *
**************************************************************************
CHOPCOLR
	MOVE	*A8(OID),A11,W		;GET KILLERS I.D.
	MOVE	*A0(OPLINK),A0,L	;GET THE PROCESS
	CALLA	GETA8			;GET THE DRIVER PTR
	CALLA	GETA10			;PRESERVE CORRECT STATE FOR CDELALL
	PUSH	A0

	CALLA 	OIDATA 			;GET PLAYER DATA FROM OID
	JRC	CHOPCLR0		;NOT A PLAYER KILL
	MOVI	05000H,A1
	CALLA	SCORE
	CALLA	PUT5K			;DO A FLOATER
CHOPCLR0
	CREATE	0EDH,PILBLO		;CREATE PILOT BLOW PROCESS
	MOVK	6,A0
	CALLA	RANDU
	ADDK	4,A0
	MOVE	A0,A6
CHOPDRP:
	CREATE	0EAH,DROPDRUG		;CREATE A DRUG DROPPING
	DSJS	A6,CHOPDRP

	PULL	A0
	PUSH	A13
	MOVE	A0,A13
	MOVE	*A13(ETEMP2),A11,L	;SAVE THE TAIL PART	IN A11
	CLR	A14
	MOVE	A14,*A13(ETEMP2),L	;DONT DELETE IT
	MOVI	DUMCOLL,A14
	MOVE	A14,*A10(OCVECT),L	;COLLISION POINTER NULL FOR NOW
	MOVE	A14,*A11(OCVECT),L	;COLLISION POINTER NULL FOR NOW
	MOVE	A14,*A8(OCVECT),L	;COLLISION POINTER NULL FOR NOW
	CLR	A8			;DONT DELETE PILOT
  	CALLA	CDELALL			;DELETE ALL CHOPPER PARTS
	PULL	A13
	CALLA	KILL
	MOVE	A10,A8			;AND PASS IT TO THE PROCESS
	CREATE	0EDH,CHOPEXP		;CREATE THE CHOPPER EXPLODE PROC.
	MOVI	YAMOFF,A0
	CALLA	ONESND			;TURN OFF THE CAR IDLE SOUND
	MOVE	@CHOPCNT,A0,W
	DEC	A0
	MOVE	A0,@CHOPCNT,W
CHOPCOLRX
	CLR	A0
	CLRC
	RETS
***************************************************
*CHOPPER HIT BY BULLET
*
* A0 = PTR TO CHOPPER MAIN				  	 *
* A8 = PTR TO OBJECT THAT HIT IT					 *
***************************************************
CHOPBUL:
	MOVE	*A0(OPLINK),A1,L	;GET THE PROCESS
         MOVB	*A1(ECLIP),A2
	DEC	A2			;DECREMENT BULLET COUNT
	MOVB	A2,*A1(ECLIP)
	JRN	CHOPCOLR		;BLOW THE DUDE
	CLRC
	RETS
**************************************************************************
*                                                                        *
* P_GROUND - CHECK IF CHOPPER IS ON THE GROUND.				 *
* A13 = PTR TO CHOPPER PROCESS						 *
* RETURNS:								 *
* 	C BIT SET ON GROUND						 *
* 	C BIT CLR IN AIR						 *
*                                                                        *
**************************************************************************
P_GROUND
	MMTM	SP,A1,A8
	MOVE	*A13(ETEMP1),A8,L
	JRZ	P_GROUNDN		;NO SKIDS, MUST BE AIRBORN
	CALLA	DFRMGRND
	JRGT	P_GROUNDN
	SETC				;FLAG ON THE GROUND
P_GROUNDX
	MMFM	SP,A1,A8
	RETS
P_GROUNDN
	CLRC				;FLAG IN AIR
	JRUC	P_GROUNDX

**************************************************************************
*                                                                        *
* P_TOP - CHECK IF CHOPPER IS AT THE TOP OF THE WORLD.			 *
* A10 = PTR TO CHOPPER MAIN.						 *
* RETURNS:								 *
* 	C BIT SET ON TOP						 *
* 	C BIT CLR NOT ON TOP						 *
*                                                                        *
**************************************************************************
P_TOP
	MMTM	SP,A1,A2
	MOVE	*A10(OYPOS),A1,W	
	MOVE	@WORLDTLY+16,A2,W
	ADDI	SKYTOPOF,A2
	CMP	A2,A1
	JRGT	P_TOPN
	SETC				;FLAG AT THE TOP
P_TOPX
	MMFM	SP,A1,A2
	RETS
P_TOPN
	CLRC				;FLAG O.K.
	JRUC	P_TOPX

*
*COLLISION LISTS
*CHOPPER BODY
CHOPCOLL
	.WORD	B1OID|BULLETID
	.LONG	CHOPBUL
	.WORD	B2OID|BULLETID
	.LONG	CHOPBUL
	.WORD	B1OID|ROCKETID
	.LONG	CHOPCOLR
	.WORD	B2OID|ROCKETID
	.LONG	CHOPCOLR
	.WORD	0
	.LONG	DUMRTSG
*PILOT
PILCOLL
	.WORD	B1OID|ROCKETID
	.LONG	PILCOLR
	.WORD	B2OID|ROCKETID
	.LONG	PILCOLR
	.WORD	0
	.LONG	DUMRTSG
*OTHER PIECES
TAILCOLL
	.WORD	B1OID|ROCKETID
	.LONG	TAILCOLR
	.WORD	B2OID|ROCKETID
	.LONG	TAILCOLR
	.WORD	0
	.LONG	DUMRTSG

D3TAB
BLADESPN			;CHOPPER BLADE ROTATE ANIMATION
	.LONG	spin1
	.WORD	1
	.LONG	spin2
	.WORD	1
	.LONG	spin3
	.WORD	1
	.LONG	spin4
	.WORD	1
	.LONG	0

ROTORSPN			;CHOPPER ROTOR ROTATE ANIMATION
	.LONG	fana
	.WORD	1
	.LONG  	fanc
	.WORD	1
	.LONG	fane
	.WORD	1
	.LONG	0

CHOPILXY EQU	[19,79]		;CHOPPER PLAYER PILOT FIRING OFFSET
CHOPASXY EQU	[23,75]		;CHOPPER PLAYER PASSENGER FIRING OFFSET
CHOPILRB EQU	[19,79]		;CHOPPER PLAYER PASSENGER ROCKET BOMB OFFSET
CHOPASRB EQU	[23,75]		;CHOPPER PLAYER DRIVER ROCKET BOMB OFFSET
CHOFULL	EQU	[14,0]		;CHOPPER FULL SPEED
CHOACCEL EQU	[0,4000H]	;CHOPPER ACCELERATION
CHOBRAKE EQU	[0,7000H]	;CHOPPER BRAKING DECEL FACTOR
CHOYVEL	EQU	[-2,0]		;CHOPPER Y VELOCITY
CHOYACC	EQU	[0,2000H]
CHOYFULL EQU	[3,0]
CHOZERO	EQU	2		;# OF TICKS TO WAIT AT ZERO VELOCITY
CHOPSLP	EQU	2
CHOPTIME EQU	2200		;CHOPPER EXISTS FOR THIS MANY TICKS
**************************************************************************
*                                                                        *
* CHOFCOLD - CREATE A FLYABLE CHOPPER.  				 *
*                                                                        *
**************************************************************************
CHOFCOLD
	MOVE	@PCHOPCNT,A0,W
	JRNE	CHOPFX			;ONLY ONE AT A TIME DUDELY
	CREATE	CHOPFPID,CHOPPERF
CHOPFX
	RETS

**************************************************************************
*                                                                        *
* CHORCOLD - CREATE A FLYABLE CHOPPER TO THE RIGHT OF THE SCREEN.	 *
*                                                                        *
**************************************************************************
CHORCOLD
	MOVE	@PCHOPCNT,A0,W
	JRNE	CHOPFX			;ONLY ONE AT A TIME DUDELY
	CREATE	CHOPFPID,CHOPPERR
	JRUC	CHOPFX
**************************************************************************
*                                                                        *
* CHOPPERF - THE FLYABLE CHOPPER PROCESS!!!				 *
*                                                                        *
**************************************************************************
CHOPPERR
	MOVI	CHORINIT,A14
	JRUC	CHOPPERG
CHOPPERF
	MOVI	CHOFINIT,A14
CHOPPERG
	MOVI	D3TAB,A6						 
	CALLA	CARINIT			;INITIALIZE THE CAR
	JAZ	DUMDIE			;BR = INITIALIZATION FAILURE

	CLR	A3
	MOVE	A3,*A10(OPLINK),L
	MOVE	*A10(OZVAL),A3,L
	MOVE	*A13(ETEMP1),A6,L
	MOVE	A10,*A13(ETEMP1),L
	MOVE	A6,A10
	MOVE	A3,*A10(OZVAL),L
	MOVE	A13,*A10(OPLINK),L	;BODY

	CALLR	CHOPSETZ		;RESET THE CHOPPER Z'S
	CALLR	CHOPSHAD

	MOVE	@PCHOPCNT,A0,W
	INC	A0
	MOVE	A0,@PCHOPCNT,W

	CALLR	CHOPFULL		;CHOPPER AT FULL POWER

	MOVI	CHOPILXY,A6		;STORE FIRING OFFSETS
	MOVE	A6,*A13(EDRIVXY),L
	MOVI	CHOPASXY,A6
	MOVE	A6,*A13(EPASSXY),L
	MOVI	CHOPILRB,A6
	MOVE	A6,*A13(EDRIVRB),L
	MOVI	CHOPASRB,A6
	MOVE	A6,*A13(EPASSRB),L
	MOVI	CHOPTIME,A6
	MOVE	A6,*A13(ECHOPTIM),L

	CLR	A6
	MOVE	A6,@PCBSNDF,W
	MOVE	A6,@PCRSNDF,W
	MOVE	A6,@PCSPINH,W
	MOVK	CHOZERO,A6
	MOVE	A6,@PCZEROCT,W
	MOVE	A6,@PCZEROY,W
CHOPPERL
	MOVE	A8,A8
	JRZ	CHOPPERD			;BR = NO DRIVER, STOP US NOW!
	MOVE	@PCRSNDF,A0,W			;RUN SOUND ON?
	JRNZ	CHOPSDON			;YES
	SOUND1	CHOPCRUZ			;FIRE OFF SOUND
	MOVE	A0,@PCRSNDF,W			;AND FLAG IT ON
CHOPSDON
	MOVE	*A8(OID),A0,W
	CMPI	P1OID,A0
	JRNE	CHOPPN1
	MOVE	@P1DATA+PFLAGS,A2,L
	JRUC	CHOPPCS
CHOPPN1
	CMPI	P2OID,A0
	JRNE	CHOPPERD			;BR = WHO IS THIS GUY?
	MOVE	@P2DATA+PFLAGS,A2,L
CHOPPCS
	BTST	BSITIN,A2
	JRNE	CHOPSDOF			;BR = DRIVER NOT SEATED YET
	BTST	BDHOLD,A2
	JRNE	CHOPSDOF			;BR = DRIVER IS HIT
	BTST	BDEAD,A2
	JRNE	CHOPSDOF			;BR = DRIVER IS DEAD

	MOVE	*A13(ESWTCH),A1,L		;GET THE SWITCH BITS
	SLL	28,A1
	SRL	23,A1
	ADDI	FLYTAB,A1
	MOVE	*A1,A1,L
	JSRPR	A1
	CALLA	CKCRESET		;CHECK IF IT'S TIME TO DO A RESET

	MOVE	*A13(ECHOPTIM),A3,L
	CMPI	2*3CH,A3
	JRHI	CHOPMTIM		;MORE TIME LEFT FOR CHOPPER

	MOVE	*A13(ETEMP3),A2,L
	JRZ	CHOPMTIM
	MOVE	*A2(OPLINK),A0,L
	JRNZ	CHOPMTIM		;THERE ALREADY EXISTS A FLASH PROC
	CREATE	INDPID,CHOPFLAS
	MOVE	A0,*A2(OPLINK),L
	JRZ	CHOPMTIM
	MOVE	A13,*A0(PDATA),L
CHOPMTIM
	SUBI	CHOPSLP,A3
	JRN	CHOPDIVE		;DIVE AND DIE
	MOVE	A3,*A13(ECHOPTIM),L
	SLOOP	CHOPSLP,CHOPPERL	;HANG OUT DUDE
CHOPPERD
	CLR	A0
	MOVE	A0,*A13(ESWTCH),L
	MOVE	*A13(ECHOPTIM),A3,L
	CMPI	2*3CH,A3
	JRHI	CHOPPDTIM		;MORE TIME LEFT FOR CHOPPER
	SUBI	CHOPSLP,A3
	JRN	CHOPDIVE		;DIVE AND DIE
	MOVE	A3,*A13(ECHOPTIM),L
CHOPPDTIM
	MOVE	@PCRSNDF,A0,W		;RUN SOUND ON?
	JRZ	CHOPSDOF		;BR = YES
	SOUND1	YAMOFF
	CLR	A0
	MOVE	A0,@PCRSNDF,W
CHOPSDOF
**************************************************************************
*                                                                        *
* 	MOVI	0,A11							 *
* 	MOVE	*A10(OXVEL),A0,L					 *
* 	JREQ	CHOPPES							 *
* 	JRGT	CHOPPD1							 *
* 	MOVI	4300H,A9						 *
* 	JRUC	CHOPPD2							 *
* CHOPPD1								 *
* 	MOVI	-4300H,A9						 *
* CHOPPD2								 *
* 	CALLA	CXACCELB						 *
* CHOPPES								 *
* 	CALLR	KILLYZP							 *
* 	MOVE	*A10(OZVEL),A0,L					 *
* 	JRZ	CHOPP0Z							 *
* 	CLR	A1							 *
* 	CALLA	CARZVEL							 *
*                                                                        *
**************************************************************************
CHOPP0Z
	CALLR	P_GROUND
	JRC	CHOPSTOP
	CALLR	XVEL2ZERO
	MOVI	CHOYACC/2,A1
	MOVI	CHOYFULL/2,A3
	CALLR	SETDVEL
	JRUC	CHOPP0Y
CHOPSTOP
	MOVE	*A10(OYVEL),A0,L
	JREQ	CHOPP0Y
	CLR	A1
	CALLA	CARYZVEL						 
	CALLA	CHOPSETZ
	CALLR	KILLYZP
CHOPP0Y
	MOVE	*A10(OXPOS),A1,W
	MOVE	@WORLDTLX+16,A2,W
	SUB	A1,A2
	JRN	CHOPPIF		;BR = CHOPPER IS IN FRONT OF PLAYERS
	CMPI	3*512,A2
	JRHS	CHOPPEX		;BR = CHOPPER TOO FAR BACK, DELETE.
CHOPPIF
	CALLA	CKCRESET  	;CHECK IF IT'S TIME TO DO A RESET
	SLOOP	5,CHOPPERL

CHOPPEX
	CALLA	KILLCARP
	CALLA	KILLYZP
	CALLA	DELCBODY
	CALLA	CDELALL			;DELETE THE COMPANY
	MOVE	@PCHOPCNT,A6,W
	DEC	A6
	MOVE	A6,@PCHOPCNT,W
	DIE
*
*MAKE THE PLAYER CHOPPER TAKE A DIVE, WHEN IT HITS IT GOES BOOM
CHOPDIVE
	CLR	A0
	MOVE	A0,*A13(ESWTCH),L
	MOVE	@PCRSNDF,A0,W		;RUN SOUND ON?
	JRZ	CHOPDDOF		;BR = YES
	SOUND1	YAMOFF
	CLR	A0
	MOVE	A0,@PCRSNDF,W
CHOPDDOF
	CALLR	P_GROUND
	JRC	CHOPBOOM
	CALLR	XVEL2ZERO
	MOVI	CHOYACC/2,A1
	MOVI	CHOYFULL/2,A3
	CALLR	SETDVEL
	SLOOP	5,CHOPDDOF
CHOPBOOM
	MOVE	A8,A14
	MOVE	A10,A8
	MOVE	*A10(OFLAGS),A9,W	
	SLL	16,A9
	MOVE	*A10(OZPOS),A0,W
	MOVX	A0,A9
	MOVE	*A10(ODMAXY),A11,L
	MOVI	BEOID|ROCKETID,A10
	CREATE	CEXPID,CEXPLODE
	MOVE	A8,A10
	MOVE	A14,A8
	MOVE	A10,A0
	MOVI	BEOID|ROCKETID,A9
	CALLR	PCBOOM
	DIE

**************************************************************************
*                                                                        *
* CHOPFLAS - PROCESS TO MAKE THE CHOPPER FLASH PALETTES			 *
* 	   LINKED TO CHOPPER THROUGH IMAGE IN ETEMP3			 *
* PDATA = PTR TO CHOPPER PROC.						 *
*                                                                        *
**************************************************************************
CHOPFLAS
	MOVE	*A13(PDATA),A11,L
	MOVE	A11,A0
	CALLA	GETA10
	MOVI	40,A9
CHOPFLP
	MOVE	A13,A14
	MOVE	A11,A13
	MOVI	HELWHT,A1
	CALLA	CNEWPAL
	MOVE	A14,A13
	SLEEP	5
	MOVE	A13,A14
	MOVE	A11,A13
	MOVI	HELBLUE,A1
	CALLA	CNEWPAL
	MOVE	A14,A13
	SLEEP	5
	DSJ	A9,CHOPFLP
	MOVE	*A11(ETEMP3),A1,L
	JRZ	CHOPFLLP
	MOVE	*A1(OPLINK),A0,L
	CMP	A13,A0
	JREQ	CHOPFLLK		;IT'S COOL, HE'S MINE
	CALLERR	0
CHOPFLLK
	CLR	A0	
	MOVE	A0,*A1(OPLINK),L
CHOPFLLP
	DIE

FLYTAB
	.LONG	STRAIGHT,FLYUP,FLYDOWN,DUMRETP,REVERSE,REVFLYUP
	.LONG	REVFLYDN,DUMRETP,FORWARD,FORFLYUP,FORFLYDN,DUMRETP
	.LONG	DUMRETP,DUMRETP,DUMRETP,DUMRETP

*NOTE: ALL OF THESE DIRECTIONAL ROUTINES MUST BE CALLED WITH JSRP
*MAKE THE CAR GO STRAIGHT AHEAD
STRAIGHT
	CALLR	YVEL2ZERO
	CALLR	XVEL2ZERO
	MOVK	CHOZERO,A9
	MOVE	A9,@PCZEROCT,W		;RE-INITIALIZE THE COUNT
	MOVE	A9,@PCZEROY,W
**************************************************************************
*                                                                        *
* 	MOVI	FRICTION,A9						 *
* 	CLR	A11							 *
* 	MOVE	*A10(OXVEL),A0,L					 *
* 	JRN	STRAIG3							 *
* 	NEG	A9							 *
* STRAIG3								 *
* 	CALLA	CXACCELB		;DECELERATE DUE TO FRICTION	 *
* STRAYTEX								 *
*                                                                        *
**************************************************************************
	RETP

*REVERSE VELOCITY	
REVERSE
	CALLR	YVEL2ZERO
	MOVI	-CHOACCEL,A1
	MOVI	-CHOBRAKE,A2
	MOVI	-CHOFULL,A3
	CALLR	SETRVEL
	RETP
*FORWARD VELOCITY	
FORWARD
	CALLR	YVEL2ZERO
	MOVI	CHOACCEL,A1
	MOVI	CHOBRAKE,A2
	MOVI	CHOFULL,A3
	CALLR	SETFVEL
	RETP
*FORWARD VELOCITY,UP	
FORFLYUP
	MOVI	-CHOYACC+(-CHOACCEL/3),A1
	MOVI	-CHOYFULL,A3
	CALLR	SETUVEL
	MOVI	CHOACCEL/2,A1
	MOVI	CHOBRAKE,A2
	MOVI	CHOFULL,A3
	CALLR	SETFVEL
	RETP
*FORWARD VELOCITY,DOWN	
FORFLYDN
	MOVI	CHOYACC+(CHOACCEL/3),A1
	MOVI	CHOYFULL,A3
	CALLR	SETDVEL
	MOVI	CHOACCEL/2,A1
	MOVI	CHOBRAKE,A2
	MOVI	CHOFULL,A3
	CALLR	SETFVEL
	RETP
*REVERSE VELOCITY,LEFT TURN	
REVFLYUP
	MOVI	-CHOYACC+(-CHOACCEL/3),A1
	MOVI	-CHOYFULL,A3
	CALLR	SETUVEL
	MOVI	-(CHOACCEL/2),A1
	MOVI	-CHOBRAKE,A2
	MOVI	-CHOFULL,A3
	CALLR	SETRVEL
	RETP
*REVERSE VELOCITY,RIGHT TURN	
REVFLYDN
	MOVI	CHOYACC+(CHOACCEL/3),A1
	MOVI	CHOYFULL,A3
	CALLR	SETDVEL
	MOVI	-(CHOACCEL/2),A1
	MOVI	-CHOBRAKE,A2
	MOVI	-CHOFULL,A3
	CALLR	SETRVEL
	RETP
*FLY THE CHOPPER UP
FLYUP
	CALLR	XVEL2ZERO
	MOVI	-CHOYACC,A1
	MOVI	-CHOYFULL,A3
	CALLR	SETUVEL
	RETP

*FLY THE CHOPPER DOWN
FLYDOWN
	CALLR	XVEL2ZERO
	MOVI	CHOYACC,A1
	MOVI	CHOYFULL,A3
	CALLR	SETDVEL
	RETP

**************************************************************************
*                                                                        *
* YVEL2ZERO - DECELERATE THE CURRENT CHOPPER Y VELOCITY TO ZERO		 *
* A8 = PTR TO PILOT							 *
* A10 = PTR TO CHOPPER							 *
* A13 = PTR TO CHOPPER PROCESS						 *
*                                                                        *
**************************************************************************
YVEL2ZERO
	MMTM	SP,A1,A3
	MOVE	*A10(OYVEL),A1,L
	JRZ	YVELISZ
	JRN	YVELD2S
	CLR	A3
	MOVI	-CHOYACC,A1
	CALLR	SETUVEL
	JRUC	YVELISZ
YVELD2S
	CLR	A3	
	MOVI	CHOYACC,A1
	CALLR	SETDVEL
YVELISZ
	MMFM	SP,A1,A3
	RETS

**************************************************************************
*                                                                        *
* XVEL2ZERO - DECELERATE THE CURRENT CHOPPER X VELOCITY TO ZERO		 *
* A8 = PTR TO PILOT							 *
* A10 = PTR TO CHOPPER							 *
* A13 = PTR TO CHOPPER PROCESS						 *
*                                                                        *
**************************************************************************
XVEL2ZERO
	MMTM	SP,A1,A2,A3
	MOVE	*A10(OXVEL),A1,L
	JRZ	XVELISZ
	JRN	XVELF2S
	MOVI	-(CHOACCEL/2),A1
	MOVI	-FRICTION,A2
	MOVI	-CHOFULL,A3
	CALLR	SETRVEL
	JRUC	XVELISZ
XVELF2S
	MOVI	CHOACCEL/2,A1
	MOVI	FRICTION,A2
	MOVI	CHOFULL,A3
	CALLR	SETFVEL
XVELISZ
	MMFM	SP,A1,A2,A3
	RETS

**************************************************************************
*                                                                        *
* XVEL2X - DECELERATE THE CURRENT CHOPPER X VELOCITY TO GIVEN		 *
* A8 = PTR TO PILOT							 *
* A10 = PTR TO CHOPPER							 *
* A11 = VELOCITY DESIRED						 *
* A13 = PTR TO CHOPPER PROCESS						 *
*                                                                        *
**************************************************************************
XVEL2X
	MMTM	SP,A1,A9
	MOVE	*A10(OXVEL),A1,L
	CMP	A11,A1
	JRZ	XVELXISZ
	JRN	XVELXF2S
	MOVI	-FRICTION,A9
	CALLA	CXACCELB
	JRUC	XVELXISZ
XVELXF2S
	MOVI	FRICTION,A9
	CALLA	CXACCELB
XVELXISZ
	MMFM	SP,A1,A9
	RETS

**************************************************************************
*                                                                        *
* SETDVEL - SET PLAYER CHOPPER UPWARD VELOCITY				 *
* A1 = ACCELERATION FACTOR						 *
* A2 = BRAKING FACTOR							 *
* A3 = TOP SPEED							 *
* A8 = PTR TO DRIVER							 *
* A10 = PTR TO CHOPPER							 *
* A13 = PTR TO CHOPPER PROCESS						 *
*                                                                        *
**************************************************************************
SETDVEL
	MMTM	SP,A0,A1,A9,A11
	CALLR	P_GROUND
	JRNC	SETDVELT
	CLR	A1
	CALLA	CARYZVEL
	CALLA	KILLYZP
	CALLA	CHOPSETZ
	JRUC	SETDVELX
SETDVELT
	CALLR	P_TOP			;ADJUST YVEL IF AT THE TOP OF THE SCREEN
	JRNC	SETDVELK		;HE'S NOT AT THE TOP
	MOVE	*A10(OYVEL),A11,L
	JRNN	SETDVELK		;HE'S NOT GOING UP
	CLR	A1
	CALLA	CARYZVEL
	CALLR	KILLYZP
	JRUC	SETDVELK
*
*SET UPWARD Y VELOCITY, SAME PARAMS AS SETDVEL
SETUVEL
	MMTM	SP,A0,A1,A9,A11
	CALLR	P_TOP
	JRNC	SETUVELT
	CLR	A1
	CALLA	CARYZVEL
	CALLA	KILLYZP
	JRUC	SETDVELX
SETUVELT
	CALLR	P_GROUND		;ADJUST YVEL IF ON THE GROUND
	JRNC	SETDVELK		;HE'S NOT AT THE TOP
	MOVE	*A10(OYVEL),A11,L
	JRLE	SETDVELK		;HE'S NOT GOING DOWN
	CLR	A1
	CALLA	CARYZVEL
	CALLR	KILLYZP
	JRUC	SETDVELK

SETDVELK
	MOVE	*A10(OYVEL),A11,L
	JRNZ	SETDVEL0
	MOVE	@PCZEROY,A9,W
	CMPI	CHOZERO,A9
	JRGE	SETDVEL0
	INC	A9
	MOVE	A9,@PCZEROY,W
	CALLR	KILLYZP
	JRUC	SETDVELX	
SETDVEL0
	MOVE	A3,A11
	MOVE	*A13(ESWTCH),A9,W
	BTST	BPCROUCH,A9
	JRNE	SETDZTOO
	MOVE	A1,A9			;ACCELERATE
	CALLA	CYACCEL
	CLR	A1
	CALLA	CARZVEL
	JRUC	SETDVEL2
SETDZTOO
***	SRA	1,A1
	MOVE	A1,A9			;SAME ACCELERATION AS IN Y
	SRA	1,A11			;BUT ONLY HALF THE TOP SPEED			
	CALLA	CYZACCEL
	MOVE	*A10(OYVEL),A1,L
	CALLA	CARZVEL			;MAKE SURE Y & Z MATCH
SETDVEL2
	CLR	A9
	MOVE	A9,@PCZEROY,W
SETDVELX
	MMFM	SP,A0,A1,A9,A11
	RETS

**************************************************************************
*                                                                        *
* SETFVEL - SET PLAYER CHOPPER FORWARD VELOCITY				 *
* A1 = ACCELERATION FACTOR						 *
* A2 = BRAKING FACTOR							 *
* A3 = TOP SPEED							 *
* A8 = PTR TO DRIVER							 *
* A10 = PTR TO CHOPPER							 *
* A13 = PTR TO CHOPPER PROCESS						 *
* RETURNS:								 *
* Z BIT SET = STOPPED							 *
* Z BIT CLR = IGNORE							 *
* C BIT SET = BRAKING							 *
* C BIT CLR = ACCELERATING						 *
*                                                                        *
**************************************************************************
SETFVEL
	MMTM	SP,A0,A9,A11
	MOVE	*A10(OXVEL),A11,L
	JRGT	SETFVEL1
	JRNZ	SETFVEL0
	MOVE	@PCZEROCT,A9,W
	CMPI	CHOZERO,A9
	JRGE	SETFVEL1
	INC	A9
	MOVE	A9,@PCZEROCT,W
	JRUC	SETFVELX	
SETFVEL0
	CLR	A11
	MOVE	A2,A9			;SKID BRAKE
	CALLA	CXACCELB
	SETC				;FLAG BRAKE
	JRUC	SETFVEL2
SETFVEL1
	MOVE	@UNIVENDX,A11,W
	SUBI	512,A11
	MOVE	*A10(OXPOS),A9,W
	CMP	A11,A9
	JRLT	SETFVELOK
	MOVI	[5,0],A11
	CALLR	XVEL2X
	CLRC
	JRUC	SETFVEL2
SETFVELOK
	MOVE	A3,A11
	MOVE	A1,A9			;ACCELERATE
	CALLA	CXACCELB
	CLRC				;FLAG ACCELERATE
SETFVEL2
	CLR	A9
	MOVE	A9,@PCZEROCT,W
	MOVK	1,A9
	MOVE	A9,A9			;CLR Z BIT WITHOUT CLRING C
SETFVELX
	MMFM	SP,A0,A9,A11
	RETS
	
**************************************************************************
*                                                                        *
* SETRVEL - SET PLAYER CHOPPER REVERSE VELOCITY				 *
* A1 = ACCELERATION FACTOR						 *
* A2 = BRAKING FACTOR							 *
* A3 = TOP SPEED							 *
* A8 = PTR TO DRIVER							 *
* A10 = PTR TO CHOPPER							 *
* A13 = PTR TO CHOPPER PROCESS						 *
* RETURNS:								 *
* Z BIT SET = STOPPED							 *
* Z BIT CLR = IGNORE							 *
* C BIT SET = BRAKING							 *
* C BIT CLR = ACCELERATING						 *
*                                                                        *
**************************************************************************
SETRVEL
	MMTM	SP,A0,A9,A11
	MOVE	*A10(OXVEL),A11,L
	JRGT	SETRVEL1
	JRNZ	SETRVEL0
	MOVE	@PCZEROCT,A9,W
	CMPI	CHOZERO,A9
	JRGE	SETRVEL0
	INC	A9
	MOVE	A9,@PCZEROCT,W
	JRUC	SETRVELX	
SETRVEL0
****	CALLR	P_GROUND
****	JRNC	SETRVELA		;O.K. TO ACCELERATE
****	NEG	A2
****	JRUC	SETRVEL1
***SETRVELA
	MOVE	@UNIVSTX,A11,W
	ADDI	512,A11
	MOVE	*A10(OXPOS),A9,W
	CMP	A11,A9
	JRGT	SETRVELOK
	MOVI	[-5,0],A11
	CALLR	XVEL2X
	CLRC
	JRUC	SETRVEL2
SETRVELOK
	MOVE	A3,A11
	MOVE	A1,A9			;ACCELERATE
	CALLA	CXACCELB
	CLRC				;FLAG ACCELERATE
	JRUC	SETRVEL2
SETRVEL1
	CLR	A11
	MOVE	A2,A9			;BRAKE
	CALLA	CXACCELB
	SETC				;FLAG BRAKE
SETRVEL2
	CLR	A9
	MOVE	A9,@PCZEROCT,W
	MOVK	1,A9
	MOVE	A9,A9			;CLR Z BIT WITHOUT CLRING C
SETRVELX
	MMFM	SP,A0,A9,A11
	RETS

**************************************************************************
*                                                                        *
* CHOPINTR - THE CHOPPER INTRO PROCESS, FOR WAVE START			 *
*                                                                        *
**************************************************************************
CHOPINTR
	MOVI	CHOPINTI,A14
	MOVI	D3TAB,A6						 
	CALLA	CARINIT			;INITIALIZE THE CAR
	JAZ	DUMDIE			;BR = INITIALIZATION FAILURE

	CLR	A3
	MOVE	A3,*A10(OPLINK),L
	MOVE	*A10(OZVAL),A3,L
	MOVE	*A13(ETEMP1),A6,L
	MOVE	A10,*A13(ETEMP1),L
	MOVE	A6,A10
	MOVE	A3,*A10(OZVAL),L
	MOVE	A13,*A10(OPLINK),L	;BODY
	MOVE	A13,*A8(OPLINK),L	;PILOT

	CALLR	CHOPZRST		;RESET THE CHOPPER Z'S
	CALLR	CHOPSHAD

	MOVE	@CHOPCNT,A0,W
	INC	A0
	MOVE	A0,@CHOPCNT,W

	CALLR	CHOPFULL		;CHOPPER AT FULL POWER
CHOISTLP
	MOVE	@SCROLLX,A1,L
	JRNZ	CHODO	
	SLOOP	1,CHOISTLP
CHODO
	SOUND1	CHOPCRUZ
CHOLOOP
	MOVE	@SCROLLX,A1,L		;GET THE CURRENT SCROLL VALUE
	CALLA	CARXVEL			;STUFF MY OWN FOR THE INTRO
	MOVE	@WORLDTLX+16,A0,W	;GET THE CURRENT WORLD COORD.
	CMPI	-1130,A0
	JRGT	CHOIEND
	CALLA	CKCRESET		;CHECK RESET TIME
	SLOOP	1,CHOLOOP

CHOIEND
*
*MAKE THE DUDES FLY FROM THE CHOPPER
	MOVI	INPLAY,A0
	MOVE	A0,@GAMSTATE,W		;MARK INTRO AS FINISHED

	SWAP	A10,A8
	CALLA	GETANIXY
	SWAP	A10,A8
	ADDI	[240,0],A3		;OFFSET TO COCKPIT
	ADDI	[20,0],A2
	MOVE	A2,A9
	MOVE	A3,A11

	MOVI	PJUMP|PRYTE,A7		;START TO BAIL
	MOVE	A7,@P1CTRL,W
	MOVE	A7,@P2CTRL,W
	SLEEP	10
	MOVI	PRYTE,A7
	MOVE	A7,@P1CTRL,W
	MOVI	P1DATA,A5
	MOVE	*A5(POBJ),A0,L
	JRZ	CHOIP2
	MOVE	A0,A6
	MOVE	A9,A2
	MOVE	A11,A3
	MOVI	DMAWNZ,A4
	CALLA	GANISAG			;ADJUST THE TORSO PORTION OF THE BOD
	MOVE	A9,A2
	MOVE	A11,A3
	MOVE	*A5(PLOBJ),A0,L
	CALLA	GANISAG			;NOW THE LEGS
	MOVE	*A10(OXVEL),*A6(OXVEL),L
	MOVE	*A10(OXVEL),*A0(OXVEL),L
	CREATE	INDPID,P1IJDECL

	MOVI	CARLIST,A1
	MOVE	*A13(PASSPTR),A0,L
	JRZ	CHOIP2
	CALLA	DELSUPP
	CALLA	DELSOBJ
	CLR	A0
	MOVE	A0,*A13(PASSPTR),L
CHOIP2
	MOVI	PRYTE,A7
	MOVE	A7,@P2CTRL,W
	MOVI	P2DATA,A5
	MOVE	*A5(POBJ),A0,L
	JRZ	CHOGHOST
	MOVE	A0,A6
	MOVE	A9,A2
	MOVE	A11,A3
	MOVI	DMAWNZ,A4
	CALLA	GANISAG			;ADJUST THE TORSO PORTION OF THE BOD
	MOVE	A9,A2
	MOVE	A11,A3
	MOVE	*A5(PLOBJ),A0,L
	CALLA	GANISAG			;NOW THE LEGS
	MOVE	*A10(OXVEL),*A6(OXVEL),L
	MOVE	*A10(OXVEL),*A0(OXVEL),L
	CREATE	INDPID,P2IJDECL

	MOVI	ENEMIES,A1
	MOVE	A8,A0
	JRZ	CHOGHOST
	CALLA	DELSUPP
	CALLA	DELSOBJ
	CLR	A8
CHOGHOST
CHOIENDX
	SLEEP	6
	MOVE	*A10(OYVEL),A1,L
	CMPI	[-10,0],A1
	JRLT	CHONNDXCL
	ADDI	[0FFFFH,0B000H],A1
	CALLA	CARYVEL			;LET'S ACCELERATE, SHALL WE
CHONNDXCL
	CALLA	CARSCRTST
	JREQ	CHOIENDX   		;BR = STILL ON SCREEN	 
	SOUND1	YAMOFF
	CALLA	KILLCARP
CHOINTX
	CALLA	DELCBODY
	CALLA	CDELALL			;DELETE THE COMPANY
	MOVE	@CHOPCNT,A0,W
	DEC	A0
	MOVE	A0,@CHOPCNT,W
	DIE

**************************************************************************
*                                                                        *
* PLAYER CHOPPER HIT BY BULLET						 *
* A0 = PTR TO CHOPPER MAIN				  	 	 *
* A8 = PTR TO OBJECT THAT HIT IT					 *
*                                                                        *
**************************************************************************
PCHOPBUL:
	MOVE	*A0(OPLINK),A1,L	;GET THE PROCESS
	JRZ	PCHOPBXX
	MOVE	*A1(ECHOPTIM),A2,L
	SUBK	5,A2
	MOVE	A2,*A1(ECHOPTIM),L
PCHOPBXX
	CLRC
	RETS

*
*FLYABLE CHOPPER COLLISION LIST
CHOFCOLL
	.WORD	BEOID|BULLETID
	.LONG	PCHOPBUL

	.WORD	B1OID|ROCKETID
	.LONG	PCFLYCOL1
	.WORD	B2OID|ROCKETID
	.LONG	PCFLYCOL2

	.WORD	BEOID|ROCKETID
	.LONG	PCFLYCOLR

	.WORD	BEOID|BOMBID
	.LONG	PCFLYCOLR

	.WORD	0
	.LONG	DUMRTSG

**************************************************************************
*                                                                        *
* PCFLYCOLR - FLYABLE CHOPPER COLLISION WITH A ROCKET		 	 *
* A0 = PTR TO CHOPPER MAIN						 *
* A8 = PTR TO OBJECT THAT HIT IT					 *
*                                                                        *
**************************************************************************
*
*INTERSECTION WITH A PLAYER ONE ROCKET
PCFLYCOL1
	MOVE	@P1DATA+PIRQFLAG,A14,W
	ANDI	MDRIVER|MPASSEN,A14
	JRNZ	PCFLYRX		;DON'T BLOW UP THIS CAR, I'M IN IT
	JRUC	PCFLYCOLR
*
*INTERSECTION WITH A PLAYER ONE ROCKET
PCFLYCOL2
	MOVE	@P2DATA+PIRQFLAG,A14,W
	ANDI	MDRIVER|MPASSEN,A14
	JRNZ	PCFLYRX		;DON'T BLOW UP THIS CAR, I'M IN IT
PCFLYCOLR
	MOVE	*A8(OID),A9,W		;AND ZE I.D. PLEASE
*MAKE IT BLOW UP, PASS THE I.D. OF THE EXPLOSION IN A9
PCBOOM
	MOVI	DUMCOLL,A14
	MOVE	A14,*A0(OCVECT),L	;COLLISION POINTER NULL FOR NOW
	MOVE	*A0(OPLINK),A0,L	;GET THE PROCESS
	PUSH	A0
	CALLA	GETA10			;PRESERVE CORRECT STATE FOR CDELALL
	CLR	A14
	MOVE	A14,*A10(OPLINK),L	;SHOW NO CONTACT
	CALLA	GETA8			;GET THE PILOT PTR
	JRZ	PCFLYR1			;NO PILOT TO LAUNCH
	MOVE	*A8(OID),A11,W
	MOVE	A0,B0
	MOVE	A8,A0
	CALLA	OBJON			;TURN THIS GUY ON FOR SURE
	CREATE	INDPID,PDRIVXWW
	MOVE	B0,A0
	CLR	A8
	MOVE	A8,@PLAYCAR,L
PCFLYR1
	MOVE	*A0(PASSPTR),A3,L
	JRZ	PCFLYR2
	MOVE	*A3(OID),A11,W
	MOVE	A0,B0
	MOVE	A3,A0
	CALLA	OBJON			;OH PLEASE, TURN ME ON TOO.
	CREATE	INDPID,PDRIVXWW
	MOVE	B0,A0
	CLR	A3
	MOVE	A3,*A0(PASSPTR),L
	MOVE	A3,@PLAYCAR,L
PCFLYR2
	PULL	A0
	PUSH	A13
	MOVE	A0,A13

	MOVI	HELBLUE,A1
	CALLA	CNEWPAL			;MAKE SURE ALL IS BLUE

	MOVE	*A13(ETEMP2),A11,L	;SAVE THE TAIL PART	IN A11
	CLR	A14
	MOVE	A14,*A13(ETEMP2),L	;DONT DELETE IT
	MOVI	DUMCOLL,A14
	MOVE	A14,*A10(OCVECT),L	;COLLISION POINTER NULL FOR NOW
	MOVE	A14,*A11(OCVECT),L	;COLLISION POINTER NULL FOR NOW
	CALLA	KILLYZP
  	CALLA	CDELALL			;DELETE ALL CHOPPER PARTS
	PULL	A13

	CALLA	KILL
	MOVE	A10,A8			;AND PASS IT TO THE PROCESS
	CREATE	0EDH,CHOPEXP		;CREATE THE CHOPPER EXPLODE PROC.

	MOVI	YAMOFF,A0
	CALLA	ONESND			;TURN OFF THE CAR IDLE SOUND
	MOVE	@PCHOPCNT,A0,W
	DEC	A0
	MOVE	A0,@PCHOPCNT,W
PCFLYRX
	CLR	A0
	CLRC
	RETS

**************************************************************************
*                                                                        *
* CYZACCEL - START CHOPPER YZ ACCEL/DECEL PROCESS.			 *
* A8 = PTR TO DRIVER							 *
* A9 = ACCELERATION FACTOR/TICK, 32 BITS				 *
* A10 = PTR TO VEHICLE							 *
* A11 = TERMINAL VELOCITY, 32 BITS					 *
* A13 = PTR TO CHOPPER PROCESS						 *
* RETURNS:								 *
* A0 = PTR TO PROC. (= 0 IF FAILED)					 *
*                                                                        *
**************************************************************************
CYZACCEL
	MMTM	SP,A1,A7
	CALLR	KILLYZP
	CREATE	INDPID,CYZAPRIM
	JRZ	CYZACCLX
	MOVE	A13,*A0(PDATA),L
CYZACCLX
	MOVE	A0,*A13(EYZVELP),L
	MMFM	SP,A1,A7
	RETS


**************************************************************************
*                                                                        *
* CYACCEL - START CHOPPER Y ACCEL/DECEL PROCESS.			 *
* A8 = PTR TO DRIVER							 *
* A9 = ACCELERATION FACTOR/TICK, 32 BITS				 *
* A10 = PTR TO VEHICLE							 *
* A11 = TERMINAL VELOCITY, 32 BITS					 *
* A13 = PTR TO CHOPPER PROCESS						 *
* RETURNS:								 *
* A0 = PTR TO PROC. (= 0 IF FAILED)					 *
*                                                                        *
**************************************************************************
CYACCEL
	MMTM	SP,A1,A7
	CALLR	KILLYZP
	CREATE	INDPID,CYAPRIM
	JRZ	CYACCLX
	MOVE	A13,*A0(PDATA),L
CYACCLX
	MOVE	A0,*A13(EYZVELP),L
	MMFM	SP,A1,A7
	RETS

**************************************************************************
*                                                                        *
* CYZAPRIM - PROCESS TO YZ ACCELERATE A VEHICLE BY SOME CONSTANT.	 *
*	     WHEEL SPEED IS NOT UPDATED HERE.				 *
* A8 = PTR TO DRIVER							 *
* A9 = ACCELERATION FACTOR/TICK						 *
* A10 = PTR TO VEHICLE							 *
* A11 = TERMINAL VELOCITY, 32 BITS					 *
* *A13(PDATA) = PTR TO VEHICLE CONTROL PROCESS				 *
*                                                                        *
**************************************************************************
CYZAPRIM
	MOVE	*A10(OYVEL),A1,L
	ADD	A9,A1
	MOVE	A11,B2
	MOVE	A1,B1
	SUB	B1,B2
	MOVE	A9,B1
	ABS	B1
	ABS	B2
	CMP	B1,B2
	JRLE	CYZPRIMX
	MOVE	A13,B0
	MOVE	*A13(PDATA),A13,L
	CALLA	CARYZVEL
	MOVE	B0,A13
	SLOOP	1,CYZAPRIM
CYZPRIMX
	MOVE	A11,A1
	MOVE	A13,B0
	MOVE	*A13(PDATA),A13,L
	CALLA	CARYZVEL
	CLR	A1
	MOVE	A1,*A13(EYZVELP),L
	MOVE	B0,A13
	DIE

**************************************************************************
*                                                                        *
* CYAPRIM - PROCESS TO Y ACCELERATE A VEHICLE BY SOME CONSTANT.		 *
*	     WHEEL SPEED IS NOT UPDATED HERE.				 *
* A8 = PTR TO DRIVER							 *
* A9 = ACCELERATION FACTOR/TICK						 *
* A10 = PTR TO VEHICLE							 *
* A11 = TERMINAL VELOCITY, 32 BITS					 *
* *A13(PDATA) = PTR TO VEHICLE CONTROL PROCESS				 *
*                                                                        *
**************************************************************************
CYAPRIM
	MOVE	*A10(OYVEL),A1,L
	ADD	A9,A1
	MOVE	A11,B2
	MOVE	A1,B1
	SUB	B1,B2
	MOVE	A9,B1
	ABS	B1
	ABS	B2
	CMP	B1,B2
	JRLE	CYPRIMX
	MOVE	A13,B0
	MOVE	*A13(PDATA),A13,L
	CALLA	CARYVEL
	MOVE	B0,A13
	SLOOP	1,CYAPRIM
CYPRIMX
	MOVE	A11,A1
	MOVE	A13,B0
	MOVE	*A13(PDATA),A13,L
	CALLA	CARYVEL
	CLR	A1
	MOVE	A1,*A13(EYZVELP),L
	MOVE	B0,A13
	DIE

**************************************************************************
*                                                                        *
* KILLYZP - KILL THE CHOPPER YZ ACCEL/DECEL PROCESS.			 *
* A8 = PTR TO DRIVER							 *
* A10 = PTR TO CAR							 *
* A13 = PTR TO PROCBLOC							 *
*                                                                        *
**************************************************************************
KILLYZP
	PUSH	A0
	MOVE	*A13(EYZVELP),A0,L
	JRZ	KILLYZX
	CALLA	KILL
	CLR	A0
	MOVE	A0,*A13(EYZVELP),L
KILLYZX
	PULL	A0
	RETS

**************************************************************************
*                                                                        *
* KILLCHOY - PROCESS TO CALL KILLYZP, USED BY IRQ SWITCH TABLE FIRED	 *
*                                                                        *
**************************************************************************
KILLCHOY
	MOVE	@PLAYCAR,A10,L
	MOVE	*A10(OPLINK),A0,L
	JRZ	KILLCHODI		;BR = NO CONTROL
	MOVE	A13,A14
	MOVE	A0,A13			;PROC BLOK PTR HERE
	CALLA	GETA8			;GET THE DRIVER PTR
	CLR	A1
	CALLA	CARYZVEL
	MOVE	A14,A13
KILLCHODI
	DIE

*
*PLAYER FLYABLE CHOPPER INITIALIZATION TO THE RIGHT OF THE SCREEN
CHORINIT
	.LONG	0,0,[CHOPDIXR,0],[CHOPDIYR,0]	;SKIDS 1st FOR Z CORRECTNESS
	.WORD	0,0A5H
	.LONG	bluskid1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[CHOPDIXR,0],[CHOPDIYR,0]	;BODY AND SKIDS WILL BE SWAPPED
	.WORD	0,0
	.LONG	bluchop1a,PCHOPZ,CHOFCOLL
	.WORD	DMAWNZ,TRAN2OID|CBODYID
	.LONG	0

	.LONG	0,0,[CHOPDIXR,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	bluchop1c,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[CHOPDIXR,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	bluchop1b,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[CHOPDIXR,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	bluspin1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|FTIREID
	.LONG	0

	.LONG	0,0,[CHOPDIXR,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	blufana,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|RTIREID
	.LONG	0

	.LONG	0,0,[CHOPDIXR,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	narclo,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[CHOPDIXR,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	bluspin1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ|M_FLIPH,TRAN2OID|FTIREID
	.LONG	0

	.LONG	7FFF7FFFH		;SKIP ETEMP8
	.LONG	7FFF7FFFH		;YOUR THE BEST PILOT

**** DATA SECTION ****
	.data
CHOPINIT
	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y	;SKIDS 1st FOR Z CORRECTNESS
	.WORD	0,0
	.LONG	skid1,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|WSHLDID
	.LONG	0

	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y	;BODY AND SKIDS WILL BE SWAPPED
	.WORD	0,0
	.LONG	chop1a,CHOPZ,CHOPCOLL
	.WORD	DMAWNZ,CAR3OID|CBODYID
	.LONG	CHOPBLIP

	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	chop1c,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|WSHLDID
	.LONG	0

	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	chop1b,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|WSHLDID
	.LONG	0

	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	spin1,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|FTIREID
	.LONG	0

	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	fana,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|RTIREID
	.LONG	0

	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	kraklo,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|WSHLDID
	.LONG	0

	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	spin1,CHOPZ,TAILCOLL
	.WORD	DMAWNZ|M_FLIPH,CAR3OID|FTIREID
	.LONG	0

	.LONG	7FFF7FFFH			;SKIP ETEMP8

	.LONG	0,0,CHOPDIXR*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	pilot2,CHOPZ,PILCOLL
	.WORD	DMAWNZ,CAR3OID|DRIVERID
	.LONG	0

*CHOPPER FURTHER IN X

CHOPINT1
	.LONG	0,0,1400*10000H,CHOPDIYR*Y	;SKIDS 1st FOR Z CORRECTNESS
	.WORD	0,0
	.LONG	skid1,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|WSHLDID
	.LONG	0

	.LONG	0,0,1400*10000H,CHOPDIYR*Y	;BODY AND SKIDS WILL BE SWAPPED
	.WORD	0,0
	.LONG	chop1a,CHOPZ,CHOPCOLL
	.WORD	DMAWNZ,CAR3OID|CBODYID
	.LONG	CHOPBLIP

	.LONG	0,0,1400*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	chop1c,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|WSHLDID
	.LONG	0

	.LONG	0,0,1400*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	chop1b,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|WSHLDID
	.LONG	0

	.LONG	0,0,1400*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	spin1,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|FTIREID
	.LONG	0

	.LONG	0,0,1400*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	fana,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|RTIREID
	.LONG	0

	.LONG	0,0,1400*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	kraklo,CHOPZ,TAILCOLL
	.WORD	DMAWNZ,CAR3OID|WSHLDID
	.LONG	0

	.LONG	0,0,1400*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	spin1,CHOPZ,TAILCOLL
	.WORD	DMAWNZ|M_FLIPH,CAR3OID|FTIREID
	.LONG	0

	.LONG	7FFF7FFFH			;SKIP ETEMP8

	.LONG	0,0,1400*10000H,CHOPDIYR*Y
	.WORD	0,0
	.LONG	pilot2,CHOPZ,PILCOLL
	.WORD	DMAWNZ,CAR3OID|DRIVERID
	.LONG	0

*
*PLAYER INTRO CHOPPER INITIALIZATION
CHOPINTI
	.LONG	0,0,[256,0],[75,0]	;SKIDS 1st FOR Z CORRECTNESS
	.WORD	0,0A5H
	.LONG	bluskid1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,INTR2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[256,0],[75,0]	;BODY AND SKIDS WILL BE SWAPPED
	.WORD	0,0
	.LONG	bluchop1a,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,INTR2OID|CBODYID
	.LONG	0

	.LONG	0,0,[256,0],[75,0]
	.WORD	0,0
	.LONG	bluchop1c,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,INTR2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[256,0],[75,0]
	.WORD	0,0
	.LONG	bluchop1b,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,INTR2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[256,0],[75,0]
	.WORD	0,0
	.LONG	bluspin1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,INTR2OID|FTIREID
	.LONG	0

	.LONG	0,0,[256,0],[75,0]
	.WORD	0,0
	.LONG	blufana,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,INTR2OID|RTIREID
	.LONG	0

	.LONG	0,0,[256,0],[75,0]
	.WORD	0,0
	.LONG	narclo,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,INTR2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[256,0],[75,0]
	.WORD	0,0
	.LONG	bluspin1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ|M_FLIPH,INTR2OID|FTIREID
	.LONG	0

	.LONG	0,0,[256,0],[75,0]		;ETEMP8 IS PASSENGER
	.WORD	0,0
	.LONG	jrhelpas,PZSIZ,DUMCOLL
	.WORD	DMAWNZ,P1PLACE
	.LONG	0

	.LONG	0,0,[256,0],[75,0]
	.WORD	0,0
	.LONG	jrpilot,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,P2PLACE
	.LONG	0

*
*PLAYER FLYABLE CHOPPER INITIALIZATION
CHOFINIT
	.LONG	0,0,[300,0],[CHOPDIYR,0]	;SKIDS 1st FOR Z CORRECTNESS
	.WORD	0,0A5H
	.LONG	bluskid1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[300,0],[CHOPDIYR,0]	;BODY AND SKIDS WILL BE SWAPPED
	.WORD	0,0
	.LONG	bluchop1a,PCHOPZ,CHOFCOLL
	.WORD	DMAWNZ,TRAN2OID|CBODYID
	.LONG	0

	.LONG	0,0,[300,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	bluchop1c,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[300,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	bluchop1b,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[300,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	bluspin1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|FTIREID
	.LONG	0

	.LONG	0,0,[300,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	blufana,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|RTIREID
	.LONG	0

	.LONG	0,0,[300,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	narclo,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ,TRAN2OID|WSHLDID
	.LONG	0

	.LONG	0,0,[300,0],[CHOPDIYR,0]
	.WORD	0,0
	.LONG	bluspin1,PCHOPZ,DUMCOLL
	.WORD	DMAWNZ|M_FLIPH,TRAN2OID|FTIREID
	.LONG	0

	.LONG	7FFF7FFFH		;SKIP ETEMP8
	.LONG	7FFF7FFFH		;YOUR THE BEST PILOT

	.END
