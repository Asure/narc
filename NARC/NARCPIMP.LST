TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .FILE   "NARCPIMP.ASM"
       3                    
       4                    **************************************************************************
       5                    *                                                                        *
       6                    *       COPYRIGHT (C) 1988 WILLIAMS ELECTRONICS GAMES, INC.              *
       7                    *       ALL RIGHTS RESERVED.                                             *
       8                    *                                                                        *
       9                    **************************************************************************
      10                    
      11                            .WIDTH  132
      12                            .OPTION B,D,L
      13                            .MNOLIST
      14                    
      15                    *       GET THE SYSTEM STUFF
      16                            .INCLUDE        "\video\mprocEQU.ASM"   ;MPROC equates
      17                            .INCLUDE        "\video\DISPEQU.ASM"    ;Display processor equates
      18                            .INCLUDE        "\video\GSP.INC"        ;GSP assembler equates
      19                            .INCLUDE        "\video\SYS.INC"        ;Zunit system equates
      20                            .INCLUDE        "\video\MACROS.HDR"     ;Macros, Yeah!
      21                    *       LOCAL STUFF
      22                            .INCLUDE        "NARCEQU.ASM"           ;NARC Equates
      23                            .INCLUDE        "NARCTEQU.ASM"
      24                    ****    .INCLUDE        "imgtbl.glo"
      25                            .INCLUDE        "NARCFRAG.GLO"
      26                    
      27                            .globl  PIMPpal,NARCS
      28                            .globl  PIMPCRM1
      29                    *
      30                    *EXTERNALS
      31                            .GLOBAL LOFDEXP,LOFDEXP1,LOFRAG1,LOFRAG2,LOFRAG3,LOFRAG4,LOFDFLA
      32                            .GLOBAL LOFDROCK,LDEXP1
      33                    
      34                            .include        "narcpimp.tbl"
      35                    
      36              0005  BUCKHGHT        .set    5       ;add to Zdest when chasing bucks
      37                    
      38                    ********** GEORGE -- COMMENT THIS STUFF OUT **************
      39                    ;* Also uncomment RETS in GVARINIT
      40                    ;       .BSS    pimpmax,16,16           ;U - max # of active pimpmen
      41                    ;       .BSS    pimpbuck,16,16          ;U - chance/1000 of pimpman having money
      42                    ;       .BSS    pimpbrain,16,16         ;U - tiks between brain funcs
      43                                    ;U - chance/1000 of pimp throwing every brain cycle when walking
      44                    ;       .BSS    pimpthr1,16,16
      45                                    ;U - chance/1000 of pimp throwing every brain cycle when hiding
      46                    ;       .BSS    pimpthr2,16,16
      47                                    ;U - each throw chance/1000 of pimp throwing a fast ball
      48                    ;       .BSS    pimpfbal,16,16
      49                    
      50 00000000                   .TEXT
      51 00000000           VARINIT:
      52 00000000     0960          rets               ;* <---------------------- remove ;
      53 00000010     09c1          movi    12,A1
         00000020     000c  
      54 00000030     05e1          movb    A1,@pimpbrain
         00000040 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE    2

      55 00000060     09c1          movi    90,A1
         00000070     005a  
      56 00000080     05e1          movb    A1,@pimpthr1
         00000090 00000000! 
      57 000000b0     09c1          movi    90,A1
         000000c0     005a  
      58 000000d0     05e1          movb    A1,@pimpthr2
         000000e0 00000000! 
      59 00000100     09c1          movi    350,A1
         00000110     015e  
      60 00000120     05e1          movb    A1,@pimpfbal
         00000130 00000000! 
      61 00000150     09c1          movi    5,A1
         00000160     0005  
      62 00000170     0581          move    A1,@pimpmax,W
         00000180 00000000! 
      63 000001a0     09c1          movi    350,A1
         000001b0     015e  
      64 000001c0     0581          move    A1,@pimpbuck,W
         000001d0 00000000! 
      65 000001f0     0960          rets
      66                    **********************************************************
      67                    
      68                    ***************************************************************************
      69                    ; PIMP SUB_TYPES
      70                    ; 0 - w/ no coors starts at PLZMIN and 1 to 2 full screens away from
      71                    ;       players in X.  90% chance of coming up to the right.
      72                    ; 1 - w/ no coors comes out any available door, else it reverts to type 0
      73 00000200           DTBL:
      74 00000200 00000f80'         .long   D0,D1
      75 00000240 00000b00'         .long   D1,D1,D1,D1,D1,D1,D1
      76 00000320 00000b00'         .long   D1,D1,D1,D1,D1,D1,D1
      77                    ***************************************************************************
      78                    
      79                    
      80                    ************************* FUNCTION TABLE ***************************
      81 00000400           PIMP_FUNCS:
      82 00000400 000004a0'         .long   BOOF
      83 00000420 00000000!         .long   GoDestV
      84 00000440 00001a20'         .long   GetXVel
      85 00000460 0000c000          .long   0C000H  ;MaxXZAngle
      86 00000480 00000019          .long   25      ;FlipTiks
      87                    ********************************************************************
      88                    
      89                    ********************************************************************
      90                    ;To catch a nulled dereference through JR_FUNCS
      91 000004a0     c000  BOOF:   jruc    $
         000004b0     fffe  
      92                    ********************************************************************
      93                    
      94                    **************************************************************************
      95                    *INIT TABLE
      96                    *       .LONG   OXVEL,OYVEL,OXVAL,XYVAL
      97                    *       .WORD   OZPOS,OZVEL
      98                    *       .LONG   OIMG,OZSIZ,OCVECT
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE    3

      99                    *       .WORD   OFLAGS,OID
     100 000004c0           PIMPINIT
     101 000004c0 00000000          .LONG   0,0,0,0
     102 00000540     0000          .WORD   0,0
     103 00000560 00000c80"         .LONG   prun1t,PIMPZSIZ,PIMPCOLL
     104 000005c0     8002          .WORD   DMAWNZ,PIMPEOID
     105 000005e0 00000000!         .LONG   PIMPBLIP
     106                    **************************************************************************
     107                    
     108                    **************************************************************************
     109 00000600           PIMPCOLD:
     110                    ;* PARMS
     111                    ; A5  - Y:X
     112                    ; A6  - 0:Z     ;if A5 and A6=0 then Random Position
     113                    ; A14 - 0.8:#.4:rand#.4:00EH.8:OIDtype.4:OIDsubtype.4
     114                    
     115 00000600     098f          mmtm    SP,A0,A1,A2,A7,A9,A10,A11
         00000610     e170  
     116 00000620     0d3f          callr   VARINIT
         00000630     ff9c  
     117                            
     118 00000640     05a0          move    @SLPPIMPS,A0,W
         00000650 00000000! 
     119 00000670     0b40          cmpi    5,A0
         00000680     fffa  
     120 00000690     c518          jrge    ColdX
     121                            
     122 000006a0     4ca9          move    A5,A9           ;Y:X in A9
     123 000006b0     4cca          move    A6,A10          ;0:Z in A10
     124 000006c0     4dcb          move    A14,A11         ;ID in A11
     125                    
     126 000006d0     4dc0          move    A14,A0
     127 000006e0     2580          sll     12,A0
     128 000006f0     2c80          srl     28,A0
     129 00000700     ca03          jrz     SkRndCnt
     130 00000710     0d5f          calla   RANDU
         00000720 00000000! 
     131 00000740           SkRndCnt:
     132 00000740     4dc2          move    A14,A2
     133 00000750     2502          sll     8,A2
     134 00000760     2c82          srl     28,A2
     135 00000770     4002          add     A0,A2
     136 00000780           ColdLp: 
     137 00000780                   CREATE  PIMPEPID,PIMP   ;allocate process?      (bashes A1,A7)
     138 00000800     ca01          jrz     ColdX
     139 00000810     3d42          dsjs    A2,ColdLp
     140 00000820           ColdX:
     141 00000820     09af          mmfm    SP,A0,A1,A2,A7,A9,A10,A11
         00000830     0e87  
     142 00000840     0960          rets
     143                    **************************************************************************
     144                    
     145                    *********************  START OF PIMP PROCESS  ****************************
     146 00000850           PIMP:
     147                    * A9  - Y:X
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE    4

     148                    * A10 - 0:Z     ;if A9,A10 = 0 generate random start pos.
     149                    * A11 - 0.8:#.4:rand#.4:00EH.8:OIDtype.4:OIDsubtype.4
     150                    ;based on sub-type, jump to appropriate routine
     151                    
     152 00000850                   INCW    @SLPPIMPS
     153 000008c0           MaxWait:
     154 000008c0     05a0          move    @pimpmax,A0,W
         000008d0 00000000! 
     155 000008f0     05a1          move    @PIMPCNT,A1,W
         00000900 00000000! 
     156 00000920     4801          cmp     A0,A1
     157 00000930     c405          jrlt    MaxWaitX
     158 00000940                   SLEEP   30
     159 00000980     c0f3          jruc    MaxWait
     160 00000990           MaxWaitX:
     161 00000990                   DECW    @SLPPIMPS
     162 00000a00                   INCW    @PIMPCNT
     163                    
     164 00000a70     4d60          move    A11,A0
     165 00000a80     2780          sll     28,A0
     166 00000a90     2c80          srl     28,A0
     167 00000aa0     24a0          sll     5,A0
     168 00000ab0     0b20          addi    DTBL,A0
         00000ac0 00000200' 
     169 00000ae0     8600          move    *A0,A0,L
     170 00000af0     0160          jump    A0
     171                    
     172                    
     173                    **************************************************************************
     174 00000b00           D1:
     175                    ;DISPATCH FROM A DOOR   
     176 00000b00     4d20          move    A9,A0
     177 00000b10     5540          or      A10,A0
     178 00000b20     cb64          jrnz    GotCoors
     179                    
     180 00000b30     09c0          movi    5,A0
         00000b40     0005  
     181 00000b50           DoorWait:
     182 00000b50     0d5f          calla   GETDOOR
         00000b60 00000000! 
     183 00000b80     cb0e          jrnz    GotDoor
     184 00000b90                   PUSHP   A0
     185 00000ba0     09c0          movi    60,A0
         00000bb0     003c  
     186 00000bc0     0d5f          calla   RANDU
         00000bd0 00000000! 
     187 00000bf0     0d5f          calla   PRCSLP
         00000c00 00000000! 
     188 00000c20                   PULLP   A0
     189 00000c40     1420          dec     A0
     190 00000c50     c1ef          jrp     DoorWait
     191 00000c60     c031          jruc    D0
     192 00000c70           GotDoor:
     193 00000c70                   JSRP    DOOROPEN                ;OPEN SEZ-A-ME
     194 00000ce0                   CREATE  INDPID,CLOZDOOR         ;CLOSE THE DOOR
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE    5

     195 00000d60     09ee          movi    PIMPINIT,A14
         00000d70 000004c0' 
     196 00000d90     0d5f          calla   DOORRITE        ;rets upper Y,X start pos in A1
         00000da0 00000000! 
     197 00000dc0     09e6          movi    PIMPTAB,A6
         00000dd0 0000ce40' 
     198 00000df0     098f          mmtm    SP,A11
         00000e00     0010  
     199 00000e10     0d5f          calla   ESINITUL        ;CREATE PIMP
         00000e20 00000000! 
     200 00000e40     09af          mmfm    SP,A11
         00000e50     0800  
     201 00000e60     ca00          jrz     PIMP_DIE        ;create failed
         00000e70     0a8a  
     202                    
     203 00000e80     b168          move    A11,*A8(OID),W
         00000e90     01a0  
     204 00000ea0     09e2          movi    -010000H,A2     ;X VELOCITY
         00000eb0 ffff0000  
     205 00000ed0     09e9          movi    WALKOUT,A9      ;GET ANIMATION SCRIPT
         00000ee0 0000d410' 
     206 00000f00                   JSRP    OUTDOOR
     207 00000f70     c042          jruc    InitEnmy
     208                    
     209                    
     210                    **************************************************************************
     211 00000f80           D0:     
     212 00000f80     4d20          move    A9,A0
     213 00000f90     5540          or      A10,A0
     214 00000fa0     cb1c          jrnz    GotCoors
     215                    
     216                    *Enemy object initialization
     217 00000fb0     05a9          move    @(WORLDTLX+16),A9,W                              
         00000fc0 00000010! 
     218 00000fe0     0be9          subi    250,A9
         00000ff0     ff05  
     219 00001000     09c0          movi    950,A0
         00001010     03b6  
     220 00001020     0d5f          calla   RANDPER
         00001030 00000000! 
     221 00001050     c902          jrnc    StrtLft
     222 00001060     0b09          addi    1012,A9
         00001070     03f4  
     223 00001080           StrtLft:
     224 00001080     09c0          movi    15,A0
         00001090     000f  
     225 000010a0     0d5f          calla   SRAND
         000010b0 00000000! 
     226 000010d0     4009          add     A0,A9
     227 000010e0     05aa          move    @PLZMIN,A10,W                                                                    
         000010f0 00000000! 
     228 00001110     09c0          movi    35,A0
         00001120     0023  
     229 00001130     0d5f          calla   RANDU
         00001140 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE    6

     230 00001160     400a          add     A0,A10
     231                    
     232 00001170           GotCoors:
     233 00001170     4d21          move    A9,A1
     234 00001180     09e6          movi    PIMPTAB,A6
         00001190 0000ce40' 
     235 000011b0     09ee          movi    PIMPINIT,A14    
         000011c0 000004c0' 
     236 000011e0     098f          mmtm    SP,A9,A10,A11
         000011f0     0070  
     237 00001200     0d5f          calla   ESINITLL                ;CREATE PIMP
         00001210 00000000! 
     238 00001230     09af          mmfm    SP,A9,A10,A11
         00001240     0e00  
     239 00001250     ca00          jrz     PIMP_DIE
         00001260     0a4b  
     240                    ;Y:X in A9
     241                    ;0:Z in A10
     242 00001270     4d4a          move    A10,A10
     243 00001280     cb04          jrnz    GotZC
     244 00001290     ef2a          movy    A9,A10
     245 000012a0     2e0a          srl     16,A10
     246 000012b0     0bea          subi    ZORIGIN,A10
         000012c0     ff37  
     247 000012d0           GotZC:
     248 000012d0     b128          move    A9,*A8(OXPOS),W
         000012e0     0090  
     249 000012f0     b148          move    A10,*A8(OZPOS),W
         00001300     00d0  
     250 00001310     0b0a          addi    ZORIGIN,A10
         00001320     00c8  
     251 00001330     b500          move    *A8(OSIZEY),A0,W
         00001340     0150  
     252 00001350     440a          sub     A0,A10
     253 00001360     b148          move    A10,*A8(OYPOS),W
         00001370     00b0  
     254 00001380     b168          move    A11,*A8(OID),W
         00001390     01a0  
     255                    ;       jruc    InitEnmy
     256                    
     257                    
     258                    ****************************************************************************
     259 000013a0           InitEnmy:
     260 000013a0     0d5f          calla   ClrVel
         000013b0 00000000! 
     261                    
     262 000013d0     5600          clr     A0
     263 000013e0     b20d          move    A0,*A13(DEST),L
         000013f0     01e0  
     264 00001400     b20d          move    A0,*A13(TEMPDEST),L
         00001410     0200  
     265 00001420     ac0d          movb    A0,*A13(DEST_TAG)
         00001430     01c0  
     266                    ;       movb    A0,*A13(ZPER)
     267 00001440     ac0d          movb    A0,*A13(SNOOZE)
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE    7

         00001450     01d0  
     268 00001460     ac0d          movb    A0,*A13(FLIPTIKS)
         00001470     01d8  
     269 00001480     b20d          move    A0,*A13(WANTOBJ),L
         00001490     0220  
     270 000014a0     b20d          move    A0,*A13(TIKCTRS),L
         000014b0     01a0  
     271 000014c0     b20d          move    A0,*A13(EBYTES),L
         000014d0     0180  
     272 000014e0     09e0          movi    PIMP_FUNCS,A0
         000014f0 00000400' 
     273 00001510     b20d          move    A0,*A13(FUNCS),L
         00001520     00e0  
     274                    
     275 00001530     5621          clr     A1
     276 00001540           BckLp:
     277 00001540     05a0          move    @pimpbuck,A0,W
         00001550 00000000! 
     278 00001570     0d5f          calla   RANDPER
         00001580 00000000! 
     279 000015a0     c904          jrnc    BckX
     280 000015b0     1021          inc     A1
     281 000015c0     0b41          cmpi    5,A1
         000015d0     fffa  
     282 000015e0     c4f5          jrlt    BckLp
     283 000015f0           BckX:
     284 000015f0     4c20          move    A1,A0
     285 00001600     ca03          jrz     NoBck
     286 00001610     0d5f          calla   ADDBUCKS
         00001620 00000000! 
     287 00001640           NoBck:
     288 00001640     4d00          move    A8,A0
     289 00001650     0d5f          calla   SETZPOS
         00001660 00000000! 
     290 00001680     0d3f          callr   ZFIX
         00001690     0002  
     291 000016a0     c000          jruc    PIMP_MV
         000016b0     014f  
     292                    ****************************************************************************
     293                    
     294                    ****************************************************************************
     295 000016c0           ZFIX:
     296 000016c0     b500          move    *A8(OZPOS),A0,W
         000016d0     00d0  
     297 000016e0     0be0          subi    3,A0
         000016f0     fffc  
     298 00001700     b008          move    A0,*A8(OZPOS),W
         00001710     00d0  
     299 00001720     0960          rets
     300                    ****************************************************************************
     301                    
     302                    **************************************************************************
     303 00001730           ZCHECK:
     304 00001730     b501          move    *A8(OZPOS),A1,W
         00001740     00d0  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE    8

     305 00001750     05a0          move    @PLZMIN,A0,W
         00001760 00000000! 
     306 00001780     10a0          addk    5,A0
     307 00001790     4401          sub     A0,A1
     308 000017a0     cf0b          jrnn    ZMinOK
     309 000017b0     b008          move    A0,*A8(OZPOS),W
         000017c0     00d0  
     310 000017d0     b500          move    *A8(OYPOS),A0,W
         000017e0     00b0  
     311 000017f0     4420          sub     A1,A0
     312 00001800     b008          move    A0,*A8(OYPOS),W
         00001810     00b0  
     313 00001820     b700          move    *A8(OZVEL),A0,L ;* want to check sign
         00001830     00e0  
     314 00001840     cf1c          jrnn    ZMaxOK
     315 00001850     c013          jruc    SETZV
     316 00001860           ZMinOK:
     317 00001860     b501          move    *A8(OZPOS),A1,W
         00001870     00d0  
     318 00001880     05a0          move    @PLZMAX,A0,W
         00001890 00000000! 
     319 000018b0     1460          subk    3,A0
     320 000018c0     4401          sub     A0,A1
     321 000018d0     ce13          jrn     ZMaxOK
     322 000018e0     b008          move    A0,*A8(OZPOS),W
         000018f0     00d0  
     323 00001900     b500          move    *A8(OYPOS),A0,W
         00001910     00b0  
     324 00001920     4420          sub     A1,A0
     325 00001930     b008          move    A0,*A8(OYPOS),W
         00001940     00b0  
     326 00001950     b700          move    *A8(OZVEL),A0,L ;* want to check sign
         00001960     00e0  
     327 00001970     ce09          jrn     ZMaxOK
     328 00001980     ca08          jrz     ZMaxOK
     329 00001990           SETZV:
     330 00001990     b701          move    *A8(OYVEL),A1,L
         000019a0     0060  
     331 000019b0     4401          sub     A0,A1
     332 000019c0     b228          move    A1,*A8(OYVEL),L
         000019d0     0060  
     333 000019e0     5600          clr     A0
     334 000019f0     b208          move    A0,*A8(OZVEL),L ;set Z velocity
         00001a00     00e0  
     335 00001a10           ZMaxOK:
     336 00001a10     0960          rets
     337                    **************************************************************************
     338                    
     339                    
     340                    **************************** GetXVel *************************************
     341 00001a20           GetXVel:
     342 00001a20     0b69          cmpi    MOVETBL,A9
         00001a30 ffff2f7f' 
     343 00001a50     c418          jrlt    NoXvel
     344 00001a60     0b69          cmpi    MOVEEND,A9
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE    9

         00001a70 ffff2bef' 
     345 00001a90     c514          jrge    NoXvel
     346                    
     347 00001aa0     0b69          cmpi    PWX,A9
         00001ab0 ffff2e5f' 
     348 00001ad0     c704          jrgt    NotWk
     349 00001ae0     09e0          movi    WALKVEL+01000H,A0
         00001af0 00019000  
     350 00001b10     c00d          jruc    GotXvel
     351 00001b20           NotWk:
     352 00001b20     0b69          cmpi    PMWKX,A9
         00001b30 ffff2d1f' 
     353 00001b50     c704          jrgt    NotMwk
     354 00001b60     09e0          movi    MWALKVEL-01000H,A0
         00001b70 fffec000  
     355 00001b90     c005          jruc    GotXvel
     356 00001ba0           NotMwk:
     357 00001ba0     09e0          movi    RUNVEL+01000H,A0
         00001bb0 0002b000  
     358 00001bd0     c001          jruc    GotXvel
     359 00001be0           NoXvel:
     360 00001be0     5600          clr     A0
     361 00001bf0           GotXvel:
     362 00001bf0     0960          rets
     363                    **************************************************************************
     364                    
     365                    *****************************  GO WALK  ************************************
     366 00001c00           GoWalk:
     367 00001c00     098f          mmtm    SP,A0
         00001c10     8000  
     368 00001c20     0b69          cmpi    PW,A9
         00001c30 ffff2f7f' 
     369 00001c50     c405          jrlt    DoWlk
     370 00001c60     0b69          cmpi    PWX,A9
         00001c70 ffff2e5f' 
     371 00001c90     c501          jrge    DoWlk
     372                    
     373 00001ca0     c018          jruc    GoWalkX
     374 00001cb0           DoWlk:
     375 00001cb0     5600          clr     A0
     376 00001cc0     ac0d          movb    A0,*A13(HIDING)
         00001cd0     0180  
     377 00001ce0     09e9          movi    PW,A9
         00001cf0 0000d080' 
     378 00001d10     b32d          move    A9,*A13(ANIMPTR),L
         00001d20     0120  
     379                    
     380                            ;* set veloctiy for skaters
     381 00001d30     b500          move    *A8(OFLAGS),A0,W
         00001d40     0100  
     382 00001d50     1f60          btst    B_FLIPH,A0
     383 00001d60     ca04          jrz     VelPos0
     384 00001d70     09e0          movi    -WALKVEL,A0
         00001d80 fffe8000  
     385 00001da0     c003          jruc    SetXV0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   10

     386 00001db0           VelPos0:
     387 00001db0     09e0          movi    WALKVEL,A0
         00001dc0 00018000  
     388 00001de0           SetXV0:
     389 00001de0     b208          move    A0,*A8(OXVEL),L
         00001df0     0040  
     390 00001e00     0d5f          calla   UpdShadV
         00001e10 00000000! 
     391                            
     392 00001e30           GoWalkX:
     393 00001e30     09af          mmfm    SP,A0
         00001e40     0001  
     394 00001e50     0960          rets
     395                    ****************************************************************************
     396                    
     397                    **************************  GO MOON WALK  **********************************
     398 00001e60           GoMWalk:
     399 00001e60     098f          mmtm    SP,A0
         00001e70     8000  
     400 00001e80     0b69          cmpi    PMWK,A9
         00001e90 ffff2e3f' 
     401 00001eb0     c405          jrlt    DoMWlk
     402 00001ec0     0b69          cmpi    PMWKX,A9
         00001ed0 ffff2d1f' 
     403 00001ef0     c501          jrge    DoMWlk
     404                    
     405 00001f00     c018          jruc    GoMWalkX
     406 00001f10           DoMWlk:
     407 00001f10     5600          clr     A0
     408 00001f20     ac0d          movb    A0,*A13(HIDING)
         00001f30     0180  
     409 00001f40     09e9          movi    PMWK,A9
         00001f50 0000d1c0' 
     410 00001f70     b32d          move    A9,*A13(ANIMPTR),L
         00001f80     0120  
     411                    
     412                            ;* set veloctiy for skaters
     413 00001f90     b500          move    *A8(OFLAGS),A0,W
         00001fa0     0100  
     414 00001fb0     1f60          btst    B_FLIPH,A0
     415 00001fc0     ca04          jrz     VelPos1
     416 00001fd0     09e0          movi    -MWALKVEL,A0
         00001fe0 00013000  
     417 00002000     c003          jruc    SetXV1
     418 00002010           VelPos1:
     419 00002010     09e0          movi    MWALKVEL,A0
         00002020 fffed000  
     420 00002040           SetXV1:
     421 00002040     b208          move    A0,*A8(OXVEL),L
         00002050     0040  
     422 00002060     0d5f          calla   UpdShadV
         00002070 00000000! 
     423                            
     424 00002090           GoMWalkX:
     425 00002090     09af          mmfm    SP,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   11

         000020a0     0001  
     426 000020b0     0960          rets
     427                    ****************************************************************************
     428                    
     429                    ******************************  GO RUN  ************************************
     430 000020c0           GoRun:
     431 000020c0     098f          mmtm    SP,A0
         000020d0     8000  
     432 000020e0     0b69          cmpi    PRUN,A9
         000020f0 ffff2cff' 
     433 00002110     c405          jrlt    DoRun
     434 00002120     0b69          cmpi    PRUNX,A9
         00002130 ffff2c0f' 
     435 00002150     c501          jrge    DoRun
     436                    
     437 00002160     c018          jruc    GoRunX
     438 00002170           DoRun:
     439 00002170     5600          clr     A0
     440 00002180     ac0d          movb    A0,*A13(HIDING)
         00002190     0180  
     441 000021a0     09e9          movi    PRUN,A9
         000021b0 0000d300' 
     442 000021d0     b32d          move    A9,*A13(ANIMPTR),L
         000021e0     0120  
     443                    
     444                            ;* set veloctiy for skaters
     445 000021f0     b500          move    *A8(OFLAGS),A0,W
         00002200     0100  
     446 00002210     1f60          btst    B_FLIPH,A0
     447 00002220     ca04          jrz     VelPos2
     448 00002230     09e0          movi    -RUNVEL,A0
         00002240 fffd6000  
     449 00002260     c003          jruc    SetXV2
     450 00002270           VelPos2:
     451 00002270     09e0          movi    RUNVEL,A0
         00002280 0002a000  
     452 000022a0           SetXV2:
     453 000022a0     b208          move    A0,*A8(OXVEL),L
         000022b0     0040  
     454 000022c0     0d5f          calla   UpdShadV
         000022d0 00000000! 
     455                            
     456 000022f0           GoRunX:
     457 000022f0     09af          mmfm    SP,A0
         00002300     0001  
     458 00002310     0960          rets
     459                    ****************************************************************************
     460                    
     461                    ****************************  Is MoonWalk?  ********************************
     462 00002320           IsMwk:
     463                    ;* is PIMP Moon Walking?
     464 00002320     0b69          cmpi    PMWK,A9
         00002330 ffff2e3f' 
     465 00002350     c406          jrlt    NoMwk
     466 00002360     0b69          cmpi    PMWKX,A9
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   12

         00002370 ffff2d1f' 
     467 00002390     c702          jrgt    NoMwk
     468 000023a0           YesMwk:
     469 000023a0     0de0          setc
     470 000023b0     0960          rets
     471 000023c0           NoMwk:
     472 000023c0     0320          clrc
     473 000023d0     0960          rets
     474                    ****************************************************************************
     475                    
     476                    ****************************************************************************
     477 000023e0           TRYBUST:
     478 000023e0     afa0          movb    *A13(SNOOZE),A0
         000023f0     01d0  
     479 00002400     cb32          jrnz    NOBUST
     480 00002410     afa0          movb    *A13(BUSTTIKS),A0
         00002420     01b8  
     481 00002430     cb2f          jrnz    NOBUST
     482 00002440     0d5f          calla   CKBUST
         00002450 00000000! 
     483 00002470     c92b          jrnc    NOBUST
     484 00002480     09c0          movi    60,A0
         00002490     003c  
     485 000024a0     ac0d          movb    A0,*A13(BUSTTIKS)
         000024b0     01b8  
     486 000024c0     0d5f          calla   ClrVel
         000024d0 00000000! 
     487 000024f0     09c2          movi    20,A2
         00002500     0014  
     488 00002510     09e9          movi    PIMPBUST,A9
         00002520 0000d730' 
     489 00002540                   jsrp    GBUST
     490 000025b0     c800          jrc     BUSTED
         000025c0     091f  
     491 000025d0           Foolem:
     492 000025d0     0b69          cmpi    PCUFF,A9
         000025e0 ffff283f' 
     493 00002600     c509          jrge    EscBst
     494 00002610     5621          clr     A1                      ;* one frame w/ sleepin
     495 00002620                   jsrp    FRANIM
     496 00002690     c0f3          jruc    Foolem
     497 000026a0           EscBst:
     498 000026a0     5600          clr     A0                                                                                      
     499 000026b0     ac0d          movb    A0,*A13(BRAINTIKS)
         000026c0     01b0  
     500 000026d0     ac0d          movb    A0,*A13(DEST_TAG)
         000026e0     01c0  
     501 000026f0     0de0          setc
     502 00002700                   retp
     503 00002730           NOBUST:
     504 00002730     0320          clrc
     505 00002740                   retp
     506                    **************************************************************************
     507                    
     508                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   13

     509                    **************************************************************************
     510 00002770           CkXDIST:
     511 00002770     05a1          move    @(WORLDTLX+16),A1,W
         00002780 00000010! 
     512 000027a0     0b01          addi    256,A1
         000027b0     0100  
     513 000027c0     0d5f          calla   GETANIX
         000027d0 00000000! 
     514 000027f0     4420          sub     A1,A0
     515 00002800     0b40          cmpi    600,A0
         00002810     fda7  
     516 00002820     c71e          jrgt    DeepRght
     517 00002830     0b40          cmpi    300,A0
         00002840     fed3  
     518 00002850     c722          jrgt    NearRght
     519 00002860     0b40          cmpi    -600,A0
         00002870     0257  
     520 00002880     c407          jrlt    DeepLeft
     521 00002890     0b40          cmpi    -300,A0
         000028a0     012b  
     522 000028b0     c420          jrlt    NearLeft
     523                    
     524                            ;* on screen
     525 000028c0     5600          clr     A0
     526 000028d0     ac0d          movb    A0,*A13(SNOOZE)
         000028e0     01d0  
     527 000028f0     c01f          jruc    CkXDISTX
     528                    
     529 00002900           DeepLeft:
     530 00002900                   jsrp    CkQuit
     531 00002970     afa0          movb    *A13(SNOOZE),A0
         00002980     01d0  
     532 00002990     cb15          jrnz    CkXDISTX
     533 000029a0     1820          movk    1,A0
     534 000029b0     ac0d          movb    A0,*A13(SNOOZE)
         000029c0     01d0  
     535 000029d0     5600          clr     A0
     536 000029e0     ac0d          movb    A0,*A13(HIDING)
         000029f0     0180  
     537 00002a00     c00e          jruc    CkXDISTX
     538 00002a10           DeepRght:
     539 00002a10     afa0          movb    *A13(SNOOZE),A0
         00002a20     01d0  
     540 00002a30     cb0b          jrnz    CkXDISTX
     541 00002a40     1820          movk    1,A0
     542 00002a50     ac0d          movb    A0,*A13(SNOOZE)
         00002a60     01d0  
     543 00002a70     c007          jruc    CkXDISTX
     544 00002a80           NearRght:
     545 00002a80     5600          clr     A0
     546 00002a90     ac0d          movb    A0,*A13(SNOOZE)
         00002aa0     01d0  
     547 00002ab0     c003          jruc    CkXDISTX
     548 00002ac0           NearLeft:
     549 00002ac0     5600          clr     A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   14

     550 00002ad0     ac0d          movb    A0,*A13(SNOOZE)
         00002ae0     01d0  
     551                    ;       jruc    CkXDISTX
     552 00002af0           CkXDISTX:
     553 00002af0                   RETP
     554                    **************************************************************************
     555                    
     556                    **************************************************************************
     557 00002b20           CkQuit:
     558 00002b20     05a0          move    @SLPPIMPS,A0,W
         00002b30 00000000! 
     559 00002b50     ca02          jrz     CkQuitX
     560 00002b60     c000          jruc    PIMP_DONE
         00002b70     08b6  
     561 00002b80           CkQuitX:
     562 00002b80                   RETP
     563                    **************************************************************************
     564                    
     565                    ****************************  PIMP MOVE  ***********************************
     566 00002bb0           PIMP_MV:
     567 00002bb0     0d3f          callr   ZCHECK
         00002bc0     feb6  
     568 00002bd0     afa0          movb    *A13(HIDING),A0
         00002be0     0180  
     569 00002bf0     ca03          jrz     SkCkHidd
     570 00002c00     0d3f          callr   P_HIDDEN        ;is pimp hidden
         00002c10     082a  
     571 00002c20     c840          jrc     SkCkDest
     572 00002c30           SkCkHidd:
     573                    
     574                    ;********  CHECK if a DESTINATION has been reached, and what to do if so..
     575 00002c30     afa0          movb    *A13(DEST_TAG),A0
         00002c40     01c0  
     576 00002c50     ca3d          jrz     SkCkDest
     577 00002c60     afa0          movb    *A13(DESTTIKS),A0
         00002c70     01a8  
     578 00002c80     cb3a          jrnz    SkCkDest
     579 00002c90     0d5f          calla   CkDest
         00002ca0 00000000! 
     580 00002cc0     c936          jrnc    NotYet
     581                    
     582                            ;* we have reached our destination, what to do??
     583 00002cd0     afa0          movb    *A13(DEST_TAG),A0
         00002ce0     01c0  
     584 00002cf0     0b40          cmpi    BULL_T,A0
         00002d00     ffeb  
     585 00002d10     cb01          jrnz    SkBULL_D
     586 00002d20     c02b          jruc    DestDone
     587 00002d30           SkBULL_D:
     588 00002d30     0b40          cmpi    BUST_T,A0
         00002d40     fff0  
     589 00002d50     cb01          jrnz    SkBUST_D
     590 00002d60     c027          jruc    DestDone
     591 00002d70           SkBUST_D:
     592 00002d70     0b40          cmpi    ESCAPE_T,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   15

         00002d80     fff9  
     593 00002d90     cb08          jrnz    SkESC_D
     594 00002da0                   jsrp    AtEscape
     595 00002e10     c01c          jruc    DestDone
     596 00002e20           SkESC_D:
     597 00002e20     0b40          cmpi    CHASE_T,A0
         00002e30     fffa  
     598 00002e40     cb01          jrnz    SkCHS_D
     599 00002e50     c018          jruc    DestDone
     600 00002e60           SkCHS_D:
     601 00002e60     0b40          cmpi    BUCK_T,A0
         00002e70     fffb  
     602 00002e80     cb08          jrnz    SkBUCK_D
     603 00002e90                   jsrp    GrabBuck
     604 00002f00     c00d          jruc    DestDone
     605 00002f10           SkBUCK_D:
     606 00002f10     0b40          cmpi    HIDE_T,A0
         00002f20     fffc  
     607 00002f30     cb03          jrnz    SkHIDE_D
     608 00002f40     0d3f          callr   AtHide
         00002f50     0304  
     609 00002f60     c007          jruc    DestDone
     610 00002f70           SkHIDE_D:
     611 00002f70     0b40          cmpi    DFLT_T,A0
         00002f80     fffe  
     612 00002f90     cb03          jrnz    SkDFLT_D
     613 00002fa0     0d3f          callr   AtDflt
         00002fb0     030f  
     614 00002fc0     c001          jruc    DestDone
     615 00002fd0           SkDFLT_D:
     616                    
     617 00002fd0     c005          jruc    SkCkDest
     618 00002fe0           DestDone:
     619 00002fe0     5600          clr     A0
     620 00002ff0     ac0d          movb    A0,*A13(BRAINTIKS)      ;Allow new course of action
         00003000     01b0  
     621 00003010     ac0d          movb    A0,*A13(DEST_TAG)
         00003020     01c0  
     622 00003030           NotYet:
     623 00003030           SkCkDest:
     624                    
     625                    **** BRAIN functions *****
     626 00003030     afa0          movb    *A13(BRAINTIKS),A0
         00003040     01b0  
     627 00003050     cb59          jrnz    BrainX
     628                    
     629 00003060                   jsrp    TRYBUST
     630 000030d0     c8ad          jrc     PIMP_MV
     631                    
     632 000030e0     19e0          movk    15,A0
     633 000030f0     afa1          movb    *A13(SNOOZE),A1
         00003100     01d0  
     634 00003110     cb03          jrnz    SetBTiks
     635 00003120     05a0          move    @pimpbrain,A0,W
         00003130 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   16

     636 00003150           SetBTiks:
     637 00003150     ac0d          movb    A0,*A13(BRAINTIKS)      ;reset brain wait
         00003160     01b0  
     638                    
     639 00003170                   jsrp    CkXDIST                 ;routine can DIE
     640                    
     641 000031e0     afa1          movb    *A13(SNOOZE),A1
         000031f0     01d0  
     642 00003200     cb1f          jrnz    BSnooze
     643 00003210                   jsrp    Pfire
     644                    
     645 00003280     afa0          movb    *A13(DEST_TAG),A0
         00003290     01c0  
     646 000032a0     0b40          cmpi    BULL_T,A0
         000032b0     ffeb  
     647 000032c0     c532          jrge    BrainX
     648 000032d0                   jsrp    CkDngr
     649                    
     650 00003340     afa0          movb    *A13(DEST_TAG),A0
         00003350     01c0  
     651 00003360     0b40          cmpi    BUST_T,A0
         00003370     fff0  
     652 00003380     c526          jrge    BrainX
     653 00003390                   jsrp    CkEvade
     654 00003400           BSnooze:
     655                    
     656                    ;       movb    *A13(DEST_TAG),A0
     657                    ;       cmpi    ESCAPE_T,A0
     658                    ;       jrge    BrainX
     659                    ;       callr   CkEscape
     660                    
     661 00003400     afa0          movb    *A13(DEST_TAG),A0
         00003410     01c0  
     662 00003420     0b40          cmpi    CHASE_T,A0
         00003430     fffa  
     663 00003440     c51a          jrge    BrainX
     664 00003450     0d3f          callr   Chase
         00003460     0076  
     665                    
     666 00003470     afa0          movb    *A13(HIDING),A0
         00003480     0180  
     667 00003490     cb15          jrnz    BrainX
     668                    
     669 000034a0     afa0          movb    *A13(DEST_TAG),A0
         000034b0     01c0  
     670 000034c0     0b40          cmpi    BUCK_T,A0
         000034d0     fffb  
     671 000034e0     c510          jrge    BrainX
     672 000034f0     0d3f          callr   CkBuck
         00003500     0337  
     673                    
     674 00003510     afa0          movb    *A13(DEST_TAG),A0
         00003520     01c0  
     675 00003530     0b40          cmpi    HIDE_T,A0
         00003540     fffc  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   17

     676 00003550     c509          jrge    BrainX
     677 00003560     0d3f          callr   CkHide
         00003570     0357  
     678                    
     679 00003580     afa0          movb    *A13(DEST_TAG),A0
         00003590     01c0  
     680 000035a0     0b40          cmpi    DFLT_T,A0
         000035b0     fffe  
     681 000035c0     c502          jrge    BrainX
     682 000035d0     0d3f          callr   DfltDest
         000035e0     03f8  
     683 000035f0           BrainX:
     684                    
     685                    
     686                    **** Animation check ****
     687 000035f0     afa0          movb    *A13(SNOOZE),A0
         00003600     01d0  
     688 00003610     cb15          jrnz    AnimX
     689 00003620     afa0          movb    *A13(ANIMTIKS),A0
         00003630     01a0  
     690 00003640     cb12          jrnz    AnimX
     691                    
     692 00003650     afa0          movb    *A13(HIDING),A0
         00003660     0180  
     693 00003670     ca01          jrz     NotHidin
     694                            ;* Do hiding specific stuff.
     695 00003680     0300          jruc    Animate
     696                    
     697 00003690           NotHidin:
     698                    ;       movb    *A13(DEST_TAG),A0
     699                    ;       cmpi    BUST_T,A0
     700                    ;       jreq    SkDestOk
     701                    ;       cmpi    BUCK_T,A0
     702                    ;       jreq    SkDestOk
     703                    ;       calla   DestOk
     704                    ;       jrc     PIMP_MV
     705 00003690           SkDestOk:
     706                    
     707                    ;       calla   ZOFF
     708                    
     709 00003690           Animate:
     710 00003690     1881          movk    4,A1                    ;* one frame, no sleepin
     711 000036a0                   jsrp    FRANIM
     712 00003710     8721          move    *A9,A1,L
     713 00003720     cb02          jrnz    ListLeft
     714 00003730     0d3f          callr   AnimCycle
         00003740     0232  
     715 00003750           ListLeft:
     716 00003750     ac0d          movb    A0,*A13(ANIMTIKS)
         00003760     01a0  
     717 00003770           AnimX:
     718                    
     719                    
     720                    **** Find Next Event ****
     721 00003770     afa0          movb    *A13(BRAINTIKS),A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   18

         00003780     01b0  
     722 00003790     c101          jrp     SkBrain1
     723 000037a0     1820          movk    1,A0
     724 000037b0           SkBrain1:
     725 000037b0     4c05          move    A0,A5                   ;current min
     726                            
     727 000037c0     afa1          movb    *A13(DEST_TAG),A1
         000037d0     01c0  
     728 000037e0     ca09          jrz     SkMin1
     729 000037f0     afa1          movb    *A13(DESTTIKS),A1
         00003800     01a8  
     730 00003810     2701          sll     24,A1
     731 00003820     2d01          srl     24,A1
     732 00003830     cb01          jrnz    SkDest1
     733 00003840     1821          movk    1,A1
     734 00003850           SkDest1:
     735 00003850     48a1          cmp     A5,A1
     736 00003860     c501          jrge    SkMin1
     737 00003870     4c25          move    A1,A5
     738 00003880           SkMin1:
     739                    
     740                            ;**** The following are only done when not snoozing
     741 00003880     afa7          movb    *A13(SNOOZE),A7
         00003890     01d0  
     742 000038a0     cb05          jrnz    GotMin
     743                    
     744 000038b0     afa2          movb    *A13(ANIMTIKS),A2
         000038c0     01a0  
     745 000038d0     48a2          cmp     A5,A2
     746 000038e0     c501          jrge    SkMin2
     747 000038f0     4c45          move    A2,A5
     748 00003900           SkMin2:
     749                    
     750 00003900           GotMin:
     751 00003900     44a0          sub     A5,A0
     752 00003910     ac0d          movb    A0,*A13(BRAINTIKS)
         00003920     01b0  
     753 00003930     4c21          move    A1,A1
     754 00003940     ca03          jrz     SkDestDc
     755 00003950     44a1          sub     A5,A1
     756 00003960     ac2d          movb    A1,*A13(DESTTIKS)
         00003970     01a8  
     757 00003980           SkDestDc:
     758 00003980     4ce7          move    A7,A7   ;ck snooze
     759 00003990     cb0f          jrnz    MoveSlp
     760 000039a0     44a2          sub     A5,A2
     761 000039b0     ac4d          movb    A2,*A13(ANIMTIKS)
         000039c0     01a0  
     762                    
     763 000039d0     afa1          movb    *A13(BUSTTIKS),A1
         000039e0     01b8  
     764 000039f0     ca09          jrz     SkBustDc
     765 00003a00     0b81          andi    0FFH,A1 ;No o' this sign extended byte shit
         00003a10 ffffff00  
     766 00003a30     48a1          cmp     A5,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   19

     767 00003a40     c501          jrge    SkClrBst
     768 00003a50     4ca1          move    A5,A1
     769 00003a60           SkClrBst:
     770 00003a60     44a1          sub     A5,A1
     771 00003a70     ac2d          movb    A1,*A13(BUSTTIKS)
         00003a80     01b8  
     772 00003a90           SkBustDc:
     773                    
     774 00003a90           MoveSlp:
     775 00003a90     afa1          movb    *A13(FLIPTIKS),A1
         00003aa0     01d8  
     776 00003ab0     ca09          jrz     SkFlipDc
     777 00003ac0     0b81          andi    0FFH,A1 ;No o' this sign extended byte shit
         00003ad0 ffffff00  
     778 00003af0     48a1          cmp     A5,A1
     779 00003b00     c501          jrge    SkClrFlp
     780 00003b10     4ca1          move    A5,A1
     781 00003b20           SkClrFlp:
     782 00003b20     44a1          sub     A5,A1
     783 00003b30     ac2d          movb    A1,*A13(FLIPTIKS)
         00003b40     01d8  
     784 00003b50           SkFlipDc:
     785                    
     786 00003b50     4ca0          move    A5,A0
     787 00003b60     c101          jrp     Slp
     788 00003b70     1840          movk    2,A0            ;in case of something fucked
     789 00003b80           Slp:
     790 00003b80     0d5f          calla   PRCSLP
         00003b90 00000000! 
     791 00003bb0     c000          jruc    PIMP_MV
         00003bc0     fefe  
     792                    ****************************************************************************
     793                    
     794                    ******************************  CHASE  *************************************
     795 00003bd0           Chase:
     796 00003bd0     afa0          movb    *A13(HIDING),A0
         00003be0     0180  
     797 00003bf0     cb66          jrnz    ChaseX
     798 00003c00     afa0          movb    *A13(DEST_TAG),A0
         00003c10     01c0  
     799 00003c20     0b40          cmpi    HIDE_T,A0
         00003c30     fffc  
     800 00003c40     ca61          jreq    ChaseX
     801                    
     802 00003c50     09e1          movi    0FFFFH,A1               ;A1 will be X coor of leftmost player.
         00003c60 0000ffff  
     803 00003c80     4c22          move    A1,A2                   ;A2 will be Z coor of leftmost player.
     804 00003c90     09c3          movi    07FFFH,A3               ;A3 is X coor of rghtmost player
         00003ca0     7fff  
     805 00003cb0     4c64          move    A3,A4                   ;A4 is Z coor of rghtmost player
     806 00003cc0     56c6          clr     A6                      ;A6 velocity of leftmost pl
     807 00003cd0     56e7          clr     A7                      ;A7 velocity of rghtmost pl
     808                    
     809 00003ce0     4d0a          move    A8,A10
     810                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   20

     811 00003cf0     09e5          movi    P1DATA,A5
         00003d00 00000000! 
     812 00003d20     b6a5          move    *A5(POBJ),A5,L
         00003d30     00a0  
     813 00003d40     ca0c          jrz     SkChseP1
     814 00003d50     4ca8          move    A5,A8
     815 00003d60     0d5f          calla   GETANIX
         00003d70 00000000! 
     816 00003d90     4c01          move    A0,A1                   ;A1 xpos
     817 00003da0     b4a2          move    *A5(OZPOS),A2,W
         00003db0     00d0  
     818 00003dc0     b4a6          move    *A5(OXVEL+16),A6,W
         00003dd0     0050  
     819 00003de0     4c23          move    A1,A3
     820 00003df0     4c44          move    A2,A4
     821 00003e00     4cc7          move    A6,A7
     822 00003e10           SkChseP1:
     823 00003e10     09e5          movi    P2DATA,A5
         00003e20 00000000! 
     824 00003e40     b6a5          move    *A5(POBJ),A5,L
         00003e50     00a0  
     825 00003e60     ca12          jrz     GotPs
     826 00003e70     4ca8          move    A5,A8
     827 00003e80     0d5f          calla   GETANIX
         00003e90 00000000! 
     828 00003eb0     4820          cmp     A1,A0
     829 00003ec0     c705          jrgt    SkP2Lft
     830                    ;* P2 is on Left
     831 00003ed0     4c01          move    A0,A1
     832 00003ee0     b4a2          move    *A5(OZPOS),A2,W
         00003ef0     00d0  
     833 00003f00     b4a6          move    *A5(OXVEL+16),A6,W
         00003f10     0050  
     834 00003f20           SkP2Lft:
     835 00003f20     4860          cmp     A3,A0
     836 00003f30     c405          jrlt    GotPs
     837 00003f40     4c03          move    A0,A3
     838 00003f50     b4a4          move    *A5(OZPOS),A4,W
         00003f60     00d0  
     839 00003f70     b4a7          move    *A5(OXVEL+16),A7,W
         00003f80     0050  
     840                    
     841 00003f90           GotPs:
     842 00003f90     4d48          move    A10,A8
     843 00003fa0     0d5f          calla   GETANIX
         00003fb0 00000000! 
     844                            ;* check if we can chase leftmost player
     845 00003fd0     4cc6          move    A6,A6
     846 00003fe0     ca08          jrz     TryCRgt
     847 00003ff0     ce07          jrn     TryCRgt
     848 00004000     0be1          subi    100,A1
         00004010     ff9b  
     849 00004020     4820          cmp     A1,A0
     850 00004030     c503          jrge    TryCRgt
     851 00004040     0b01          addi    20,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   21

         00004050     0014  
     852 00004060     c00a          jruc    DoChase
     853                            
     854 00004070           TryCRgt:
     855                            ;* check if we can chase rgtmost player
     856 00004070     4ce7          move    A7,A7
     857 00004080     cf1d          jrnn    ChaseX
     858 00004090     0b03          addi    150,A3
         000040a0     0096  
     859 000040b0     4860          cmp     A3,A0
     860 000040c0     c619          jrle    ChaseX
     861 000040d0     0be3          subi    30,A3
         000040e0     ffe1  
     862 000040f0     4c61          move    A3,A1
     863 00004100     4c82          move    A4,A2
     864                    
     865 00004110           DoChase:
     866 00004110     0d3f          callr   GoRun
         00004120     fdf9  
     867                            ;Generate new DEST
     868 00004130     1bc0          movk    30,A0
     869 00004140     0d5f          calla   RANDU
         00004150 00000000! 
     870 00004170     15e0          subk    15,A0
     871 00004180     4002          add     A0,A2
     872 00004190     2602          sll     16,A2
     873 000041a0     ec22          movx    A1,A2
     874 000041b0     b24d          move    A2,*A13(DEST),L
         000041c0     01e0  
     875 000041d0     0d5f          calla   ClipZDst
         000041e0 00000000! 
     876 00004200     0d5f          calla   GoDestV
         00004210 00000000! 
     877                    
     878 00004230     18a0          movk    CHASE_T,A0
     879 00004240     ac0d          movb    A0,*A13(DEST_TAG)
         00004250     01c0  
     880 00004260           ChaseX:
     881 00004260     0960          rets
     882                    ****************************************************************************
     883                    
     884                    *************************  Sleep It Off  ***********************************
     885 00004270           SlpItOff:
     886                    ; Finish off sleep for current animation frame to eliminate the flashes..
     887                    ; Puts sleep time in A0, caller must call PRCSLP
     888 00004270     09c7          movi    0FFH,A7
         00004280     00ff  
     889 00004290     afa0          movb    *A13(ANIMTIKS),A0
         000042a0     01a0  
     890 000042b0     50e0          and     A7,A0
     891 000042c0     cb01          jrnz    SkIncSlp
     892 000042d0     1020          inc     A0
     893 000042e0           SkIncSlp:
     894 000042e0     afa1          movb    *A13(DEST_TAG),A1
         000042f0     01c0  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   22

     895 00004300     ca08          jrz     SkDst
     896 00004310     afa1          movb    *A13(DESTTIKS),A1
         00004320     01a8  
     897 00004330     50e1          and     A7,A1
     898 00004340     4401          sub     A0,A1
     899 00004350     cf01          jrnn    SkClrDT
     900 00004360     5621          clr     A1
     901 00004370           SkClrDT:
     902 00004370     ac2d          movb    A1,*A13(DESTTIKS)
         00004380     01a8  
     903                    
     904 00004390           SkDst:
     905 00004390     5621          clr     A1
     906 000043a0     ac2d          movb    A1,*A13(ANIMTIKS)
         000043b0     01a0  
     907 000043c0           SlpItX:
     908 000043c0     0960          rets
     909                    ****************************************************************************
     910                    
     911                    
     912                    *********************************  Pfire  **********************************
     913 000043d0           Pfire:
     914 000043d0     afa0          movb    *A13(DEST_TAG),A0
         000043e0     01c0  
     915 000043f0     0b40          cmpi    CHASE_T,A0
         00004400     fffa  
     916 00004410     cb0d          jrnz    SkScrTst
     917 00004420     07a2          MOVE    @SCRNTL,A2,L            ;GET SCREEN TOP LEFT
         00004430 00000000! 
     918 00004450     0b02          addi    60,A2
         00004460     003c  
     919 00004470     07a3          MOVE    @SCRNLR,A3,L            ;GET SCREEN LOWER RT.
         00004480 00000000! 
     920 000044a0     0d5f          calla   SCRTSTG
         000044b0 00000000! 
     921 000044d0     cb00          jrnz    PfireX
         000044e0     0155  
     922 000044f0           SkScrTst:
     923                    
     924                    ;* check if either player is on same Z in direction being faced.
     925 000044f0     5631          clr     B1                      ;set to P1's obj if he can be thrown at
     926 00004500     5652          clr     B2                      ;set to P2's obj if he can be thrown at
     927                    
     928                            ;* get PIMPs Z and FACING
     929 00004510     b502          move    *A8(OZPOS),A2,W                 ;A2 - pimps Z
         00004520     00d0  
     930 00004530     0d5f          calla   GETANIX
         00004540 00000000! 
     931 00004560     4c05          move    A0,A5                                   ;A5 - pimps X
     932 00004570     b503          move    *A8(OFLAGS),A3,W                        
         00004580     0100  
     933 00004590     09c4          movi    M_FLIPH,A4                              ;A4 - M_FLIPH
         000045a0     0010  
     934 000045b0     5083          and     A4,A3                                   ;A3 - pimps facing
     935                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   23

     936 000045c0     4c66          move    A3,A6                                   ;A6 - Temp of pimps facing
     937 000045d0     09ee          movi    P1DATA,A14
         000045e0 00000000! 
     938 00004600     b7c7          move    *A14(POBJ),A7,L                         ;A7 - Player 1 Obj
         00004610     00a0  
     939 00004620     ca2c          jrz     PFire2
     940 00004630     4d0a          move    A8,A10
     941 00004640     4ce8          move    A7,A8
     942 00004650     0d5f          calla   GETANIX
         00004660 00000000! 
     943 00004680     4c01          move    A0,A1                                   ;A1 - P1 X
     944 00004690     4d07          move    A8,A7
     945 000046a0     4d48          move    A10,A8
     946 000046b0     44a1          sub     A5,A1                                   ;A1 - P1 X - Pimp X
     947 000046c0     c101          jrp     SkNFace1
     948 000046d0     5686          xor     A4,A6   
     949 000046e0           SkNFace1:
     950 000046e0     5686          xor     A4,A6
     951 000046f0     ca1f          jrz     PFire2  ;Facing wrong way, can't shoot or throw at P1.
     952                    
     953 00004700     0381          abs     A1                                              ;A1 - abs X delta
     954 00004710     0b41          cmpi    25,A1
         00004720     ffe6  
     955 00004730     c41b          jrlt    PFire2  ;Too close, can't shoot at P1
     956                    
     957 00004740     0b41          cmpi    50,A1
         00004750     ffcd  
     958 00004760     c401          jrlt    SkSetT1 ;Too close, can't throw at P1
     959 00004770     4ee1          move    A7,B1
     960 00004780           SkSetT1:
     961                    
     962 00004780     2fc1          srl     2,A1
     963 00004790     b4e6          move    *A7(OZPOS),A6,W ;Check Range in Z for firing
         000047a0     00d0  
     964 000047b0     b5c0          move    *A14(PSWTCH),A0,W
         000047c0     00c0  
     965 000047d0     4e03          move    A0,B3
     966 000047e0     0b80          andi    PUP,A0
         000047f0 fffffffe  
     967 00004810     ca02          jrz     SkDecZV1
     968 00004820     4426          sub     A1,A6
     969 00004830     c005          jruc    SkIncZV1
     970 00004840           SkDecZV1:
     971 00004840     0b93          andi    PDOWN,B3
         00004850 fffffffd  
     972 00004870     ca01          jrz     SkIncZV1
     973 00004880     4026          add     A1,A6
     974 00004890           SkIncZV1:
     975 00004890     4446          sub     A2,A6
     976 000048a0     0386          abs     A6
     977 000048b0     0b46          cmpi    15,A6
         000048c0     fff0  
     978 000048d0     c600          jrle    LetErRip                ;Within Z, so shoot.
         000048e0     0095  
     979                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   24

     980 000048f0           PFire2:
     981 000048f0     4c66          move    A3,A6                                   ;A6 - Temp of pimps facing
     982 00004900     09ee          movi    P2DATA,A14
         00004910 00000000! 
     983 00004930     b7c7          move    *A14(POBJ),A7,L                         ;A7 - Player 2 Obj
         00004940     00a0  
     984 00004950     ca2a          jrz     NoFire
     985 00004960     4d0a          move    A8,A10
     986 00004970     4ce8          move    A7,A8
     987 00004980     0d5f          calla   GETANIX
         00004990 00000000! 
     988 000049b0     4c01          move    A0,A1                                   ;A1 - P2 X
     989 000049c0     4d07          move    A8,A7
     990 000049d0     4d48          move    A10,A8
     991 000049e0     44a1          sub     A5,A1                                   ;A1 - P2 X - Pimp X
     992 000049f0     c101          jrp     SkNFace2
     993 00004a00     5686          xor     A4,A6   
     994 00004a10           SkNFace2:
     995 00004a10     5686          xor     A4,A6
     996 00004a20     ca1d          jrz     NoFire  ;Facing wrong way, can't shoot or throw at P1.
     997                    
     998 00004a30     0381          abs     A1                                              ;A1 - abs X delta
     999 00004a40     0b41          cmpi    25,A1
         00004a50     ffe6  
    1000 00004a60     c419          jrlt    NoFire  ;Too close, can't shoot at P2
    1001                    
    1002 00004a70     0b41          cmpi    50,A1
         00004a80     ffcd  
    1003 00004a90     c401          jrlt    SkSetT2 ;Too close, can't throw at P2
    1004 00004aa0     4ee2          move    A7,B2
    1005 00004ab0           SkSetT2:
    1006                    
    1007 00004ab0     2fc1          srl     2,A1
    1008 00004ac0     b4e6          move    *A7(OZPOS),A6,W ;Check Range in Z for firing
         00004ad0     00d0  
    1009 00004ae0     b5c0          move    *A14(PSWTCH),A0,W
         00004af0     00c0  
    1010 00004b00     4e03          move    A0,B3
    1011 00004b10     0b80          andi    PUP,A0
         00004b20 fffffffe  
    1012 00004b40     ca01          jrz     SkDecZV
    1013 00004b50     4426          sub     A1,A6
    1014 00004b60           SkDecZV:
    1015 00004b60     0b93          andi    PDOWN,B3
         00004b70 fffffffd  
    1016 00004b90     ca01          jrz     SkIncZV
    1017 00004ba0     4026          add     A1,A6
    1018 00004bb0           SkIncZV:
    1019                    
    1020 00004bb0     4446          sub     A2,A6
    1021 00004bc0     0386          abs     A6
    1022 00004bd0     0b46          cmpi    15,A6
         00004be0     fff0  
    1023 00004bf0     c664          jrle    LetErRip                ;Within Z, so shoot.
    1024                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   25

    1025 00004c00           NoFire:
    1026                    ;* do we feel like throwing something?
    1027 00004c00     07e0          movb    @RAND,A0
         00004c10 00000000! 
    1028 00004c30     ce03          jrn     SkSwPs
    1029 00004c40                   SWAP    B1,B2
    1030 00004c70           SkSwPs:
    1031 00004c70     4e33          move    B1,A3
    1032 00004c80     cb02          jrnz    GotP
    1033 00004c90     4e53          move    B2,A3
    1034 00004ca0     ca57          jrz     NoThrow
    1035                    
    1036 00004cb0           GotP:
    1037 00004cb0     05a0          move    @pimpthr1,A0,W
         00004cc0 00000000! 
    1038 00004ce0     afa1          movb    *A13(HIDING),A1
         00004cf0     0180  
    1039 00004d00     ca03          jrz     TryThrw
    1040 00004d10     05a0          move    @pimpthr2,A0,W
         00004d20 00000000! 
    1041 00004d40           TryThrw:
    1042 00004d40     0d5f          calla   RANDPER
         00004d50 00000000! 
    1043 00004d70     c94a          jrnc    NoThrow
    1044                    
    1045                            ;** Throw a stick of dynamite ******
    1046 00004d80                   PUSHP   A3                      ;Push Player to throw at
    1047                    
    1048 00004d90     0d3f          callr   SlpItOff
         00004da0     ff4c  
    1049 00004db0     0d5f          calla   PRCSLP
         00004dc0 00000000! 
    1050                    
    1051 00004de0     b50a          move    *A8(OXVEL+8),A10,W         ;save velocities to be restored
         00004df0     0048  
    1052 00004e00     b50b          move    *A8(OYVEL+8),A11,W
         00004e10     0068  
    1053 00004e20     260b          sll     16,A11
    1054 00004e30     ef6a          movy    A11,A10
    1055 00004e40     0d5f          calla   ClrVel
         00004e50 00000000! 
    1056 00004e70     4d2b          move    A9,A11
    1057                    
    1058 00004e80     afa0          movb    *A13(DEST_TAG),A0
         00004e90     01c0  
    1059 00004ea0     0b40          cmpi    CHASE_T,A0
         00004eb0     fffa  
    1060 00004ec0     cb04          jrnz    NotChs1
    1061 00004ed0     09e9          movi    PRUNTW1,A9
         00004ee0 0000e110' 
    1062 00004f00     c003          jruc    GotTF1
    1063 00004f10           NotChs1:
    1064 00004f10     09e9          movi    PTW1,A9 
         00004f20 0000e010' 
    1065 00004f40           GotTF1:
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   26

    1066 00004f40     1821          movk    1,A1
    1067 00004f50                   jsrp    FRANIM
    1068 00004fc0                   PULLP   A4              ;Retrieve Player to Throw At
    1069 00004fe0     09e0          movi    000380000H,A0   ;y:x offsets
         00004ff0 00380000  
    1070 00005010     0d3f          callr   ThrowD
         00005020     034e  
    1071 00005030     afa0          movb    *A13(DEST_TAG),A0
         00005040     01c0  
    1072 00005050     0b40          cmpi    CHASE_T,A0
         00005060     fffa  
    1073 00005070     cb04          jrnz    NotChs2
    1074 00005080     09e9          movi    PRUNTW2,A9
         00005090 0000e170' 
    1075 000050b0     c003          jruc    GotTF2
    1076 000050c0           NotChs2:
    1077 000050c0     09e9          movi    PTW2,A9 
         000050d0 0000e060' 
    1078 000050f0           GotTF2:
    1079 000050f0     1821          movk    1,A1
    1080 00005100                   jsrp    FRANIM
    1081                    
    1082 00005170     4d69          move    A11,A9
    1083 00005180     ef4b          movy    A10,A11
    1084 00005190     2b0b          sra     8,A11
    1085 000051a0     260a          sll     16,A10
    1086 000051b0     2b0a          sra     8,A10
    1087 000051c0     b368          move    A11,*A8(OYVEL),L
         000051d0     0060  
    1088 000051e0     b368          move    A11,*A8(OZVEL),L
         000051f0     00e0  
    1089 00005200     b348          move    A10,*A8(OXVEL),L
         00005210     0040  
    1090                            
    1091 00005220           NoThrow:
    1092 00005220     c000          jruc    PfireX
         00005230     0080  
    1093                    
    1094 00005240           LetErRip:
    1095 00005240     0d3f          callr   SlpItOff
         00005250     ff01  
    1096 00005260     0d5f          calla   PRCSLP
         00005270 00000000! 
    1097                    ;* we are facing someone, so let's shoot em!
    1098 00005290     56e7          clr     A7                      ;Z delta
    1099 000052a0     b50a          move    *A8(OXVEL+8),A10,W
         000052b0     0048  
    1100 000052c0     b50b          move    *A8(OYVEL+8),A11,W
         000052d0     0068  
    1101 000052e0     260b          sll     16,A11
    1102 000052f0     ef6a          movy    A11,A10
    1103 00005300     0d5f          calla   ClrVel
         00005310 00000000! 
    1104                    
    1105 00005330     4d2b          move    A9,A11
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   27

    1106                            
    1107 00005340     afa0          movb    *A13(HIDING),A0
         00005350     0180  
    1108 00005360     ca2f          jrz     SkFirHid
    1109 00005370     b7a0          move    *A13(WANTOBJ),A0,L
         00005380     0220  
    1110 00005390     ca2c          jrz     SkFirHid                ;used to be $
    1111 000053a0     b400          move    *A0(OSIZEY),A0,W
         000053b0     0150  
    1112 000053c0     0b40          cmpi    40,A0
         000053d0     ffd7  
    1113 000053e0     c41f          jrlt    LowS
    1114 000053f0     0b40          cmpi    60,A0
         00005400     ffc3  
    1115 00005410     c420          jrlt    MedS
    1116                            ;* Shooting from tall obstacle (i.e. Dumpster)
    1117 00005420     09e9          movi    PSHOOT,A9
         00005430 0000dd60' 
    1118 00005450     07e0          movb    @RAND,A0
         00005460 00000000! 
    1119 00005480     1a27          movk    17,A7
    1120 00005490     ce01          jrn     SLft
    1121 000054a0     03a7          neg     A7
    1122 000054b0           SLft:
    1123 000054b0     b501          move    *A8(OZPOS),A1,W
         000054c0     00d0  
    1124 000054d0     40e1          add     A7,A1
    1125 000054e0     b028          move    A1,*A8(OZPOS),W
         000054f0     00d0  
    1126 00005500     b501          move    *A8(OYPOS),A1,W
         00005510     00b0  
    1127 00005520     40e1          add     A7,A1
    1128 00005530     b028          move    A1,*A8(OYPOS),W
         00005540     00b0  
    1129 00005550     b702          move    *A8(OSHAD),A2,L
         00005560     0240  
    1130 00005570     ca22          jrz     GotFF
    1131 00005580     b441          move    *A2(OYPOS),A1,W
         00005590     00b0  
    1132 000055a0     40e1          add     A7,A1
    1133 000055b0     b022          move    A1,*A2(OYPOS),W
         000055c0     00b0  
    1134 000055d0     c01c          jruc    GotFF
    1135 000055e0           LowS:
    1136 000055e0     09e9          movi    PHSQSHT,A9
         000055f0 0000d8f0' 
    1137 00005610     c018          jruc    GotFF
    1138 00005620           MedS:
    1139 00005620     09e9          movi    PHSHOOT,A9
         00005630 0000de90' 
    1140 00005650     c014          jruc    GotFF
    1141 00005660           SkFirHid:
    1142                    
    1143 00005660     afa0          movb    *A13(DEST_TAG),A0
         00005670     01c0  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   28

    1144 00005680     0b40          cmpi    CHASE_T,A0
         00005690     fffa  
    1145 000056a0     cb04          jrnz    NotChase
    1146 000056b0     09e9          movi    PRUNSHT,A9
         000056c0 0000df60' 
    1147 000056e0     c00b          jruc    GotFF
    1148 000056f0           NotChase:
    1149 000056f0     07e0          movb    @RAND,A0
         00005700 00000000! 
    1150 00005720     ce04          jrn     SqFire
    1151 00005730     09e9          movi    PSHOOT,A9
         00005740 0000dd60' 
    1152 00005760     c003          jruc    GotFF
    1153 00005770           SqFire:
    1154 00005770     09e9          movi    PSQSHT,A9
         00005780 0000d9c0' 
    1155 000057a0           GotFF:
    1156 000057a0                   PUSHP   A7                      ;Z delta
    1157 000057b0     1821          movk    1,A1
    1158 000057c0                   jsrp    FRANIM
    1159                    
    1160 00005830     4d69          move    A11,A9
    1161 00005840     ef4b          movy    A10,A11
    1162 00005850     2b0b          sra     8,A11
    1163 00005860     260a          sll     16,A10
    1164 00005870     2b0a          sra     8,A10
    1165 00005880     b368          move    A11,*A8(OYVEL),L
         00005890     0060  
    1166 000058a0     b368          move    A11,*A8(OZVEL),L
         000058b0     00e0  
    1167 000058c0     b348          move    A10,*A8(OXVEL),L
         000058d0     0040  
    1168 000058e0                   PULLP   A7                      ;Z delta
    1169 00005900     03a7          neg     A7
    1170 00005910     ca12          jrz     SkFRePos
    1171 00005920     b501          move    *A8(OZPOS),A1,W
         00005930     00d0  
    1172 00005940     40e1          add     A7,A1
    1173 00005950     b028          move    A1,*A8(OZPOS),W
         00005960     00d0  
    1174 00005970     b501          move    *A8(OYPOS),A1,W
         00005980     00b0  
    1175 00005990     40e1          add     A7,A1
    1176 000059a0     b028          move    A1,*A8(OYPOS),W
         000059b0     00b0  
    1177 000059c0     b702          move    *A8(OSHAD),A2,L
         000059d0     0240  
    1178 000059e0     ca05          jrz     SkFRePos
    1179 000059f0     b441          move    *A2(OYPOS),A1,W
         00005a00     00b0  
    1180 00005a10     40e1          add     A7,A1
    1181 00005a20     b022          move    A1,*A2(OYPOS),W
         00005a30     00b0  
    1182 00005a40           SkFRePos:
    1183                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   29

    1184 00005a40           PfireX:
    1185 00005a40                   retp
    1186                    ****************************************************************************
    1187                    
    1188                    **************************** Animation Cycler ******************************
    1189 00005a70           AnimCycle:
    1190                    ;Resets animation loop
    1191 00005a70     098f          mmtm    SP,A0
         00005a80     8000  
    1192 00005a90     afa0          movb    *A13(HIDING),A0
         00005aa0     0180  
    1193 00005ab0     ca41          jrz     SkHiding
    1194                    
    1195                            ;* Do hiding specific stuff.
    1196 00005ac0     0d3f          callr   HideXCk
         00005ad0     01fe  
    1197 00005ae0     c83e          jrc     SkHiding
    1198                    
    1199 00005af0     b7a0          move    *A13(WANTOBJ),A0,L
         00005b00     0220  
    1200 00005b10     b400          move    *A0(OSIZEY),A0,W
         00005b20     0150  
    1201 00005b30     0b40          cmpi    40,A0
         00005b40     ffd7  
    1202 00005b50     c41f          jrlt    LowH
    1203 00005b60     0b40          cmpi    60,A0
         00005b70     ffc3  
    1204 00005b80     c40e          jrlt    MedH
    1205                    
    1206                            ;* Hiding Behind a tall obstacle (i.e. Dumpster)
    1207 00005b90     09c0          movi    800,A0
         00005ba0     0320  
    1208 00005bb0     0d5f          calla   RANDPER
         00005bc0 00000000! 
    1209 00005be0     c904          jrnc    TalAct
    1210 00005bf0     09e9          movi    PTALHIDE,A9
         00005c00 0000e7c0' 
    1211 00005c20     c027          jruc    GotScr
    1212 00005c30           TalAct:
    1213 00005c30     09e9          movi    PTALLOOK,A9
         00005c40 0000e870' 
    1214 00005c60     c023          jruc    GotScr
    1215                            
    1216 00005c70           MedH:
    1217                            ;* Hiding Behind a tall obstacle (i.e. cans standing)
    1218 00005c70     09c0          movi    800,A0
         00005c80     0320  
    1219 00005c90     0d5f          calla   RANDPER
         00005ca0 00000000! 
    1220 00005cc0     c904          jrnc    MedAct
    1221 00005cd0     09e9          movi    PLOWHIDE,A9
         00005ce0 0000e920' 
    1222 00005d00     c019          jruc    GotScr
    1223 00005d10           MedAct:
    1224 00005d10     09e9          movi    PLOWLOOK,A9
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   30

         00005d20 0000e9d0' 
    1225 00005d40     c015          jruc    GotScr
    1226                    
    1227 00005d50           LowH:
    1228                            ;* Hiding Behind a low obstacle (i.e. can on side)
    1229 00005d50     09c0          movi    700,A0
         00005d60     02bc  
    1230 00005d70     0d5f          calla   RANDPER
         00005d80 00000000! 
    1231 00005da0     c904          jrnc    LowAct
    1232 00005db0     09e9          movi    PKNEEL,A9
         00005dc0 0000e4c0' 
    1233 00005de0     c00b          jruc    GotScr
    1234 00005df0           LowAct:
    1235 00005df0     07e0          movb    @RAND,A0
         00005e00 00000000! 
    1236 00005e20     ce04          jrn     Lk2     
    1237 00005e30     09e9          movi    PKNEELK,A9
         00005e40 0000e6b0' 
    1238 00005e60     c003          jruc    GotScr
    1239 00005e70           Lk2:
    1240 00005e70     09e9          movi    PKLOOK,A9
         00005e80 0000e5a0' 
    1241                    
    1242 00005ea0           GotScr:
    1243 00005ea0     b32d          move    A9,*A13(ANIMPTR),L
         00005eb0     0120  
    1244 00005ec0     c002          jruc    ACycleX
    1245                    
    1246 00005ed0           SkHiding:
    1247 00005ed0     b7a9          move    *A13(ANIMPTR),A9,L
         00005ee0     0120  
    1248 00005ef0           ACycleX:
    1249 00005ef0     09af          mmfm    SP,A0
         00005f00     0001  
    1250 00005f10     0960          rets
    1251                    ****************************************************************************
    1252                    
    1253                    ******************************  AT ESCAPE  *********************************
    1254 00005f20           AtEscape:
    1255                    ;* If off screen, we have escaped..
    1256 00005f20     0d5f          calla   SCRTST                  ;OFFSCREEN?
         00005f30 00000000! 
    1257 00005f50     cb00          jrnz    PIMP_DONE
         00005f60     0577  
    1258 00005f70                   retp
    1259                    ****************************************************************************
    1260                    
    1261                    ******************************  AT HIDE  ***********************************
    1262 00005fa0           AtHide:
    1263                    ;* Check if we are now hidden
    1264 00005fa0     0d3f          callr   P_HIDDEN
         00005fb0     04f0  
    1265 00005fc0     c90d          jrnc    AtHideX
    1266 00005fd0     0d5f          calla   ClrVel
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   31

         00005fe0 00000000! 
    1267 00006000     b7a0          move    *A13(WANTOBJ),A0,L
         00006010     0220  
    1268 00006020     0d5f          calla   FACEOBJ
         00006030 00000000! 
    1269 00006050     09e9          movi    PKNEELK,A9      
         00006060 0000e6b0' 
    1270 00006080     b32d          move    A9,*A13(ANIMPTR),L
         00006090     0120  
    1271 000060a0           AtHideX:
    1272 000060a0     0960          rets
    1273                    ****************************************************************************
    1274                    
    1275                    ******************************  AT DEFAULT  ********************************
    1276 000060b0           AtDflt:
    1277                    ;* If off screen, turn around and go other way
    1278 000060b0     0d3f          callr   P_XCHECK
         000060c0     017e  
    1279 000060d0     0960          rets
    1280                    ****************************************************************************
    1281                    
    1282                    ******************************  Check Evade  *******************************
    1283 000060e0           CkEvade:
    1284                            ;* If too far off screen don't bother evading..
    1285 000060e0     07a2          MOVE    @SCRNTL,A2,L            ;GET SCREEN TOP LEFT
         000060f0 00000000! 
    1286 00006110     0b02          addi    40,A2
         00006120     0028  
    1287 00006130     07a3          MOVE    @SCRNLR,A3,L            ;GET SCREEN LOWER RT.
         00006140 00000000! 
    1288 00006160     0b03          addi    40,A3
         00006170     0028  
    1289 00006180     0d5f          calla   SCRTSTG
         00006190 00000000! 
    1290 000061b0     cb46          jrnz    EvadeX
    1291                    
    1292 000061c0     0d5f          calla   ClosestP
         000061d0 00000000! 
    1293 000061f0     4d01          move    A8,A1
    1294 00006200     4c08          move    A0,A8
    1295 00006210     0d5f          calla   GETANIX
         00006220 00000000! 
    1296 00006240     4c02          move    A0,A2
    1297 00006250                   SWAP    A8,A1
    1298 00006280     0d5f          calla   GETANIX
         00006290 00000000! 
    1299 000062b0     4402          sub     A0,A2
    1300 000062c0     0382          abs     A2
    1301 000062d0     0b42          cmpi    60,A2
         000062e0     ffc3  
    1302 000062f0     c732          jrgt    EvadeX
    1303                    
    1304 00006300     b420          move    *A1(OZPOS),A0           ;if too far away in Z don't evade
         00006310     00d0  
    1305 00006320     b503          move    *A8(OZPOS),A3
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   32

         00006330     00d0  
    1306 00006340     4403          sub     A0,A3
    1307 00006350     0383          abs     A3
    1308 00006360     0b43          cmpi    45,A3
         00006370     ffd2  
    1309 00006380     c729          jrgt    EvadeX
    1310 00006390     0b43          cmpi    12,A3
         000063a0     fff3  
    1311 000063b0     c706          jrgt    SkMwk
    1312 000063c0     0b42          cmpi    45,A2
         000063d0     ffd2  
    1313 000063e0     c403          jrlt    SkMwk
    1314 000063f0     0d3f          callr   GoMWalk
         00006400     fba5  
    1315 00006410     c013          jruc    FleeDir
    1316 00006420           SkMwk:
    1317 00006420     0b42          cmpi    35,A2
         00006430     ffdc  
    1318 00006440     c710          jrgt    SkJump
    1319 00006450     0b42          cmpi    25,A2
         00006460     ffe6  
    1320 00006470     c40d          jrlt    SkJump
    1321 00006480     0b43          cmpi    25,A3
         00006490     ffe6  
    1322 000064a0     c70a          jrgt    SkJump
    1323 000064b0     afa0          movb    *A13(BUSTTIKS),A0
         000064c0     01b8  
    1324 000064d0     cb07          jrnz    SkJump
    1325                    ;       PUSHP   A1
    1326 000064e0                   jsrp    JmpAway
    1327                    ;       PULLP   A1
    1328 00006550           SkJump:
    1329                    
    1330                            ;* player is too close - RUN AWAY!!
    1331 00006550           FleeDir:
    1332 00006550     0d3f          callr   GoRun
         00006560     fbb5  
    1333 00006570     0d5f          calla   Flee
         00006580 00000000! 
    1334 000065a0     19e0          movk    BUST_T,A0
    1335 000065b0     ac0d          movb    A0,*A13(DEST_TAG)
         000065c0     01c0  
    1336 000065d0     5600          clr     A0
    1337 000065e0     b20d          move    A0,*A13(WANTOBJ),L
         000065f0     0220  
    1338 00006600     ac0d          movb    A0,*A13(ANIMTIKS)
         00006610     01a0  
    1339 00006620           EvadeX:
    1340 00006620                   retp
    1341                    **************************************************************************
    1342                    
    1343                    ***************************  CHECK ESCAPE  *********************************
    1344 00006650           CkEscape:
    1345                    ;* If Pimp has 3 or more dollars, he will try to run away...
    1346 00006650     afa0          movb    *A13(EBUCK),A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   33

         00006660     0140  
    1347 00006670     0b40          cmpi    3,A0
         00006680     fffc  
    1348 00006690     c41d          jrlt    NoEsc
    1349 000066a0     0d3f          callr   GoRun
         000066b0     fba0  
    1350 000066c0     05a1          move    @(WORLDTLX+16),A1,W
         000066d0 00000010! 
    1351 000066f0     4c23          move    A1,A3
    1352 00006700     0be3          subi    100,A3
         00006710     ff9b  
    1353 00006720     b502          move    *A8(OXPOS),A2,W
         00006730     0090  
    1354 00006740     4422          sub     A1,A2
    1355 00006750     0b42          cmpi    255,A2
         00006760     ff00  
    1356 00006770     c402          jrlt    RunAway
    1357 00006780     0b03          addi    612,A3
         00006790     0264  
    1358 000067a0           RunAway:
    1359 000067a0     b501          move    *A8(OZPOS),A1,W 
         000067b0     00d0  
    1360 000067c0     2601          sll     16,A1
    1361 000067d0     ec61          movx    A3,A1
    1362 000067e0     b22d          move    A1,*A13(DEST),L
         000067f0     01e0  
    1363 00006800     0d5f          calla   GoDestV
         00006810 00000000! 
    1364                            
    1365 00006830     09c0          movi    ESCAPE_T,A0
         00006840     0006  
    1366 00006850     ac0d          movb    A0,*A13(DEST_TAG)
         00006860     01c0  
    1367 00006870           NoEsc:
    1368 00006870     0960          rets
    1369                    ****************************************************************************
    1370                    
    1371                    *****************************  CHECK Buck  *********************************
    1372                    ;* look and see if any bucks are available for grabbing.
    1373 00006880           CkBuck:
    1374 00006880     09e0          movi    BUCKOID,A0
         00006890 00008010  
    1375 000068b0     0d5f          calla   NEAR_BTY
         000068c0 00000000! 
    1376 000068e0     c91f          jrnc    NoBuck
    1377                    
    1378 000068f0     098f          mmtm    SP,A8   
         00006900     0080  
    1379 00006910     4c08          move    A0,A8
    1380 00006920     0d5f          calla   SCRTST  
         00006930 00000000! 
    1381 00006950     09af          mmfm    SP,A8
         00006960     0100  
    1382 00006970     cb16          jrnz    NoBuck
    1383                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   34

    1384 00006980     0d3f          callr   GoRun
         00006990     fb72  
    1385 000069a0     b20d          move    A0,*A13(WANTOBJ),L
         000069b0     0220  
    1386 000069c0     0d5f          calla   HuntObj
         000069d0 00000000! 
    1387 000069f0     b5a0          move    *A13(DEST+16),A0,W       ;* need to inc z dest
         00006a00     01f0  
    1388 00006a10     10a0          addk    BUCKHGHT,A0
    1389 00006a20     b00d          move    A0,*A13(DEST+16),W
         00006a30     01f0  
    1390                            
    1391 00006a40     1b20          movk    25,A0
    1392 00006a50     0d5f          calla   ShortXDest
         00006a60 00000000! 
    1393                    
    1394 00006a80     0d5f          calla   GoDestV
         00006a90 00000000! 
    1395                    
    1396 00006ab0     1880          movk    BUCK_T,A0
    1397 00006ac0     ac0d          movb    A0,*A13(DEST_TAG)
         00006ad0     01c0  
    1398 00006ae0           NoBuck:
    1399 00006ae0     0960          rets
    1400                    ****************************************************************************
    1401                    
    1402                    *****************************  CHECK Hide  *********************************
    1403                    ;* look and see if any objects are available to hide behind
    1404 00006af0           CkHide:
    1405                    ;* Check if any obstacle is suitable for hiding behind,
    1406                    ;*   both Players X coors are on opposite side of Obj from the enemy
    1407                    ;*      Try and use object in WANTOBJ first
    1408                    ;* If there is a suitable object,
    1409                    ;*      set WANTOBJ to be the object
    1410                    ;*      set DEST to be coors of object
    1411                    ;*      call    GoDest to set Path
    1412                    ;*      set animation script to PRUN
    1413                    ;*      set     the carry bit
    1414                    
    1415 00006af0     098f          mmtm    SP,A8
         00006b00     0080  
    1416 00006b10     0d5f          calla   GETANIX
         00006b20 00000000! 
    1417 00006b40     4c01          move    A0,A1                   ;A1 - PIMPx
    1418                    
    1419                            ;* If not on scr, don't try to hide
    1420 00006b50     05a2          move    @WORLDTL,A2,W
         00006b60 00000000! 
    1421 00006b80     4440          sub     A2,A0                   ;SUBTRACT OUT WORLD BASE
    1422                    
    1423 00006b90     05a2          move    @SCRNTL,A2,W            ;GET SCREEN LEFT
         00006ba0 00000000! 
    1424 00006bc0     4840          cmp     A2,A0                   ;OFF Left Edge?
    1425 00006bd0     c475          jrlt    NO_HIDE
    1426                    ;       move    @SCRNLR,A2,W            ;GET SCREEN RT.
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   35

    1427                    ;       cmp     A2,A0                   ;OFF RT Edge?
    1428                    ;       jrgt    NO_HIDE
    1429                    
    1430 00006be0     4c27          move    A1,A7                   ;A7 - Also PIMPx
    1431                    
    1432                    ;* if between players goto NO_HIDE
    1433 00006bf0     09e0          movi    P1DATA,A0
         00006c00 00000000! 
    1434 00006c20     b608          move    *A0(POBJ),A8,L
         00006c30     00a0  
    1435 00006c40     ca25          jrz     NO_P1
    1436 00006c50     b505          move    *A8(OZPOS),A5,W
         00006c60     00d0  
    1437 00006c70     0d5f          calla   GETANIX
         00006c80 00000000! 
    1438 00006ca0     4c02          move    A0,A2                   ;A2 - P1x
    1439 00006cb0     09e0          movi    P2DATA,A0
         00006cc0 00000000! 
    1440 00006ce0     b608          move    *A0(POBJ),A8,L
         00006cf0     00a0  
    1441 00006d00     ca25          jrz     HScanObj
    1442 00006d10     b506          move    *A8(OZPOS),A6,W
         00006d20     00d0  
    1443 00006d30     0d5f          calla   GETANIX
         00006d40 00000000! 
    1444 00006d60     4c03          move    A0,A3                   ;A3 - P2x
    1445                    
    1446                    ;* Got Both players X, if between them goto NO_HIDE
    1447 00006d70     4822          cmp     A1,A2
    1448 00006d80     c403          jrlt    P1ONLEFT        
    1449                    
    1450                            ;* P1 is on the right, if P2 on left goto NO_HIDE
    1451 00006d90     4823          cmp     A1,A3
    1452 00006da0     c658          jrle    NO_HIDE
    1453 00006db0     c002          jruc    CAN_HIDE          ;* both players on the right
    1454                    
    1455 00006dc0           P1ONLEFT:
    1456                            ;* P1 is on the left, if P2 on right goto NO_HIDE
    1457 00006dc0     4823          cmp     A1,A3
    1458 00006dd0     c555          jrge    NO_HIDE
    1459                    
    1460                    ;* both players on same side pick closest - put X in A2, Z in A5
    1461 00006de0           CAN_HIDE:
    1462 00006de0     4823          cmp     A1,A3
    1463 00006df0     c405          jrlt    P2ONLEFT
    1464                            ;* players on right, which has smaller X
    1465 00006e00     4843          cmp     A2,A3
    1466 00006e10     c714          jrgt    HScanObj
    1467 00006e20     4c62          move    A3,A2   
    1468 00006e30     4cc5          move    A6,A5
    1469 00006e40     c011          jruc    HScanObj
    1470 00006e50           P2ONLEFT:
    1471                            ;* players on left, which has greater X
    1472 00006e50     4843          cmp     A2,A3
    1473 00006e60     c40f          jrlt    HScanObj
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   36

    1474 00006e70     4c62          move    A3,A2   
    1475 00006e80     4cc5          move    A6,A5
    1476 00006e90     c00c          jruc    HScanObj
    1477                    
    1478 00006ea0           NO_P1:
    1479                    ;* no player1, if player2 scan against him
    1480 00006ea0     09e0          movi    P2DATA,A0
         00006eb0 00000000! 
    1481 00006ed0     b608          move    *A0(POBJ),A8,L
         00006ee0     00a0  
    1482 00006ef0     ca43          jrz     NO_HIDE
    1483 00006f00     b505          move    *A8(OZPOS),A5,W
         00006f10     00d0  
    1484 00006f20     0d5f          calla   GETANIX
         00006f30 00000000! 
    1485 00006f50     4c02          move    A0,A2                   ;A2 - P2x
    1486                    
    1487 00006f60           HScanObj:
    1488                    ;* playerX in A2, PIMPx in A1, want bigger X in A2
    1489 00006f60     4841          cmp     A2,A1
    1490 00006f70     ca3b          jreq    NO_HIDE
    1491 00006f80     c402          jrlt    HNOSWAP
    1492 00006f90     4c41          move    A2,A1
    1493 00006fa0     4ce2          move    A7,A2
    1494 00006fb0           HNOSWAP:
    1495 00006fb0     b7a0          move    *A13(WANTOBJ),A0,L
         00006fc0     0220  
    1496 00006fd0     ca13          jrz     HLoadLst
    1497 00006fe0     0d3f          callr   HIDEOBJ
         00006ff0     044d  
    1498 00007000     c910          jrnc    HLoadLst
    1499                    
    1500 00007010     4c04          move    A0,A4           ;* GotHobj will look for Obj in A4
    1501                    ;* check if A1 < ObjX < A2
    1502 00007020     b480          move    *A4(OXPOS),A0,W ;A0 - OBJx
         00007030     0090  
    1503 00007040     b486          move    *A4(OSIZEX),A6,W
         00007050     0140  
    1504 00007060     2fe6          srl     1,A6
    1505 00007070     4006          add     A0,A6
    1506                    
    1507 00007080     4826          cmp     A1,A6
    1508 00007090     c607          jrle    HLoadLst
    1509 000070a0     4846          cmp     A2,A6
    1510 000070b0     c505          jrge    HLoadLst
    1511                    
    1512 000070c0     4c88          move    A4,A8
    1513 000070d0     0d5f          calla   SCRTST  
         000070e0 00000000! 
    1514 00007100     ca26          jreq    GotHObj
    1515                    
    1516 00007110           HLoadLst:
    1517 00007110     07a4          move    @BACKSLST,A4,L
         00007120 00000000! 
    1518 00007140     ca1e          jrz     NO_HIDE
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   37

    1519 00007150           HScanLp:
    1520                    ;* check if A1 < ObjX < A2
    1521 00007150     b480          move    *A4(OXPOS),A0,W ;A0 - OBJx
         00007160     0090  
    1522 00007170     b486          move    *A4(OSIZEX),A6,W
         00007180     0140  
    1523 00007190     2fe6          srl     1,A6
    1524 000071a0     4006          add     A0,A6
    1525 000071b0     4826          cmp     A1,A6
    1526 000071c0     c611          jrle    HScanX
    1527 000071d0     4846          cmp     A2,A6
    1528 000071e0     c70f          jrgt    HScanX
    1529 000071f0     1860          movk    3,A0
    1530 00007200     0d5f          calla   RANDU
         00007210 00000000! 
    1531 00007230     1420          dec     A0
    1532 00007240     cb09          jrnz    HScanX
    1533 00007250     4c80          move    A4,A0
    1534 00007260     0d3f          callr   HIDEOBJ
         00007270     0425  
    1535 00007280     c905          jrnc    HScanX
    1536 00007290     4c88          move    A4,A8
    1537 000072a0     0d5f          calla   SCRTST  
         000072b0 00000000! 
    1538 000072d0     ca09          jreq    GotHObj
    1539 000072e0           HScanX:
    1540 000072e0     b684          move    *A4(OSLINK),A4,L
         000072f0     0020  
    1541 00007300     cbe4          jrnz    HScanLp
    1542                            
    1543 00007310     b28d          move    A4,*A13(WANTOBJ),L
         00007320     0220  
    1544 00007330           NO_HIDE:
    1545 00007330     09af          mmfm    SP,A8
         00007340     0100  
    1546 00007350     0320          clrc
    1547 00007360     0960          rets
    1548                    
    1549 00007370           GotHObj:
    1550 00007370     09af          mmfm    SP,A8
         00007380     0100  
    1551 00007390     0d3f          callr   GoRun
         000073a0     fad1  
    1552 000073b0     b28d          move    A4,*A13(WANTOBJ),L
         000073c0     0220  
    1553                    
    1554                            ;* set COORS of Dest.
    1555 000073d0     b481          move    *A4(OSIZEX),A1,W
         000073e0     0140  
    1556 000073f0     2fe1          srl     1,A1
    1557 00007400     11e1          addk    15,A1
    1558 00007410     44c7          sub     A6,A7                   ;A7 should still be x coor of pimp
    1559 00007420     ce02          jrn     LeftSide
    1560                            ;** Approaching right side of object
    1561 00007430     4026          add     A1,A6
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   38

    1562 00007440     c001          jruc    SkLftS
    1563 00007450           LeftSide:
    1564 00007450     4426          sub     A1,A6
    1565 00007460           SkLftS:
    1566 00007460     4c80          move    A4,A0
    1567 00007470     0d5f          calla   GetMidZ
         00007480 00000000! 
    1568 000074a0     2600          sll     16,A0
    1569 000074b0     ecc0          movx    A6,A0
    1570 000074c0     b20d          move    A0,*A13(DEST),L
         000074d0     01e0  
    1571                    
    1572 000074e0     0d5f          calla   GoDestV
         000074f0 00000000! 
    1573                            
    1574 00007510     09c0          movi    HIDE_T,A0
         00007520     0003  
    1575 00007530     ac0d          movb    A0,*A13(DEST_TAG)
         00007540     01c0  
    1576                    
    1577 00007550     0de0          setc
    1578 00007560     0960          rets
    1579                    ****************************************************************************
    1580                    
    1581                    
    1582                    ***********************  DEFAULT DESTINATION  ******************************
    1583 00007570           DfltDest:
    1584                    ;* Head for far edge of screen
    1585                    
    1586                            ;* check if Pimp is off screen
    1587                    ;       callr   P_XCHECK
    1588                    ;       jrnc    SkOffScr
    1589                    ;       callr   GoRun
    1590                    ;       jruc    GotSpeed
    1591                    ;SkOffScr:
    1592 00007570     0d3f          callr   GoWalk
         00007580     fa67  
    1593 00007590           GotSpeed:
    1594 00007590     0d5f          calla   GETANIX
         000075a0 00000000! 
    1595 000075c0     05a2          move    @(WORLDTLX+16),A2,W                              
         000075d0 00000010! 
    1596 000075f0     4c43          move    A2,A3
    1597 00007600     0b03          addi    50,A3
         00007610     0032  
    1598 00007620     4860          cmp     A3,A0
    1599 00007630     c40f          jrlt    GoRgt
    1600 00007640     0b03          addi    462,A3
         00007650     01ce  
    1601 00007660     4860          cmp     A3,A0
    1602 00007670     c70e          jrgt    GoLft
    1603                    
    1604 00007680     b501          move    *A8(OFLAGS),A1,W
         00007690     0100  
    1605 000076a0     09c0          movi    400,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   39

         000076b0     0190  
    1606 000076c0     0d5f          calla   RANDPER
         000076d0 00000000! 
    1607 000076f0     c901          jrnc    SkChngD
    1608 00007700     03e1          not     A1
    1609 00007710           SkChngD:
    1610 00007710     1f61          btst    B_FLIPH,A1
    1611 00007720     cb03          jrnz    GoLft
    1612 00007730           GoRgt:
    1613 00007730     0b02          addi    482,A2
         00007740     01e2  
    1614 00007750     c001          jruc    GotDfltX
    1615 00007760           GoLft:
    1616 00007760     13c2          addk    30,A2   
    1617                            
    1618 00007770           GotDfltX:
    1619 00007770     05b0          move    @PLZMIN,B0
         00007780 00000000! 
    1620 000077a0     05b1          move    @PLZMAX,B1
         000077b0 00000000! 
    1621 000077d0     0d5f          calla   RANGRAND
         000077e0 00000000! 
    1622 00007800     2600          sll     16,A0
    1623 00007810     ec40          movx    A2,A0
    1624 00007820     b20d          move    A0,*A13(DEST),L
         00007830     01e0  
    1625 00007840     0d5f          calla   GoDestV
         00007850 00000000! 
    1626                    
    1627 00007870     1820          movk    DFLT_T,A0
    1628 00007880     ac0d          movb    A0,*A13(DEST_TAG)
         00007890     01c0  
    1629                    
    1630 000078a0     0960          rets
    1631                    ****************************************************************************
    1632                    
    1633                    **************************************************************************
    1634 000078b0           P_XCHECK:
    1635                    ;* returns dist off screen in A0
    1636 000078b0     b500          move    *A8(OXPOS),A0,W
         000078c0     0090  
    1637 000078d0     05a1          move    @WORLDTL,A1,W
         000078e0 00000000! 
    1638 00007900     4420          sub     A1,A0                   ;SUBTRACT OUT WORLD BASE
    1639                    
    1640 00007910     05a2          move    @SCRNLR,A2,W            ;GET SCREEN RT.
         00007920 00000000! 
    1641 00007940     4840          cmp     A2,A0                   ;IS IT PAST THE RT?
    1642 00007950     c70a          jrgt    OffRite
    1643                    
    1644 00007960     05a2          move    @SCRNTL,A2,W            ;GET SCREEN LEFT
         00007970 00000000! 
    1645 00007990     b501          move    *A8(OSIZE),A1,W
         000079a0     0140  
    1646 000079b0     4020          add     A1,A0                   ;RIGHT EDGE OF OBJECT
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   40

    1647 000079c0     4840          cmp     A2,A0
    1648 000079d0     c408          jrlt    OffLeft
    1649 000079e0     0320          clrc
    1650 000079f0     0960          rets
    1651                    
    1652 00007a00           OffRite:
    1653 00007a00     4440          sub     A2,A0
    1654 00007a10     0d5f          calla   T_YFLP
         00007a20 00000000! 
    1655 00007a40     0de0          setc
    1656 00007a50     0960          rets
    1657                    
    1658 00007a60           OffLeft:
    1659 00007a60     4440          sub     A2,A0
    1660 00007a70     0d5f          calla   T_NOYFLP
         00007a80 00000000! 
    1661 00007aa0     0de0          setc
    1662 00007ab0     0960          rets
    1663                    **************************************************************************
    1664                    
    1665                    **************************************************************************
    1666 00007ac0           HideXCk:
    1667                    ;* called when pimp is hiding. 
    1668                    ;* If pimp gets to far off the screen, he will quit hiding.
    1669 00007ac0     b500          move    *A8(OXPOS),A0,W
         00007ad0     0090  
    1670 00007ae0     05a1          move    @WORLDTL,A1,W
         00007af0 00000000! 
    1671 00007b10     4420          sub     A1,A0                   ;SUBTRACT OUT WORLD BASE
    1672                    
    1673                    ;       move    @SCRNLR,A2,W            ;GET SCREEN RT.
    1674                    ;       addi    100,A2
    1675                    ;       cmp     A2,A0                   ;IS IT PAST THE RT?
    1676                    ;       jrgt    OffScr
    1677                    
    1678 00007b20     05a2          move    @SCRNTL,A2,W            ;GET SCREEN LEFT
         00007b30 00000000! 
    1679 00007b50     0be2          subi    100,A2
         00007b60     ff9b  
    1680 00007b70     b501          move    *A8(OSIZE),A1,W
         00007b80     0140  
    1681 00007b90     4001          add     A0,A1                   ;RIGHT EDGE OF OBJECT
    1682 00007ba0     4841          cmp     A2,A1
    1683 00007bb0     c402          jrlt    OffScr
    1684 00007bc0     0320          clrc
    1685 00007bd0     0960          rets
    1686                    
    1687 00007be0           OffScr:
    1688 00007be0     5600          clr     A0
    1689 00007bf0     b20d          move    A0,*A13(WANTOBJ),L
         00007c00     0220  
    1690 00007c10     0de0          setc
    1691 00007c20     0960          rets
    1692                    **************************************************************************
    1693                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   41

    1694                    ****************************  Grab Buck  *********************************
    1695 00007c30           GrabBuck:
    1696 00007c30     b7a0          move    *A13(WANTOBJ),A0,L
         00007c40     0220  
    1697 00007c50     ca5c          jrz     GRABX
    1698                    ;* If ENEMY Z and OBJ Z don't match, can't grab
    1699 00007c60           GrabLp:
    1700 00007c60                   jsrp    TRYBUST
    1701 00007cd0     c854          jrc     GRABX
    1702 00007ce0     b7a0          move    *A13(WANTOBJ),A0,L
         00007cf0     0220  
    1703 00007d00     0d3f          callr   GrabPOk
         00007d10     005b  
    1704 00007d20     c956          jrnc    NOGRAB
    1705                    
    1706 00007d30           GRABIT:
    1707 00007d30     07a1          move    @BOOTY,A1,L
         00007d40 00000000! 
    1708 00007d60     0d5f          calla   ON_SLIST
         00007d70 00000000! 
    1709 00007d90     c801          jrc     DOGRAB
    1710 00007da0     c047          jruc    GRABX
    1711 00007db0           DOGRAB:
    1712 00007db0     4c0a          move    A0,A10
    1713 00007dc0     0d5f          calla   FACEOBJ
         00007dd0 00000000! 
    1714 00007df0     09e9          movi    PREACH1,A9
         00007e00 0000e330' 
    1715 00007e20     0d5f          calla   ClrVel
         00007e30 00000000! 
    1716 00007e50     1821          movk    1,A1
    1717 00007e60                   jsrp    FRANIM
    1718                            
    1719 00007ed0     4d40          move    A10,A0
    1720 00007ee0     07a1          move    @BOOTY,A1,L
         00007ef0 00000000! 
    1721 00007f10     0d5f          calla   ON_SLIST
         00007f20 00000000! 
    1722 00007f40     c92d          jrnc    GRABX
    1723 00007f50     0d3f          callr   GrabPOk
         00007f60     0036  
    1724 00007f70     c92a          jrnc    GRABX
    1725 00007f80     b740          move    *A10(OPLINK),A0,L
         00007f90     01f0  
    1726 00007fa0     ca06          jrz     NoBtyPrc
    1727 00007fb0     0d5f          calla   KILL
         00007fc0 00000000! 
    1728 00007fe0     5600          clr     A0
    1729 00007ff0     b20a          move    A0,*A10(OPLINK),L
         00008000     01f0  
    1730 00008010           NoBtyPrc:
    1731 00008010     4d40          move    A10,A0
    1732 00008020     09e1          movi    BOOTY,A1
         00008030 00000000! 
    1733 00008050     0d5f          calla   DELSUPP                 ;DELETE FROM THE SUPPLEMENTAL LIST
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   42

         00008060 00000000! 
    1734 00008080     0d5f          calla   DELOBJ                  ;ZAP IT
         00008090 00000000! 
    1735 000080b0     afa0          movb    *A13(EBUCK),A0
         000080c0     0140  
    1736 000080d0     1020          inc     A0
    1737 000080e0     ac0d          movb    A0,*A13(EBUCK)
         000080f0     0140  
    1738                    
    1739 00008100     09e9          movi    PREACH2,A9
         00008110 0000e440' 
    1740 00008130     1821          movk    1,A1
    1741 00008140                   jsrp    FRANIM
    1742                    
    1743 000081b0     09e0          movi    BUCKOID,A0
         000081c0 00008010  
    1744 000081e0     0d5f          calla   NEAR_BTY
         000081f0 00000000! 
    1745 00008210     c8a4          jrc     GrabLp
    1746                    
    1747 00008220           GRABX:
    1748 00008220     5600          clr     A0
    1749 00008230     b20d          move    A0,*A13(WANTOBJ),L
         00008240     0220  
    1750 00008250     0de0          setc
    1751 00008260                   retp
    1752 00008290           NOGRAB:
    1753 00008290     0320          clrc
    1754 000082a0                   retp
    1755                    **************************************************************************
    1756                    
    1757                    **************************************************************************
    1758 000082d0           GrabPOk:
    1759                    ;are coors of obj-A0 close enough to obj-A8 for grabbin
    1760                    ;return setc if so, else clrc
    1761 000082d0     b401          move    *A0(OZPOS),A1,W
         000082e0     00d0  
    1762 000082f0     10a1          addk    BUCKHGHT,A1
    1763 00008300     b502          move    *A8(OZPOS),A2,W
         00008310     00d0  
    1764 00008320     4c23          move    A1,A3
    1765 00008330     4443          sub     A2,A3
    1766 00008340     0383          abs     A3
    1767 00008350     0b43          cmpi    6,A3
         00008360     fff9  
    1768 00008370     c717          jrgt    FARGRAB
    1769                    
    1770                    ;* Check X distance
    1771 00008380     b402          move    *A0(OXPOS),A2,W  
         00008390     0090  
    1772 000083a0     b403          move    *A0(OSIZEX),A3,W 
         000083b0     0140  
    1773 000083c0     2fe3          srl     1,A3
    1774 000083d0     4062          add     A3,A2   ;A2 - objx
    1775 000083e0     4c01          move    A0,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   43

    1776 000083f0     0d5f          calla   GETANIX
         00008400 00000000! 
    1777 00008420                   SWAP    A1,A0   ;A1 - enemyx
    1778 00008450     4422          sub     A1,A2   ;A2 - distance apart
    1779 00008460     0382          abs     A2
    1780 00008470     0b42          cmpi    5,A2
         00008480     fffa  
    1781 00008490     c405          jrlt    FARGRAB
    1782 000084a0     0b42          cmpi    35,A2
         000084b0     ffdc  
    1783 000084c0     c702          jrgt    FARGRAB
    1784                    
    1785 000084d0     0de0          setc
    1786 000084e0     0960          rets
    1787                    
    1788 000084f0           FARGRAB:
    1789 000084f0     0320          clrc
    1790 00008500     0960          rets
    1791                    **************************************************************************
    1792                    
    1793                    
    1794                    **************************************************************************
    1795 00008510           ThrowD:
    1796                    ;* Parms
    1797                    ;       A0 - packed Y:X offsets from throw frame anim pt
    1798                    ;       A4 - ptr to targets obj.
    1799 00008510     4e00          move    A0,B0
    1800 00008520     05a0          move    @pimpfbal,A0,W
         00008530 00000000! 
    1801 00008550     0d5f          calla   RANDPER
         00008560 00000000! 
    1802 00008580     c87c          jrc     ThrowD2         ;throw a fast ball
    1803                    
    1804                            ;* dispatch a dynamite stick
    1805 00008590     09c1          MOVI    0EDh,A1
         000085a0     00ed  
    1806 000085b0     09e7          MOVI    dynamite,A7
         000085c0 00000000! 
    1807 000085e0     0d5f          CALLA   GETPRC
         000085f0 00000000! 
    1808 00008610     ca72          jrz     SkDyn
    1809 00008620     4c07          move    A0,A7
    1810                    
    1811 00008630     b500          move    *A8(OXPOS),A0,W
         00008640     0090  
    1812 00008650     b481          move    *A4(OXPOS),A1,W
         00008660     0090  
    1813 00008670     4401          sub     A0,A1
    1814 00008680     4c25          move    A1,A5
    1815 00008690     0381          abs     A1
    1816 000086a0     0b81          andi    01FFH,A1        ;* max range of 512
         000086b0 fffffe00  
    1817 000086d0     4c22          move    A1,A2
    1818 000086e0     4c23          move    A1,A3
    1819 000086f0     09c0          movi    0280H,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   44

         00008700     0280  
    1820 00008710     0d5f          CALLA   RANDU
         00008720 00000000! 
    1821 00008740     0b00          addi    0130H,A0
         00008750     0130  
    1822 00008760     5c03          mpys    A0,A3
    1823 00008770     2561          sll     11,A1   ;* Yvel is 16.16 but dividing Xdelta by 32 to give YVel
    1824 00008780     4461          sub     A3,A1
    1825 00008790     03a1          neg     A1
    1826                    
    1827                            ;* determine X velocity
    1828 000087a0     4c40          move    A2,A0
    1829 000087b0     0b00          addi    170,A0
         000087c0     00aa  
    1830 000087d0     2520          sll     9,A0
    1831 000087e0     56c6          clr     A6
    1832 000087f0     4ca5          move    A5,A5
    1833 00008800     c102          jrp     FlySetXv
    1834 00008810     1026          inc     A6
    1835 00008820     03a0          neg     A0
    1836 00008830           FlySetXv:       
    1837 00008830     acc7          movb    A6,*A7(rotdir)
         00008840     00f8  
    1838 00008850     09e6          movi    P1DATA,A6
         00008860 00000000! 
    1839 00008880     b6ce          move    *A6(POBJ),A14,L
         00008890     00a0  
    1840 000088a0     49c4          cmp     A14,A4
    1841 000088b0     ca07          jreq    GotPD
    1842 000088c0     09e6          movi    P2DATA,A6
         000088d0 00000000! 
    1843 000088f0     b6ce          move    *A6(POBJ),A14,L
         00008900     00a0  
    1844 00008910     49c4          cmp     A14,A4
    1845 00008920     cb0c          jrnz    SkDeltXV
    1846                    
    1847 00008930           GotPD:
    1848 00008930     b4c6          move    *A6(PSWTCH),A6,W
         00008940     00c0  
    1849 00008950     0b86          andi    PRYTE|PLEFT,A6
         00008960 fffffff3  
    1850 00008980     ca06          jrz     SkDeltXV
    1851 00008990     4e03          move    A0,B3
    1852 000089a0     09d4          movi    5,B4
         000089b0     0005  
    1853 000089c0     5c93          mpys    B4,B3
    1854 000089d0     2bd3          sra     2,B3
    1855 000089e0     4e70          move    B3,A0
    1856 000089f0           SkDeltXV:
    1857                    
    1858 000089f0     b207          move    A0,*A7(ETEMP1),L        ;X vel
         00008a00     0180  
    1859                    
    1860 00008a10     b500          move    *A8(OZPOS),A0,W
         00008a20     00d0  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   45

    1861 00008a30     b485          move    *A4(OZPOS),A5,W
         00008a40     00d0  
    1862 00008a50     4405          sub     A0,A5
    1863 00008a60     2705          sll     24,A5
    1864 00008a70     2b25          sra     7,A5
    1865 00008a80     4c44          move    A2,A4
    1866 00008a90     2fc4          srl     2,A4
    1867 00008aa0     4482          sub     A4,A2
    1868 00008ab0     5845          divs    A2,A5
    1869 00008ac0     09e0          movi    010000H,A0
         00008ad0 00010000  
    1870 00008af0     24a2          sll     5,A2
    1871 00008b00     4440          sub     A2,A0
    1872 00008b10     4c02          move    A0,A2
    1873 00008b20     0d5f          CALLA   RANDU
         00008b30 00000000! 
    1874 00008b50     2fe2          srl     1,A2
    1875 00008b60     4440          sub     A2,A0
    1876 00008b70     4005          add     A0,A5
    1877 00008b80     b2a7          move    A5,*A7(ETEMP3),L        ;Z vel
         00008b90     01c0  
    1878 00008ba0     40a1          add     A5,A1
    1879 00008bb0     b227          move    A1,*A7(ETEMP2),L        ;Y vel
         00008bc0     01a0  
    1880                    
    1881 00008bd0     1921          movk    9,A1
    1882 00008be0     1980          movk    12,A0
    1883 00008bf0     0d5f          calla   RANDU
         00008c00 00000000! 
    1884 00008c20     4401          sub     A0,A1
    1885 00008c30     ac27          movb    A1,*A7(fuselen)
         00008c40     00f0  
    1886                    
    1887                            ;* Get animation point of the stick X,Y in A2,A3
    1888 00008c50     0d5f          calla   GETANIXY
         00008c60 00000000! 
    1889 00008c80     2e02          srl     16,A2   ;A2 was APOINT OYVAL, 32 BITS
    1890 00008c90     2a03          sra     16,A3   ;A3 was APOINT OXVAL, 32 BITS
    1891                    
    1892 00008ca0     4e10          move    B0,A0  ;B0 has offsets from frame center
    1893 00008cb0     4c01          move    A0,A1
    1894 00008cc0     0520          zext    A0,W
    1895 00008cd0     4003          add     A0,A3
    1896 00008ce0     2e01          srl     16,A1
    1897 00008cf0     4022          add     A1,A2
    1898 00008d00     2602          sll     16,A2
    1899 00008d10     4062          add     A3,A2
    1900                    
    1901 00008d20     b247          move    A2,*A7(ETEMP4),L        ;packed Y:X pos
         00008d30     01e0  
    1902 00008d40           SkDyn:
    1903 00008d40     0960          rets
    1904                    **************************************************************************
    1905                    
    1906                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   46

    1907                    **************************************************************************
    1908 00008d50           ThrowD2:
    1909                    ;* Throw a fastball which is timed to blow in the players face without
    1910                    ;       bouncing.
    1911                    ;* Parms
    1912                    ;       B0 - packed Y:X offsets from throw frame anim pt
    1913                    ;       A4 - ptr to targets obj.
    1914                    
    1915                            ;* dispatch a dynamite stick
    1916 00008d50     09c1          MOVI    0EDh,A1
         00008d60     00ed  
    1917 00008d70     09e7          MOVI    dynamite,A7
         00008d80 00000000! 
    1918 00008da0     0d5f          calla   GETPRC
         00008db0 00000000! 
    1919 00008dd0     ca4b          jrz     SkDyn2
    1920 00008de0     4c07          move    A0,A7
    1921                    
    1922                            ;determine distance stick must fly
    1923 00008df0     0d5f          calla   GETANIX
         00008e00 00000000! 
    1924 00008e20     4c01          move    A0,A1
    1925 00008e30     4d06          move    A8,A6
    1926 00008e40     4c88          move    A4,A8
    1927 00008e50     0d5f          calla   GETANIX
         00008e60 00000000! 
    1928 00008e80     4cc8          move    A6,A8
    1929 00008e90     4401          sub     A0,A1           ;A1 = ThrowerX-PlX
    1930                    
    1931                            ;* determine X velocity
    1932 00008ea0     09e5          movi    050000H,A5
         00008eb0 00050000  
    1933 00008ed0     56c6          clr     A6              ;rotate CW
    1934 00008ee0     4c21          move    A1,A1
    1935 00008ef0     ce02          jrn     SkNgXv
    1936 00008f00     03a5          neg     A5              ;A5 Xvelocity
    1937 00008f10     1826          movk    1,A6            ;rotate CCW
    1938 00008f20           SkNgXv: 
    1939 00008f20     b2a7          move    A5,*A7(ETEMP1),L        ;X vel
         00008f30     0180  
    1940 00008f40     acc7          movb    A6,*A7(rotdir)
         00008f50     00f8  
    1941                    
    1942                            ;* determine Z & Y vels.
    1943                            ;       Time = Xdelt / Xv
    1944                            ;       Zv = Zdelt / Time
    1945                            ;       Yv = Zv + 04000H * Time/2
    1946 00008f60     0385          abs     A5
    1947 00008f70     0381          abs     A1
    1948 00008f80     2601          sll     16,A1
    1949 00008f90     5aa1          divu    A5,A1                   ;A1 = Time
    1950                            ;* get Zv
    1951 00008fa0     b500          move    *A8(OZPOS),A0,W
         00008fb0     00d0  
    1952 00008fc0     b485          move    *A4(OZPOS),A5,W
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   47

         00008fd0     00d0  
    1953 00008fe0     4405          sub     A0,A5
    1954 00008ff0     2605          sll     16,A5
    1955 00009000     5825          divs    A1,A5                   ;A5 = Zv
    1956 00009010     b2a7          move    A5,*A7(ETEMP3),L        ;set Z vel
         00009020     01c0  
    1957                            ;set fuse length
    1958 00009030     4c23          move    A1,A3
    1959 00009040     09c2          movi    FUSETIKS,A2
         00009050     000a  
    1960 00009060     5a43          divu    A2,A3
    1961 00009070     0b43          cmpi    1,A3
         00009080     fffe  
    1962 00009090     c501          jrge    MinFLOK
    1963 000090a0     1823          movk    1,A3
    1964 000090b0           MinFLOK:
    1965 000090b0     0b43          cmpi    15,A3
         000090c0     fff0  
    1966 000090d0     c601          jrle    MaxFLOK
    1967 000090e0     19e3          movk    15,A3
    1968 000090f0           MaxFLOK:
    1969 000090f0     14e3          subk    7,A3
    1970 00009100     ac67          movb    A3,*A7(fuselen)
         00009110     00f0  
    1971                            ;* get Yv
    1972 00009120     2fe1          srl     1,A1
    1973 00009130     09c3          movi    04000H,A3
         00009140     4000  
    1974 00009150     5e23          mpyu    A1,A3
    1975 00009160     03a3          neg     A3
    1976 00009170     40a3          add     A5,A3
    1977 00009180     b267          move    A3,*A7(ETEMP2),L        ;Y vel
         00009190     01a0  
    1978                            
    1979                    
    1980                            ;* Get animation point of the stick X,Y in A2,A3
    1981 000091a0     0d5f          calla   GETANIXY
         000091b0 00000000! 
    1982 000091d0     2e02          srl     16,A2   ;A2 was APOINT OYVAL, 32 BITS
    1983 000091e0     2a03          sra     16,A3   ;A3 was APOINT OXVAL, 32 BITS
    1984                    
    1985 000091f0     4e10          move    B0,A0  ;B0 has offsets from frame center
    1986 00009200     4c01          move    A0,A1
    1987 00009210     0520          zext    A0,W
    1988 00009220     4003          add     A0,A3
    1989 00009230     2e01          srl     16,A1
    1990 00009240     4022          add     A1,A2
    1991 00009250     2602          sll     16,A2
    1992 00009260     4062          add     A3,A2
    1993                    
    1994 00009270     b247          move    A2,*A7(ETEMP4),L        ;packed Y:X pos
         00009280     01e0  
    1995 00009290           SkDyn2:
    1996 00009290     0960          rets
    1997                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   48

    1998                    
    1999                    
    2000                    **************************************************************************
    2001 000092a0           P_FIRE:
    2002                    ;* A0 is Max # of times to FIRE
    2003                    ;* if ANIMPTR is not set, will have to choose one..
    2004 000092a0     182a          movk    1,A10
    2005                    
    2006 000092b0     0d5f          calla   NEARPLYR                        ;Get disp obj of someone to shoot at
         000092c0 00000000! 
    2007 000092e0     ca37          jrz     P_NO_SH
    2008 000092f0     4c04          move    A0,A4
    2009                    
    2010 00009300     b7a1          move    *A13(ANIMPTR),A1,L
         00009310     0120  
    2011 00009320     cb0d          jrnz    PickX
    2012                    
    2013                            ;* Pick a Firing script
    2014 00009330           F_GUN:
    2015 00009330     05a1          move    @RAND,A1,W
         00009340 00000000! 
    2016 00009360     ce04          jrn     F_SQUAT
    2017 00009370     09e1          movi    PSHOOT,A1
         00009380 0000dd60' 
    2018 000093a0     c003          jruc    GotPick
    2019 000093b0           F_SQUAT:
    2020                    
    2021                            
    2022 000093b0     09e1          movi    PSQSHT,A1
         000093c0 0000d9c0' 
    2023 000093e0           GotPick:
    2024 000093e0     b22d          move    A1,*A13(ANIMPTR),L
         000093f0     0120  
    2025 00009400           PickX:
    2026                    
    2027 00009400     0d5f          calla   FACEOBJ
         00009410 00000000! 
    2028 00009430           P_S_LP:
    2029 00009430     b7a9          move    *A13(ANIMPTR),A9,L
         00009440     0120  
    2030                    
    2031                    
    2032 00009450     1821          movk    1,A1            ;do whole script
    2033 00009460     0d5f          calla   ClrVel
         00009470 00000000! 
    2034 00009490                   jsrp    FRANIM
    2035                    
    2036 00009500     0b69          cmpi    PTW2,A9
         00009510 ffff1f9f' 
    2037 00009530     cb0d          jrnz    SkThrow2
    2038 00009540     0d3f          callr   ThrowD
         00009550     fefb  
    2039                    
    2040 00009560     1821          movk    1,A1            ;do whole script
    2041 00009570     0d5f          calla   ClrVel
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   49

         00009580 00000000! 
    2042 000095a0                   jsrp    FRANIM
    2043 00009610           SkThrow2:
    2044                    
    2045 00009610     3fea          dsj     A10,P_S_LP
    2046 00009620     0de0          setc
    2047 00009630                   retp
    2048                    
    2049 00009660           P_NO_SH:
    2050 00009660     0320          clrc
    2051 00009670                   retp
    2052                    **************************************************************************
    2053                    
    2054                    **************************************************************************
    2055 000096a0           P_LOB:
    2056 000096a0     09c0          movi    4,A0
         000096b0     0004  
    2057 000096c0     0d5f          calla   RANDU
         000096d0 00000000! 
    2058 000096f0     1420          dec     A0
    2059 00009700     cb19          jrnz    P_NO_LOB
    2060                    
    2061 00009710     4d60          move    A11,A0
    2062 00009720     0d5f          calla   GETPLYR
         00009730 00000000! 
    2063 00009750     b600          move    *A0(POBJ),A0,L
         00009760     00a0  
    2064 00009770     4c04          move    A0,A4
    2065 00009780     0d5f          calla   FACEOBJ
         00009790 00000000! 
    2066 000097b0     1821          movk    1,A1            ;do whole script
    2067 000097c0     0d5f          calla   ClrVel
         000097d0 00000000! 
    2068 000097f0                   jsrp    FRANIM
    2069 00009860     0de0          setc
    2070 00009870                   retp
    2071                    
    2072 000098a0           P_NO_LOB:
    2073 000098a0     0320          clrc
    2074 000098b0                   retp
    2075                    **************************************************************************
    2076                    
    2077                    **************************************************************************
    2078 000098e0           P_DUCK:
    2079 000098e0     0d5f          calla   NEAR_BUL
         000098f0 00000000! 
    2080 00009910     4ca5          move    A5,A5   ;* is there a bullet headed our way??
    2081 00009920     ca19          jrz     P_DUCKX
    2082 00009930     0b46          cmpi    300,A6
         00009940     fed3  
    2083 00009950     c716          jrgt    P_DUCKX ;* bullet is too far away to worry about..
    2084 00009960     b7a0          move    *A13(WANTOBJ),A0,L
         00009970     0220  
    2085 00009980     b400          move    *A0(OYPOS),A0,W
         00009990     00b0  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   50

    2086 000099a0     b4a1          move    *A5(OYPOS),A1,W
         000099b0     00b0  
    2087 000099c0     4801          cmp     A0,A1
    2088 000099d0     c70e          jrgt    P_DUCKX ;* object blocks bullet
    2089 000099e0     09e0          movi    PDUCK,A0
         000099f0 0000e250' 
    2090 00009a10     05a1          move    @RAND,A1,W
         00009a20 00000000! 
    2091 00009a40     ce03          jrn     SetDAni
    2092 00009a50     09e0          movi    PKNEELK,A0
         00009a60 0000e6b0' 
    2093 00009a80           SetDAni:
    2094 00009a80     b20d          move    A0,*A13(ANIMPTR),L
         00009a90     0120  
    2095 00009aa0     0de0          setc
    2096 00009ab0     0960          rets
    2097 00009ac0           P_DUCKX:
    2098 00009ac0     0320          clrc
    2099 00009ad0     0960          rets
    2100                    **************************************************************************
    2101                    
    2102                    ****************************  CHECK DANGER  ******************************
    2103                    * if PIMP is in danger of being shot, jump or duck or move away
    2104 00009ae0           CkDngr:
    2105 00009ae0     0d5f          calla   NEAR_BUL
         00009af0 00000000! 
    2106 00009b10     4ca0          move    A5,A0   ;* is there a bullet headed our way??
    2107 00009b20     ca49          jrz     P_NODNGR
    2108                    
    2109 00009b30     b4a2          move    *A5(OYPOS),A2,W
         00009b40     00b0  
    2110 00009b50     0be2          subi    ZORIGIN,A2
         00009b60     ff37  
    2111 00009b70     b4a3          move    *A5(OZPOS),A3,W
         00009b80     00d0  
    2112 00009b90     4443          sub     A2,A3
    2113 00009ba0     0b43          cmpi    55,A3           ;is bullet height < 55
         00009bb0     ffc8  
    2114 00009bc0     c429          jrlt    BULL_LOW
    2115                    ;* BULLET IS HEADING TOWARDS HEAD -- DO SOMETHING !!!
    2116 00009bd0     0b46          cmpi    350,A6          ;is bullet real close?
         00009be0     fea1  
    2117 00009bf0     c725          jrgt HGH_FAR
    2118                    ;* bullet is close - duck and fire.
    2119 00009c00     b50a          move    *A8(OXVEL+8),A10,W         ;save velocities to be restored
         00009c10     0048  
    2120 00009c20     b50b          move    *A8(OYVEL+8),A11,W
         00009c30     0068  
    2121 00009c40     260b          sll     16,A11
    2122 00009c50     ef6a          movy    A11,A10
    2123 00009c60     0d5f          calla   ClrVel
         00009c70 00000000! 
    2124 00009c90     4d2b          move    A9,A11
    2125                    
    2126                            ;* shoot toward where bullet came from 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   51

    2127 00009ca0     4ca0          move    A5,A0
    2128 00009cb0     0d5f          calla   FACEBULL
         00009cc0 00000000! 
    2129 00009ce0     09e9          movi    PSQSHT,A9,L
         00009cf0 0000d9c0' 
    2130 00009d10     1821          movk    1,A1            ;execute script
    2131 00009d20                   jsrp    FRANIM
    2132                    
    2133 00009d90     4d69          move    A11,A9
    2134 00009da0     ef4b          movy    A10,A11
    2135 00009db0     2b0b          sra     8,A11
    2136 00009dc0     260a          sll     16,A10
    2137 00009dd0     2b0a          sra     8,A10
    2138 00009de0     b368          move    A11,*A8(OYVEL),L
         00009df0     0060  
    2139 00009e00     b368          move    A11,*A8(OZVEL),L
         00009e10     00e0  
    2140 00009e20     b348          move    A10,*A8(OXVEL),L
         00009e30     0040  
    2141 00009e40     c013          jruc    P_DNGRX
    2142 00009e50           HGH_FAR:
    2143                    ;* bullet is far - run down and away
    2144                            ;* move away from bullet on Z
    2145 00009e50     c012          jruc    P_DNGRX
    2146                    
    2147 00009e60           BULL_LOW:
    2148                    ;* BULLET IS HEADING TOWARDS FEET -- DO SOMETHING !!!
    2149 00009e60     afa0          movb    *A13(HIDING),A0
         00009e70     0180  
    2150 00009e80     cb13          jrnz    P_NODNGR
    2151 00009e90     0b46          cmpi    300,A6          ;is bullet real close?
         00009ea0     fed3  
    2152 00009eb0     c70c          jrgt LOW_FAR
    2153                    ;* bullet is very close - jump.
    2154 00009ec0     4ca0          move    A5,A0
    2155 00009ed0     0d5f          calla   FACEBULL
         00009ee0 00000000! 
    2156 00009f00                   jsrp    DO_PJUMP
    2157 00009f70     0300          jruc    P_DNGRX
    2158 00009f80           LOW_FAR:
    2159                    ;* bullet is far - run up and away
    2160                            ;* move away from bullet on Z
    2161                    
    2162 00009f80           P_DNGRX:
    2163 00009f80     0de0          setc
    2164 00009f90                   RETP
    2165 00009fc0           P_NODNGR:
    2166 00009fc0     0320          clrc
    2167 00009fd0                   RETP
    2168                    **************************************************************************
    2169                    
    2170                    **************************************************************************
    2171 0000a000           DO_PJUMP:
    2172                    ;* Entry Point for jumping bullets
    2173 0000a000     0d5f          calla   ShadOn
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   52

         0000a010 00000000! 
    2174                    
    2175 0000a030     b50a          move    *A8(OXVEL+8),A10,W         ;save velocities to be restored
         0000a040     0048  
    2176 0000a050     b50b          move    *A8(OYVEL+8),A11,W
         0000a060     0068  
    2177 0000a070     260b          sll     16,A11
    2178 0000a080     ef6a          movy    A11,A10
    2179 0000a090     4d2b          move    A9,A11
    2180                    
    2181 0000a0a0     1820          movk    1,A0
    2182 0000a0b0     b501          move    *A8(OFLAGS),A1,W
         0000a0c0     0100  
    2183 0000a0d0     1f61          btst    B_FLIPH,A1
    2184 0000a0e0     ca01          jrz     SkJLeft
    2185 0000a0f0     03a0          neg     A0
    2186 0000a100           SkJLeft:
    2187 0000a100     b008          move    A0,*A8(OXVEL+16),W
         0000a110     0050  
    2188 0000a120     0d5f          calla   UpdShadV
         0000a130 00000000! 
    2189 0000a150     c044          jruc    DoJump
    2190                    
    2191 0000a160           JmpAway:
    2192                    ;* Entry Point For Jumping from a bust
    2193 0000a160     0d5f          calla   ShadOn
         0000a170 00000000! 
    2194                    
    2195 0000a190     b50a          move    *A8(OXVEL+8),A10,W         ;save velocities to be restored
         0000a1a0     0048  
    2196 0000a1b0     b50b          move    *A8(OYVEL+8),A11,W
         0000a1c0     0068  
    2197 0000a1d0     260b          sll     16,A11
    2198 0000a1e0     ef6a          movy    A11,A10
    2199 0000a1f0     4d2b          move    A9,A11
    2200                    
    2201                            ;SET X VELOCITY AND FACING
    2202 0000a200     09e0          movi    010000H,A0
         0000a210 00010000  
    2203 0000a230     0d5f          calla   RANDU
         0000a240 00000000! 
    2204 0000a260     0b20          addi    018000H,A0
         0000a270 00018000  
    2205 0000a290     4c03          move    A0,A3           ;Xvel
    2206 0000a2a0     b501          move    *A8(OXPOS),A1,W
         0000a2b0     0090  
    2207 0000a2c0     05a2          move    @(WORLDTLX+16),A2,W                              
         0000a2d0 00000010! 
    2208 0000a2f0     4441          sub     A2,A1
    2209 0000a300     0b41          cmpi    255,A1
         0000a310     ff00  
    2210 0000a320     c406          jrlt    JmpRt
    2211                            ;* need to jump to the left
    2212 0000a330     0d5f          calla   Ck_YFLP
         0000a340 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   53

    2213 0000a360     c907          jrnc    GotF
    2214 0000a370     03a3          neg     A3                      ;set x velocity neg
    2215 0000a380     c005          jruc    GotF
    2216 0000a390           JmpRt:
    2217 0000a390     0d5f          calla   Ck_NOYFLP
         0000a3a0 00000000! 
    2218 0000a3c0     c801          jrc     GotF
    2219 0000a3d0     03a3          neg     A3
    2220 0000a3e0           GotF:
    2221 0000a3e0     b268          move    A3,*A8(OXVEL),L
         0000a3f0     0040  
    2222                    
    2223                            ;SET Z VELOCITY AND FACING
    2224 0000a400     09e0          movi    0C000H,A0
         0000a410 0000c000  
    2225 0000a430     0d5f          calla   RANDU
         0000a440 00000000! 
    2226 0000a460     0b20          addi    0C000H,A0
         0000a470 0000c000  
    2227 0000a490     4c03          move    A0,A3           ;Zvel
    2228 0000a4a0     05a1          move    @PLZMIN,A1,W
         0000a4b0 00000000! 
    2229 0000a4d0     05a2          move    @PLZMAX,A2,W
         0000a4e0 00000000! 
    2230 0000a500     4422          sub     A1,A2
    2231 0000a510     2fe2          srl     1,A2
    2232 0000a520     4022          add     A1,A2
    2233 0000a530     b501          move    *A8(OZPOS),A1,W
         0000a540     00d0  
    2234 0000a550     4841          cmp     A2,A1
    2235 0000a560     c401          jrlt    SkZin
    2236 0000a570     03a3          neg     A3
    2237 0000a580           SkZin:
    2238 0000a580     b268          move    A3,*A8(OZVEL),L
         0000a590     00e0  
    2239                    
    2240 0000a5a0           DoJump:
    2241 0000a5a0     09e9          movi    PJMP,A9,L
         0000a5b0 0000d810' 
    2242 0000a5d0     1881          movk    4,A1
    2243 0000a5e0                   jsrp    FRANIM
    2244 0000a650     1860          movk    3,A0
    2245 0000a660     0d5f          calla   PRCSLP
         0000a670 00000000! 
    2246 0000a690     1881          movk    4,A1
    2247 0000a6a0                   jsrp    FRANIM
    2248                    
    2249 0000a710     1860          movk    3,A0
    2250 0000a720     0d5f          calla   RANDU
         0000a730 00000000! 
    2251 0000a750     10e0          addk    7,A0
    2252 0000a760     03a0          neg     A0
    2253 0000a770     b501          move    *A8(OYVEL+16),A1,W
         0000a780     0070  
    2254 0000a790     4001          add     A0,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   54

    2255 0000a7a0     b028          move    A1,*A8(OYVEL+16),W
         0000a7b0     0070  
    2256                            
    2257 0000a7c0           PFLY0:
    2258 0000a7c0     0d3f          callr   ZCHECK
         0000a7d0     f6f5  
    2259 0000a7e0     0d5f          calla   UpdShadV
         0000a7f0 00000000! 
    2260 0000a810     1820          movk    1,A0
    2261 0000a820     0d5f          calla   PRCSLP
         0000a830 00000000! 
    2262 0000a850     0d5f          calla   DFRMGRND
         0000a860 00000000! 
    2263 0000a880     0b41          cmpi    35,A1
         0000a890     ffdc  
    2264 0000a8a0     c70b          jrgt    PFLY1a
    2265 0000a8b0     b700          move    *A8(OYVEL),A0,L
         0000a8c0     0060  
    2266 0000a8d0     0b20          addi    0C000H,A0
         0000a8e0 0000c000  
    2267 0000a900     b208          move    A0,*A8(OYVEL),L
         0000a910     0060  
    2268 0000a920     b701          move    *A8(OZVEL),A1,L
         0000a930     00e0  
    2269 0000a940     4420          sub     A1,A0
    2270 0000a950     cee6          jrn     PFLY0
    2271                    
    2272 0000a960           PFLY1a:
    2273 0000a960     1881          movk    4,A1
    2274 0000a970                   jsrp    FRANIM
    2275 0000a9e0           PFLY1:
    2276 0000a9e0     0d3f          callr   ZCHECK
         0000a9f0     f6d3  
    2277 0000aa00     0d5f          calla   UpdShadV
         0000aa10 00000000! 
    2278 0000aa30     1820          movk    1,A0
    2279 0000aa40     0d5f          calla   PRCSLP
         0000aa50 00000000! 
    2280 0000aa70     c40b          jrlt    PFLY2a
    2281 0000aa80     b700          move    *A8(OYVEL),A0,L
         0000aa90     0060  
    2282 0000aaa0     0b20          addi    08000H,A0
         0000aab0 00008000  
    2283 0000aad0     b208          move    A0,*A8(OYVEL),L
         0000aae0     0060  
    2284 0000aaf0     b701          move    *A8(OZVEL),A1,L
         0000ab00     00e0  
    2285 0000ab10     4420          sub     A1,A0
    2286 0000ab20     ceeb          jrn     PFLY1
    2287                    
    2288 0000ab30           PFLY2a:
    2289 0000ab30     1881          movk    4,A1
    2290 0000ab40                   jsrp    FRANIM
    2291 0000abb0           PFLY2:
    2292 0000abb0     0d3f          callr   ZCHECK
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   55

         0000abc0     f6b6  
    2293 0000abd0     0d5f          calla   UpdShadV
         0000abe0 00000000! 
    2294 0000ac00     1820          movk    1,A0
    2295 0000ac10     0d5f          calla   PRCSLP
         0000ac20 00000000! 
    2296 0000ac40     b700          move    *A8(OYVEL),A0,L
         0000ac50     0060  
    2297 0000ac60     0b20          addi    08000H,A0
         0000ac70 00008000  
    2298 0000ac90     b208          move    A0,*A8(OYVEL),L
         0000aca0     0060  
    2299 0000acb0     0d5f          calla   DFRMGRND
         0000acc0 00000000! 
    2300 0000ace0     c1ec          jrp     PFLY2
    2301                    
    2302                    ;* we have hit the ground..
    2303 0000acf0     0d5f          calla   ShadOff
         0000ad00 00000000! 
    2304                    
    2305 0000ad20     4d00          move    A8,A0
    2306 0000ad30     0d5f          calla   SETZPOS
         0000ad40 00000000! 
    2307 0000ad60     0d3f          callr   ZFIX
         0000ad70     f694  
    2308                    
    2309 0000ad80     4d69          move    A11,A9
    2310 0000ad90     ef4b          movy    A10,A11
    2311 0000ada0     2b0b          sra     8,A11
    2312 0000adb0     260a          sll     16,A10
    2313 0000adc0     2b0a          sra     8,A10
    2314 0000add0     b368          move    A11,*A8(OYVEL),L
         0000ade0     0060  
    2315 0000adf0     b368          move    A11,*A8(OZVEL),L
         0000ae00     00e0  
    2316 0000ae10     b348          move    A10,*A8(OXVEL),L
         0000ae20     0040  
    2317                    
    2318 0000ae30     5600          clr     A0
    2319 0000ae40     ac0d          movb    A0,*A13(DEST_TAG)
         0000ae50     01c0  
    2320 0000ae60     b20d          move    A0,*A13(WANTOBJ),L
         0000ae70     0220  
    2321                    
    2322 0000ae80     4d49          move    A10,A9
    2323 0000ae90                   retp
    2324                    **************************************************************************
    2325                    
    2326                    
    2327                    **************************************************************************
    2328 0000aec0           P_HIDDEN:
    2329                    ;* return carry set if Enemy is protected by an obstacle
    2330                    
    2331 0000aec0     098f          mmtm    SP,A8
         0000aed0     0080  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   56

    2332 0000aee0     b7a5          move    *A13(WANTOBJ),A5,L
         0000aef0     0220  
    2333 0000af00     ca55          jrz     NOT_HID
    2334 0000af10     0d5f          calla   GETANIX         
         0000af20 00000000! 
    2335 0000af40     4c01          move    A0,A1                   ;A1 = Pimps Anim Pt.
    2336 0000af50     b4a3          move    *A5(OXPOS),A3,W 
         0000af60     0090  
    2337 0000af70     b4a4          move    *A5(OSIZEX),A4
         0000af80     0140  
    2338 0000af90     2fe4          srl     1,A4                            ;A4 = 1/2 OBJ width
    2339 0000afa0     4083          add     A4,A3                   ;A3 - OBJx center
    2340                    
    2341 0000afb0     afa0          movb    *A13(HIDING),A0
         0000afc0     0180  
    2342 0000afd0     cb19          jrnz    SkObjCk
    2343 0000afe0     4ca0          move    A5,A0
    2344 0000aff0     0d3f          callr   HIDEOBJ
         0000b000     004c  
    2345 0000b010     c944          jrnc    NOT_HID
    2346                    
    2347                    ;* If ENEMY Z and OBJ Z don't match, not hidden
    2348 0000b020     4ca0          move    A5,A0
    2349 0000b030     0d5f          calla   GetMidZ
         0000b040 00000000! 
    2350 0000b060     b502          move    *A8(OZPOS),A2,W
         0000b070     00d0  
    2351 0000b080     4402          sub     A0,A2
    2352 0000b090     0382          abs     A2
    2353 0000b0a0     0b42          cmpi    5,A2
         0000b0b0     fffa  
    2354 0000b0c0     c739          jrgt    NOT_HID
    2355                    
    2356                    ;* Check X distance
    2357 0000b0d0     0b04          addi    40,A4
         0000b0e0     0028  
    2358 0000b0f0     4c62          move    A3,A2
    2359 0000b100     4422          sub     A1,A2
    2360 0000b110     ce02          jrn     ObjLeft
    2361 0000b120     4882          cmp     A4,A2
    2362 0000b130     c732          jrgt    NOT_HID
    2363 0000b140           ObjLeft:
    2364 0000b140     03a2          neg     A2
    2365 0000b150     4882          cmp     A4,A2
    2366 0000b160     c72f          jrgt    NOT_HID
    2367                    
    2368 0000b170           SkObjCk:
    2369                            
    2370                    ;* If Player1 is not obstructed by object goto NOT_HID
    2371 0000b170     09e0          movi    P1DATA,A0
         0000b180 00000000! 
    2372 0000b1a0     b608          move    *A0(POBJ),A8,L
         0000b1b0     00a0  
    2373 0000b1c0     ca0e          jrz     HID_P2
    2374 0000b1d0     0d5f          calla   GETANIX
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   57

         0000b1e0 00000000! 
    2375 0000b200     4820          cmp     A1,A0
    2376 0000b210     c705          jrgt    P1ONRITE
    2377                            ;* check to make sure PlayerX < ObjX < EnemyX
    2378                            ;* A1 - Enemy X,        A0 - Plyr X,    A3 - ObjX
    2379 0000b220     4860          cmp     A3,A0
    2380 0000b230     c522          jrge    NOT_HID
    2381 0000b240     4861          cmp     A3,A1
    2382 0000b250     c620          jrle    NOT_HID
    2383 0000b260     c004          jruc    HID_P2
    2384 0000b270           P1ONRITE
    2385                            ;* check to make sure PlayerX > ObjX > EnemyX
    2386 0000b270     4860          cmp     A3,A0
    2387 0000b280     c61d          jrle    NOT_HID
    2388 0000b290     4861          cmp     A3,A1
    2389 0000b2a0     c51b          jrge    NOT_HID
    2390                    
    2391                    ;* If Player2 is not obstructed by object goto NOT_HID
    2392 0000b2b0           HID_P2:
    2393 0000b2b0     09e0          movi    P2DATA,A0
         0000b2c0 00000000! 
    2394 0000b2e0     b608          move    *A0(POBJ),A8,L
         0000b2f0     00a0  
    2395 0000b300     ca0e          jrz     IS_HID
    2396 0000b310     0d5f          calla   GETANIX
         0000b320 00000000! 
    2397 0000b340     4820          cmp     A1,A0
    2398 0000b350     c705          jrgt    P2ONRITE
    2399                            ;* check to make sure PlayerX < ObjX < EnemyX
    2400 0000b360     4860          cmp     A3,A0
    2401 0000b370     c50e          jrge    NOT_HID
    2402 0000b380     4861          cmp     A3,A1
    2403 0000b390     c60c          jrle    NOT_HID
    2404 0000b3a0     c004          jruc    IS_HID
    2405 0000b3b0           P2ONRITE
    2406                            ;* check to make sure PlayerX > ObjX > EnemyX
    2407 0000b3b0     4860          cmp     A3,A0
    2408 0000b3c0     c609          jrle    NOT_HID
    2409 0000b3d0     4861          cmp     A3,A1
    2410 0000b3e0     c507          jrge    NOT_HID
    2411                    
    2412 0000b3f0           IS_HID:
    2413 0000b3f0     09af          mmfm    SP,A8
         0000b400     0100  
    2414 0000b410     1821          movk    1,A1
    2415 0000b420     ac2d          movb    A1,*A13(HIDING)
         0000b430     0180  
    2416 0000b440     0de0          setc
    2417 0000b450     0960          rets
    2418 0000b460           NOT_HID:
    2419 0000b460     09af          mmfm    SP,A8
         0000b470     0100  
    2420 0000b480     5621          clr     A1
    2421 0000b490     ac2d          movb    A1,*A13(HIDING)
         0000b4a0     0180  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   58

    2422 0000b4b0     0320          clrc
    2423 0000b4c0     0960          rets
    2424                    **************************************************************************
    2425                    
    2426                    **************************************************************************
    2427 0000b4d0           HIDEOBJ:
    2428 0000b4d0                   push    A1
    2429 0000b4e0     b401          move    *A0(OID),A1,W
         0000b4f0     01a0  
    2430 0000b500     0521          zext    A1,W
    2431 0000b510     0b41          cmpi    BGGID,A1
         0000b520     f43b  
    2432 0000b530     ca07          jrz     HObj    
    2433 0000b540     0b41          cmpi    BGDMPID,A1
         0000b550     f436  
    2434 0000b560     ca04          jrz     HObj    
    2435 0000b570     09af          mmfm    SP,A1
         0000b580     0002  
    2436 0000b590     0320          clrc
    2437 0000b5a0     0960          rets
    2438 0000b5b0           HObj:
    2439 0000b5b0     09af          mmfm    SP,A1
         0000b5c0     0002  
    2440 0000b5d0     0de0          setc
    2441 0000b5e0     0960          rets
    2442                    **************************************************************************
    2443                    
    2444                    **************************************************************************
    2445 0000b5f0           GRABOBJ:
    2446 0000b5f0                   push    A1
    2447 0000b600     b401          move    *A0(OID),A1,W
         0000b610     01a0  
    2448 0000b620     0521          zext    A1,W
    2449 0000b630     0b61          cmpi    BUCKOID,A1
         0000b640 ffff7fef  
    2450 0000b660     09af          mmfm    SP,A1
         0000b670     0002  
    2451 0000b680     ca02          jrz     GObj    
    2452 0000b690     0320          clrc
    2453 0000b6a0     0960          rets
    2454 0000b6b0           GObj:
    2455 0000b6b0     0de0          setc
    2456 0000b6c0     0960          rets
    2457                    **************************************************************************
    2458                    
    2459                    **************************************************************************
    2460 0000b6d0           P_HIDE:
    2461 0000b6d0     0960          rets
    2462                    **************************************************************************
    2463                    
    2464                    **************************************************************************
    2465 0000b6e0           PIMP_DONE:
    2466 0000b6e0     4d00          MOVE    A8,A0           ;GET THE POINTER TO THE OBJECT
    2467 0000b6f0     0d5f          calla   DELENEMY                        ;DELETE THE ENEMY
         0000b700 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   59

    2468 0000b720           PIMP_DIE:
    2469 0000b720                   DECW    @PIMPCNT
    2470 0000b790                   DIE
    2471 0000b7c0           BUSTED:
    2472 0000b7c0     4d62          move    A11,A2
    2473 0000b7d0     09c1          movi    02500H,A1
         0000b7e0     2500  
    2474 0000b7f0     0d5f          calla   SCORE
         0000b800 00000000! 
    2475 0000b820     0d5f          calla   PUT2x5K
         0000b830 00000000! 
    2476 0000b850     05a0          move    @PIMPCNT,A0,W
         0000b860 00000000! 
    2477 0000b880     1420          dec     A0
    2478 0000b890     0580          move    A0,@PIMPCNT,W
         0000b8a0 00000000! 
    2479 0000b8c0     0d5f          calla   CARDCHEK
         0000b8d0 00000000! 
    2480 0000b8f0                   DIE
    2481                    **************************************************************************
    2482                    
    2483                    
    2484                    **************************************************************************
    2485                    *WALKING PIMP COLLSION ROUTINE
    2486                    *A0 = PTR TO PIMP OBJECT
    2487                    *A8 = PTR TO OBJECT THAT SMASHED HIM
    2488 0000b920           PIMPCOL0
    2489 0000b920     b709          MOVE    *A8(OXVEL),A9,L         ;GET PROJECTILE DATA
         0000b930     0040  
    2490 0000b940     b70a          MOVE    *A8(OYVEL),A10,L
         0000b950     0060  
    2491 0000b960     b50b          MOVE    *A8(OID),A11,W          
         0000b970     01a0  
    2492                    
    2493 0000b980     4d06          MOVE    A8,A6                   ;STORE KILLERS OBLOCK
    2494 0000b990     4c08          MOVE    A0,A8                   ;PASS WASTED GUYS POINTER
    2495                    
    2496 0000b9a0     09ee          MOVI    SPLTCOLANI,A14
         0000b9b0 00000000! 
    2497 0000b9d0     b3c0          MOVE    A14,*A0(OCVECT),L       ;COLLISION POINTER
         0000b9e0     01d0  
    2498                    
    2499 0000b9f0     b600          MOVE    *A0(OPLINK),A0,L
         0000ba00     01f0  
    2500 0000ba10     0d5f          CALLA   KILL                    ;KILL CONTROL
         0000ba20 00000000! 
    2501 0000ba40     4c0e          MOVE    A0,A14                  ;STORE THIS RELIC
    2502                            
    2503 0000ba50     0d5f          calla   ShadOn
         0000ba60 00000000! 
    2504                    
    2505 0000ba80     09c1          MOVI    0EDh,A1
         0000ba90     00ed  
    2506 0000baa0     09e7          MOVI    PDIE,A7
         0000bab0 0000bd20' 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   60

    2507 0000bad0     0d5f          CALLA   GETPRC                  ;CREATE A NEW ENEMY DEATH PROCESS
         0000bae0 00000000! 
    2508 0000bb00     bac0          MOVE    *A6(ODMAXY),*A0(PDATA),L        ;PASS KILLERS DMA XY POSITION
         0000bb10     0210  
         0000bb20     0060  
    2509 0000bb30     bac0          MOVE    *A6(OSIZE),*A0(PDATA+20H),L     ;AND KILLERS XY SIZE
         0000bb40     0140  
         0000bb50     0080  
    2510 0000bb60     bbc0          move    *A14(EBCNTRS),*A0(EBCNTRS),L    ;and the booty counters
         0000bb70     0140  
         0000bb80     0140  
    2511 0000bb90     bbc0          MOVE    *A14(EMAINT),*A0(EMAINT),L
         0000bba0     0100  
         0000bbb0     0100  
    2512                    
    2513 0000bbc0     b4c9          move    *A6(OYPOS),A9,W
         0000bbd0     00b0  
    2514 0000bbe0     09c1          MOVI    0EDh,A1
         0000bbf0     00ed  
    2515 0000bc00     09e7          movi    SPLATANI,A7
         0000bc10 00000000! 
    2516 0000bc30     0d5f          CALLA   GETPRC
         0000bc40 00000000! 
    2517                    
    2518 0000bc60     05a0          move    @PIMPCNT,A0,W
         0000bc70 00000000! 
    2519 0000bc90     1420          dec     A0
    2520 0000bca0     0580          move    A0,@PIMPCNT,W
         0000bcb0 00000000! 
    2521 0000bcd0     0d5f          calla   CARDCHEK
         0000bce0 00000000! 
    2522                    
    2523 0000bd00     0320          CLRC            ;Don't delete in Coll routine
    2524 0000bd10     0960          RETS
    2525                    *************************************************************************
    2526                    
    2527                    *************************************************************************
    2528                    * WALKING ENEMY DIE PROCESS
    2529                    * A8=OBJECT PTR OF ENEMY          
    2530                    * A9=XVEL OF KILLER               
    2531                    * A10=YVEL OF KILLER      
    2532                    * A11=OID OF KILLER               
    2533                    * PDATA     = UPPER LEFT X OF KILLER 
    2534                    * PDATA+10H = UPPER LEFT Y OF KILLER   
    2535                    * PDATA+20H = CURRENT X SIZE OF KILLER 
    2536                    * PDATA+30H = CURRENT Y SIZE OF KILLER          
    2537                    * PDATA+A0H = ADDRESS OF MAIN ANIMATION TABLE
    2538                    * I.D. = $ED                                 
    2539 0000bd20           PDIE
    2540 0000bd20     0d5f          CALLa   SCRKIL                  ;SCORE THE KILL                                                 
         0000bd30 00000000! 
    2541                    
    2542 0000bd50     4d63          MOVE    A11,A3                  ;COPY OF I.D.
    2543 0000bd60     2783          SLL     28,A3
    2544 0000bd70     2c83          SRL     28,A3
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   61

    2545                    
    2546 0000bd80     0b43          CMPI    ROCKETID,A3,W
         0000bd90     fffb  
    2547 0000bda0     ca80          JAEQ    WROCK                   ;DEATH BY ROCKET
         0000bdb0 00000000! 
    2548                    
    2549 0000bdd0     0b43          CMPI    EXPLODID,A3,W
         0000bde0     fffd  
    2550 0000bdf0     ca80          JAEQ    WEXPD                   ;DEATH BY EXPLOSION
         0000be00 00000000! 
    2551                    ;       jrnz    BullDeath
    2552                    ;                       ;DEATH BY EXPLOSION
    2553                    ;       movi    040000H,A0
    2554                    ;       calla   RANDU
    2555                    ;       subi    020000H,A0
    2556                    ;       move    A0,*A8(OXVEL),L
    2557                    ;       movi    040000H,A0
    2558                    ;       calla   RANDU
    2559                    ;       addi    050000H,A0
    2560                    ;       neg     A0
    2561                    ;       move    A0,*A8(OYVEL),L
    2562                    ;       jauc    PDEXP
    2563                    
    2564 0000be20           BullDeath:
    2565 0000be20     b500          MOVE    *A8(OFLAGS),A0,W
         0000be30     0100  
    2566 0000be40     0b80          andi    M_FLIPH,A0
         0000be50 ffffffef  
    2567 0000be70     cb08          jrnz    WEND1A                  ;BR = pimp facing left
    2568                    
    2569 0000be80     4d29          MOVE    A9,A9
    2570 0000be90     ce08          JRN     WEND1C                  ;BR = OBJECT HIT FROM FRONT
    2571                    
    2572 0000bea0     29c9  WEND1B  SRA     18,A9                   ;OBJECT MOVING IS SAME DIRECTION
    2573 0000beb0     29ca          SRA  18,A10                     ;DIVIDE VELS. BY 4
    2574 0000bec0     09eb          movi    PDF,A11
         0000bed0 0000daf0' 
    2575 0000bef0     c00e          JRUC    WEND1D
    2576                    
    2577 0000bf00     4d29  WEND1A  MOVE    A9,A9
    2578 0000bf10     cef8          JRN     WEND1B
    2579                    
    2580 0000bf20     29a9  WEND1C  SRA     19,A9                   ;OBJECTS MOVING IN OPPOSITE DIREC.
    2581 0000bf30     29aa          SRA     19,A10                  ;DIVIDE INTEGER VELS. BY 8
    2582 0000bf40     09eb          movi    PD,A11
         0000bf50 0000d620' 
    2583 0000bf70     05a0          move    @RAND,A0,W
         0000bf80 00000000! 
    2584 0000bfa0     ce03          jrn     SkPTD
    2585 0000bfb0     09eb          movi    PTD1,A11
         0000bfc0 0000dba0' 
    2586 0000bfe0           SkPTD:
    2587                    
    2588 0000bfe0           WEND1D
    2589 0000bfe0     b500          MOVE    *A8(OXVEL+16),A0,W
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   62

         0000bff0     0050  
    2590 0000c000     4120          ADD     A9,A0
    2591 0000c010     b008          MOVE    A0,*A8(OXVEL+16),W
         0000c020     0050  
    2592 0000c030     b700          MOVE    *A8(OYVEL),A0,L
         0000c040     0060  
    2593 0000c050     b701          MOVE    *A8(OZVEL),A1,L
         0000c060     00e0  
    2594 0000c070     4420          sub     A1,A0
    2595 0000c080     b208          MOVE    A0,*A8(OYVEL),L
         0000c090     0060  
    2596 0000c0a0     5621          clr     A1
    2597 0000c0b0     b228          MOVE    A1,*A8(OZVEL),L
         0000c0c0     00e0  
    2598                    
    2599 0000c0d0     0d5f          CALLA   GRUNTRND                ;MAKE A RANDOM GRUNT NOISE
         0000c0e0 00000000! 
    2600 0000c100     0d5f          CALLA   DROPSTUF                ;DROP THE BOOTY
         0000c110 00000000! 
    2601                                                    
    2602 0000c130     b701          MOVE    *A8(OYVEL),A1,L
         0000c140     0060  
    2603 0000c150     b700          MOVE    *A8(OZVEL),A0,L
         0000c160     00e0  
    2604 0000c170     4401          sub     A0,A1
    2605 0000c180     ce2d          jrn     WENFALL
    2606 0000c190     0d5f          calla   DFRMGRND
         0000c1a0 00000000! 
    2607 0000c1c0     0b41          cmpi    5,A1
         0000c1d0     fffa  
    2608 0000c1e0     c727          jrgt    WENFALL
    2609                    
    2610 0000c1f0           WEND1:
    2611 0000c1f0     5600          clr     A0
    2612 0000c200     b208          move    A0,*A8(OYVEL),L
         0000c210     0060  
    2613 0000c220     b208          move    A0,*A8(OZVEL),L
         0000c230     00e0  
    2614 0000c240     4d69          move    A11,A9
    2615 0000c250           GrndDth:
    2616 0000c250     1821          MOVK    1,A1
    2617 0000c260                   JSRP    FRANIM                  ;DO DEATH FRAMES
    2618 0000c2d0     0b6b          cmpi    PTD1,A11
         0000c2e0 ffff245f' 
    2619 0000c300     cb14          jrnz    SkThrowD1
    2620 0000c310     0d5f          calla   ClosestP
         0000c320 00000000! 
    2621 0000c340     4c04          move    A0,A4           ;Player to throw at.
    2622 0000c350     09e0          movi    000480000H,A0   ;y:x offsets
         0000c360 00480000  
    2623 0000c380     0d3f          callr   ThrowD
         0000c390     fc17  
    2624 0000c3a0     09e9          movi    PTD2,A9
         0000c3b0 0000dc80' 
    2625 0000c3d0     1821          MOVK    1,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   63

    2626 0000c3e0                   JSRP    FRANIM                  ;DO rest of Death
    2627 0000c450           SkThrowD1:
    2628 0000c450     c059          jruc    WEND2
    2629                    
    2630 0000c460           WENFALL:
    2631 0000c460     574a          clr     A10
    2632 0000c470     4d69          move    A11,A9
    2633 0000c480           WFLp:
    2634 0000c480     4d4a          move    A10,A10
    2635 0000c490     cb26          jrnz    SkAnim
    2636 0000c4a0     1881          movk    4,A1                    ;* one frame, no sleepin
    2637 0000c4b0                   PUSHP   A9
    2638 0000c4c0                   jsrp    FRANIM
    2639 0000c530                   PULLP   A3
    2640 0000c550     4c0a          move    A0,A10
    2641 0000c560     8721          move    *A9,A1,L
    2642 0000c570     cb18          jrnz    KpFallin
    2643 0000c580     0b6b          cmpi    PTD1,A11
         0000c590 ffff245f' 
    2644 0000c5b0     ca02          jreq    DieToss
    2645 0000c5c0     4c69          move    A3,A9           ;recycle last frame..
    2646 0000c5d0     c012          jruc    KpFallin
    2647 0000c5e0           DieToss:
    2648 0000c5e0     098f          mmtm    SP,A10
         0000c5f0     0020  
    2649 0000c600     0d5f          calla   ClosestP
         0000c610 00000000! 
    2650 0000c630     4c04          move    A0,A4           ;Player to throw at.
    2651 0000c640     09e0          movi    000480000H,A0   ;y:x offsets
         0000c650 00480000  
    2652 0000c670     0d3f          callr   ThrowD
         0000c680     fbe8  
    2653 0000c690     09af          mmfm    SP,A10
         0000c6a0     0400  
    2654 0000c6b0     09e9          movi    PTD2,A9
         0000c6c0 0000dc80' 
    2655 0000c6e0     576b          clr     A11
    2656 0000c6f0     c0d8          jruc    WFLp
    2657 0000c700           KpFallin:
    2658 0000c700           SkAnim:
    2659 0000c700     1820          movk    1,A0
    2660 0000c710     0d5f          calla   PRCSLP
         0000c720 00000000! 
    2661 0000c740     142a          dec     A10
    2662 0000c750     b700          move    *A8(OYVEL),A0,L
         0000c760     0060  
    2663 0000c770     ce08          jrn     GOINGUP
    2664 0000c780     0d5f          calla   DFRMGRND
         0000c790 00000000! 
    2665 0000c7b0     0b41          cmpi    5,A1
         0000c7c0     fffa  
    2666 0000c7d0     c40b          jrlt    HitGRND
    2667 0000c7e0     b700          move    *A8(OYVEL),A0,L
         0000c7f0     0060  
    2668 0000c800           GOINGUP:
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   64

    2669 0000c800     0b20          addi    08000H,A0
         0000c810 00008000  
    2670 0000c830     b208          move    A0,*A8(OYVEL),L
         0000c840     0060  
    2671 0000c850     0d5f          calla   UpdShadV
         0000c860 00000000! 
    2672 0000c880     c0bf          jruc    WFLp
    2673 0000c890           HitGRND:
    2674 0000c890     5600          clr     A0
    2675 0000c8a0     b208          move    A0,*A8(OYVEL),L
         0000c8b0     0060  
    2676 0000c8c0     4d00          move    A8,A0
    2677 0000c8d0     0d5f          calla   SETZPOS
         0000c8e0 00000000! 
    2678 0000c900     b500          move    *A8(OZPOS),A0,W
         0000c910     00d0  
    2679 0000c920     0be0          subi    6,A0
         0000c930     fff9  
    2680 0000c940     b008          move    A0,*A8(OZPOS),W
         0000c950     00d0  
    2681 0000c960     0d5f          calla   SHADUPD
         0000c970 00000000! 
    2682 0000c990     4d40          move    A10,A0
    2683 0000c9a0     ca8a          jrz     GrndDth
    2684 0000c9b0     0d5f          calla   PRCSLP
         0000c9c0 00000000! 
    2685 0000c9e0     c086          jruc    GrndDth
    2686 0000c9f0           WEND2:
    2687 0000c9f0     0d5f          calla   ClrVel
         0000ca00 00000000! 
    2688 0000ca20     4d00          move    A8,A0
    2689 0000ca30     0d5f          calla   DELSHAD
         0000ca40 00000000! 
    2690 0000ca60                   SLEEP   10
    2691                    
    2692 0000caa0     09e9          MOVI    [1,1],A9
         0000cab0 00010001  
    2693 0000cad0                   CREATE  0DFh,ESINK              ;CREATE THE DEADMAN SINK         
    2694 0000cb50                   DIE                             ;AND ME                                                         
    2695                    *************************************************************************
    2696                    
    2697                    *************************************************************************
    2698 0000cb80           PIMPCOLL:
    2699 0000cb80     0b10          .WORD   B1OID|BULLETID
    2700 0000cb90 0000b920'         .LONG   PIMPCOL0
    2701 0000cbb0     0b12          .WORD   B1OID|EXPLODID
    2702 0000cbc0 0000b920'         .LONG   PIMPCOL0
    2703 0000cbe0     0b14          .WORD   B1OID|ROCKETID
    2704 0000cbf0 0000b920'         .LONG   PIMPCOL0
    2705 0000cc10     0b20          .WORD   B2OID|BULLETID
    2706 0000cc20 0000b920'         .LONG   PIMPCOL0
    2707 0000cc40     0b22          .WORD   B2OID|EXPLODID
    2708 0000cc50 0000b920'         .LONG   PIMPCOL0
    2709 0000cc70     0b24          .WORD   B2OID|ROCKETID
    2710 0000cc80 0000b920'         .LONG   PIMPCOL0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   65

    2711 0000cca0     0be2          .WORD   BEOID|EXPLODID
    2712 0000ccb0 0000b920'         .LONG   PIMPCOL0
    2713 0000ccd0     0c00          .word   C1OID           ;ENEMY CAR #1 "CADILLAC" OBJECT I.D.
    2714 0000cce0 0000b920'         .LONG   PIMPCOL0
    2715 0000cd00     0c10          .word   CAR2OID         ;ENEMY CAR #2 "PORSCHE" OBJECT I.D.
    2716 0000cd10 0000b920'         .LONG   PIMPCOL0
    2717 0000cd30     0c20          .word   CAR3OID         ;ENEMY CAR #3 "BELL-JET" OBJECT I.D.
    2718 0000cd40 0000b920'         .LONG   PIMPCOL0
    2719 0000cd60     0c30          .word   TRAN1OID        ;PLAYER TRANSPORT #1 "PORSCHE" OBJECT I.D.
    2720 0000cd70 0000b920'         .LONG   PIMPCOL0
    2721 0000cd90     0000          .WORD   0
    2722 0000cda0 00000000!         .LONG   DUMRTSG
    2723                    
    2724                    ;WALKING JUMPING DEATH FRAGMENT STANDING-SHOOT KNEELING-SHOOT
    2725                    ;STANDING KNEELING
    2726                    
    2727 0000cdc0     0001  PIMPOFF .WORD   1,3,4,9,18,34,50,50
    2728                    *THE PIMP ENEMY, ANIMATION PTR TABLE, FIRST LONG WORD IS THE OFFSET PTR
    2729                    *
    2730 0000ce40 0000cdc0' PIMPTAB .LONG   PIMPOFF
    2731 0000ce60 0000d080'         .LONG   PW,PW,PJMP,PD,PD,LOFDEXP,LOFDEXP1,PDROCK
    2732                    
    2733 0000cf60 00000000!         .LONG   LOFRAG1,LOFRAG2,LOFRAG3,LOFRAG4
    2734 0000cfe0 00000000!         .LONG   LOFRAG1,LOFRAG2,LOFRAG3,LOFRAG4,0
    2735                    *************************************************************************
    2736                    
    2737                    
    2738                    **************************************************************************
    2739                    * PIMP FRAME TABLES     
    2740                    * NORMAL TABLE ENTRY:
    2741                    *       AFRAME  FRAME,SLEEPT,CONTROL_WORD
    2742                    * FIRE FRAME TABLE ENTRY:                   
    2743                    *       FAFRAME FRAME,SLEEPT,XOFFSET,YOFFSET,PROCID,PROCESS_ADDRESS,CW
    2744                    
    2745                    ********************************************************
    2746                    *---> pd1,pd2,pd3,pd4,pd5,pd6,pd7
    2747                    *---> pdf1a,pdf2a,pdf3a,pdf4a,pdf5a,pdf6a
    2748                    *---> pjump1,pjump2,pjump3,pjump4
    2749                    *---> pmwk1,pmwk2,pmwk3,pmwk4,pmwk5,pmwk6,pmwk7
    2750                    *---> prun1r,prun2r,prun4r,prun5r,prun6r,prun7r
    2751                    *---> pshoot9,pshoot10
    2752                    *---> psqsht1,psqsht2
    2753                    *---> ptd1,ptd2,ptd3,ptd4,ptd5,ptd6,ptd7,ptd8,ptd9,ptd10
    2754                    *---> ptw1,ptw2,ptw3,ptw4,ptw5,ptw6
    2755                    *---> pw1,pw2,pw4,pw5,pw6,pw8
    2756                    *---> psp1,psp2,psp3,psp4,psp5,psp6,psp7,psp8,psp9,psp10
    2757                    *---> psp11,psp12,psp13,psp14,psp15
    2758                    ***********************************************************
    2759          00018000  WALKVEL         .set    018000H
    2760          fffed000  MWALKVEL        .set   -013000H
    2761          0002a000  RUNVEL          .set    02A000H
    2762                    
    2763 0000d080           MOVETBL:
    2764 0000d080           PW:
    2765 0000d080 00001700"         .long   pw1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   66

    2766 0000d0a0     0009          .word   9
    2767 0000d0b0 00001780"         .long   pw2
    2768 0000d0d0     0005          .word   5
    2769 0000d0e0 00001800"         .long   pw4
    2770 0000d100     0009          .word   9
    2771 0000d110 00001880"         .long   pw5
    2772 0000d130     0006          .word   6
    2773 0000d140 00001900"         .long   pw6
    2774 0000d160     0004          .word   4
    2775 0000d170 00001980"         .long   pw8
    2776 0000d190     0007          .word   7
    2777 0000d1a0           PWX:
    2778 0000d1a0                   LONGNULL
    2779                    
    2780 0000d1c0           PMWK:
    2781 0000d1c0 00001980"         .long   pw8
    2782 0000d1e0     0007          .word   7
    2783 0000d1f0 00001900"         .long   pw6
    2784 0000d210     0004          .word   4
    2785 0000d220 00001880"         .long   pw5
    2786 0000d240     0006          .word   6
    2787 0000d250 00001800"         .long   pw4
    2788 0000d270     0009          .word   9
    2789 0000d280 00001780"         .long   pw2
    2790 0000d2a0     0005          .word   5
    2791 0000d2b0 00001700"         .long   pw1
    2792 0000d2d0     0009          .word   9
    2793 0000d2e0           PMWKX:
    2794 0000d2e0                   LONGNULL
    2795                    
    2796 0000d300           PRUN:
    2797 0000d300 00000c80"         .long   prun1t
    2798 0000d320     0004          .word   4
    2799 0000d330 00000d00"         .long   prun2t
    2800 0000d350     0004          .word   4
    2801 0000d360 00000d80"         .long   prun3t
    2802 0000d380     0004          .word   4
    2803 0000d390 00000e00"         .long   prun4t
    2804 0000d3b0     0004          .word   4
    2805 0000d3c0 00000e80"         .long   prun5t
    2806 0000d3e0     0004          .word   4
    2807 0000d3f0           PRUNX:
    2808 0000d3f0                   LONGNULL
    2809                    
    2810                    ;PW:
    2811                    ;       .long   pw1
    2812                    ;       .word   DELTAXZ|9,13
    2813                    ;       .long   pw2
    2814                    ;       .word   DELTAXZ|5,8
    2815                    ;       .long   pw4
    2816                    ;       .word   DELTAXZ|9,14
    2817                    ;       .long   pw5
    2818                    ;       .word   DELTAXZ|6,9
    2819                    ;       .long   pw6
    2820                    ;       .word   DELTAXZ|4,4
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   67

    2821                    ;       .long   pw8
    2822                    ;       .word   DELTAXZ|7,10
    2823                    ;PWX:
    2824                    ;       LONGNULL
    2825                    ;
    2826                    ;PMWK:
    2827                    ;       .long   pw8
    2828                    ;       .word   DELTAXZ|7
    2829                    ;       .byte   -4,0
    2830                    ;       .long   pw6
    2831                    ;       .word   DELTAXZ|4
    2832                    ;       .byte   -9,0
    2833                    ;       .long   pw5
    2834                    ;       .word   DELTAXZ|6
    2835                    ;       .byte   -14,0
    2836                    ;       .long   pw4
    2837                    ;       .word   DELTAXZ|9
    2838                    ;       .byte   -8,0
    2839                    ;       .long   pw2
    2840                    ;       .word   DELTAXZ|5
    2841                    ;       .byte   -13,0
    2842                    ;       .long   pw1
    2843                    ;       .word   DELTAXZ|9
    2844                    ;       .byte   -10,0
    2845                    ;PMWKX:
    2846                    ;       LONGNULL
    2847                    ;
    2848                    ;PRUN:
    2849                    ;       .long   prun1t
    2850                    ;       .word   DELTAXZ|4,10
    2851                    ;       .long   prun2t
    2852                    ;       .word   DELTAXZ|4,10
    2853                    ;       .long   prun3t
    2854                    ;       .word   DELTAXZ|4,9
    2855                    ;       .long   prun4t
    2856                    ;       .word   DELTAXZ|4,11
    2857                    ;       .long   prun5t
    2858                    ;       .word   DELTAXZ|4,9
    2859                    ;PRUNX:
    2860                    ;       LONGNULL
    2861 0000d410           MOVEEND:
    2862                    
    2863 0000d410           WALKOUT:
    2864 0000d410 00001a00"         .long   psp1a
    2865 0000d430     0014          .word   20
    2866 0000d440 00001a80"         .long   psp2a
    2867 0000d460     000a          .word   10
    2868 0000d470 00001b00"         .long   psp3a
    2869 0000d490     000a          .word   10
    2870 0000d4a0 00000c80"         .long   prun1t
    2871 0000d4c0     0006          .word   6
    2872 0000d4d0 00000e80"         .long   prun5t
    2873 0000d4f0     0006          .word   6
    2874 0000d500 00000d00"         .long   prun2t
    2875 0000d520     0006          .word   6
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   68

    2876 0000d530 00000d80"         .long   prun3t
    2877 0000d550     0006          .word   6
    2878 0000d560 00000e00"         .long   prun4t
    2879 0000d580     0006          .word   6
    2880 0000d590                   LONGNULL
    2881                    
    2882 0000d5b0           PDROCK:                         ;PIMP HIT BY ROCKET
    2883 0000d5b0 00000000!         .long   LCREOSOTE
    2884 0000d5d0     2005          .word   NEWPALET|5
    2885 0000d5e0 00000000!         .LONG   NARCS
    2886 0000d600                   LONGNULL
    2887 0000d620           PD:
    2888 0000d620 00000480"         .long   pd2
    2889 0000d640     0007          .word   7
    2890 0000d650 00000500"         .long   pd3
    2891 0000d670     0007          .word   7
    2892 0000d680 00000580"         .long   pd4
    2893 0000d6a0     0007          .word   7
    2894 0000d6b0 00000600"         .long   pd5
    2895 0000d6d0     0007          .word   7
    2896 0000d6e0 00001480"         .long   ptd10
    2897 0000d700     0007          .word   7
    2898 0000d710                   LONGNULL
    2899 0000d730           PIMPBUST:
    2900 0000d730 00000380"         .long   pbust2
    2901 0000d750     0008          .word   8
    2902 0000d760 00000300"         .long   pbust1
    2903 0000d780     0008          .word   8
    2904 0000d790 00000380"         .long   pbust2
    2905 0000d7b0     0008          .word   8
    2906 0000d7c0           PCUFF:
    2907 0000d7c0 00000400"         .long   pbust3
    2908 0000d7e0     0008          .word   8
    2909 0000d7f0                   LONGNULL
    2910 0000d810           PJMP:
    2911 0000d810 00000800"         .long   pjump1n
    2912 0000d830     0005          .word   5
    2913 0000d840 00000880"         .long   pjump2n
    2914 0000d860     0005          .word   5
    2915 0000d870 00000900"         .long   pjump3n
    2916 0000d890     0005          .word   5
    2917 0000d8a0 00000980"         .long   pjump4n
    2918 0000d8c0     0005          .word   5
    2919 0000d8d0                   LONGNULL
    2920                    *       FAFRAME FRAME,SLEEPT,XOFFSET,YOFFSET,PROCID,PROCESS_ADDRESS,CW
    2921 0000d8f0           PHSQSHT:
    2922 0000d8f0 00001000"         .long   psqsht1
    2923 0000d910     0007          .word   7
    2924 0000d920 00001080"         .long   psqsht2
    2925 0000d940     8007          .word   SPAWNP|7,35,-13,0EBH
    2926 0000d980 00000000!         .long   EBULLET
    2927 0000d9a0                   LONGNULL
    2928 0000d9c0           PSQSHT:
    2929 0000d9c0 00001000"         .long   psqsht1
    2930 0000d9e0     0009          .word   9
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   69

    2931 0000d9f0 00001080"         .long   psqsht2
    2932 0000da10     8009          .word   SPAWNP|9,21,-13,0EBH
    2933 0000da50 00000000!         .long   EBULLET
    2934 0000da70 00001000"         .long   psqsht1
    2935 0000da90     0004          .word   4
    2936 0000daa0 00001080"         .long   psqsht2
    2937 0000dac0     0004          .word   4
    2938 0000dad0                   LONGNULL
    2939 0000daf0           PDF:
    2940 0000daf0 00000680"         .long   pdf2a
    2941 0000db10     000a          .word   10
    2942 0000db20 00000700"         .long   pdf3a
    2943 0000db40     000a          .word   10
    2944 0000db50 00000780"         .long   pdf4a
    2945 0000db70     000a          .word   10
    2946 0000db80                   LONGNULL
    2947                    *       FAFRAME FRAME,SLEEPT,XOFFSET,YOFFSET,PROCID,PROCESS_ADDRESS,CW
    2948 0000dba0           PTD1:
    2949 0000dba0 00001100"         .long   ptd1
    2950 0000dbc0     0006          .word   6
    2951 0000dbd0 00001180"         .long   ptd2
    2952 0000dbf0     0006          .word   6
    2953 0000dc00 00001200"         .long   ptd3
    2954 0000dc20     0006          .word   6
    2955 0000dc30 00001280"         .long   ptd4
    2956 0000dc50     0006          .word   6
    2957 0000dc60                   LONGNULL
    2958 0000dc80           PTD2:
    2959 0000dc80 00001300"         .long   ptd6
    2960 0000dca0     0006          .word   6
    2961 0000dcb0 00001380"         .long   ptd7
    2962 0000dcd0     0006          .word   6
    2963 0000dce0 00001400"         .long   ptd9
    2964 0000dd00     0006          .word   6
    2965 0000dd10 00001480"         .long   ptd10
    2966 0000dd30     0006          .word   6
    2967 0000dd40                   LONGNULL
    2968                    *       FAFRAME FRAME,SLEEPT,XOFFSET,YOFFSET,PROCID,PROCESS_ADDRESS,CW
    2969 0000dd60           PSHOOT:
    2970 0000dd60 00000f00"         .long   pshoot9
    2971 0000dd80     0009          .word   9
    2972 0000dd90 00000f80"         .long   pshoot10
    2973 0000ddb0     8009          .word   SPAWNP|9,21,-13,0EBH
    2974 0000ddf0 00000000!         .long   EBULLET
    2975 0000de10 00000f00"         .long   pshoot9
    2976 0000de30     0004          .word   4
    2977 0000de40 00000f80"         .long   pshoot10
    2978 0000de60     0004          .word   4
    2979 0000de70                   LONGNULL
    2980 0000de90           PHSHOOT:
    2981 0000de90 00000f00"         .long   pshoot9
    2982 0000deb0     0007          .word   7
    2983 0000dec0 00000f80"         .long   pshoot10
    2984 0000dee0     8007          .word   SPAWNP|7,40,-13,0EBH
    2985 0000df20 00000000!         .long   EBULLET
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   70

    2986 0000df40                   LONGNULL
    2987 0000df60           PRUNSHT:
    2988 0000df60 00000f80"         .long   pshoot10
    2989 0000df80     9005          .word   SPAWNP|DELTAXZ|5,21,-13,0EBH
    2990 0000dfc0 00000000!         .long   EBULLET
    2991 0000dfe0     0008          .word   8                       ;delta X
    2992 0000dff0                   LONGNULL
    2993 0000e010           PTW1:                           ;PIMP THROW Part 1
    2994 0000e010 00001500"         .long   ptw1
    2995 0000e030     000c          .word   12
    2996 0000e040                   LONGNULL
    2997 0000e060           PTW2:                           ;PIMP THROW Part 2
    2998 0000e060 00001580"         .long   ptw2
    2999 0000e080     0009          .word   9
    3000                    ;       .word   SPAWNP|8,-30,-22,0EBH
    3001                    ;       .long   EBOMB
    3002 0000e090 00001600"         .long   ptw3
    3003 0000e0b0     0009          .word   9
    3004 0000e0c0 00001680"         .long   ptw4
    3005 0000e0e0     0009          .word   9
    3006 0000e0f0                   LONGNULL
    3007 0000e110           PRUNTW1:                                ;PIMP Running THROW Part 1
    3008 0000e110 00001500"         .long   ptw1
    3009 0000e130     1009          .word   DELTAXZ|9,9
    3010 0000e150                   LONGNULL
    3011 0000e170           PRUNTW2:                                ;PIMP Running THROW Part 2
    3012 0000e170 00001580"         .long   ptw2
    3013 0000e190     1007          .word   DELTAXZ|7,7
    3014 0000e1b0 00001600"         .long   ptw3
    3015 0000e1d0     1007          .word   DELTAXZ|7,5
    3016 0000e1f0 00001680"         .long   ptw4
    3017 0000e210     1007          .word   DELTAXZ|7,3
    3018 0000e230                   LONGNULL
    3019 0000e250           PDUCK:
    3020 0000e250           PSQUAT:
    3021 0000e250 00001000"         .long   psqsht1
    3022 0000e270     0009          .word   9
    3023 0000e280 00001080"         .long   psqsht2
    3024 0000e2a0     0009          .word   9
    3025 0000e2b0 00001000"         .long   psqsht1
    3026 0000e2d0     0005          .word   5
    3027 0000e2e0 00001080"         .long   psqsht2
    3028 0000e300     0005          .word   5
    3029 0000e310                   LONGNULL
    3030 0000e330           PREACH1
    3031 0000e330 00001a00"         .long   psp1a
    3032 0000e350     0004          .word   4
    3033 0000e360 00001a80"         .long   psp2a
    3034 0000e380     0008          .word   8
    3035 0000e390 00001b00"         .long   psp3a
    3036 0000e3b0     0008          .word   8
    3037 0000e3c0 00001b80"         .long   psp4a
    3038 0000e3e0     0005          .word   5
    3039 0000e3f0 00001c00"         .long   psp5a
    3040 0000e410     000a          .word   10
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   71

    3041 0000e420                   LONGNULL
    3042 0000e440           PREACH2:
    3043 0000e440 00001c80"         .long   psp6a
    3044 0000e460     0008          .word   8
    3045 0000e470 00001d00"         .long   psp7a
    3046 0000e490     0005          .word   5
    3047 0000e4a0                   LONGNULL
    3048 0000e4c0           PKNEEL:
    3049 0000e4c0 00001d80"         .long   pimphide1
    3050 0000e4e0     0006          .word   6
    3051 0000e4f0 00001d80"         .long   pimphide1
    3052 0000e510     0006          .word   6
    3053 0000e520 00001d80"         .long   pimphide1
    3054 0000e540     0006          .word   6
    3055 0000e550 00001d80"         .long   pimphide1
    3056 0000e570     0006          .word   6
    3057 0000e580                   LONGNULL
    3058 0000e5a0           PKLOOK:
    3059 0000e5a0 00001e00"         .long   pimphide2
    3060 0000e5c0     0007          .word   7
    3061 0000e5d0 00001e80"         .long   pimphide3
    3062 0000e5f0     0008          .word   8
    3063 0000e600 00001f00"         .long   pimphide4
    3064 0000e620     000a          .word   10
    3065 0000e630 00001e80"         .long   pimphide3
    3066 0000e650     0008          .word   8
    3067 0000e660 00001e00"         .long   pimphide2
    3068 0000e680     0007          .word   7
    3069 0000e690                   LONGNULL
    3070 0000e6b0           PKNEELK:
    3071 0000e6b0 00001d80"         .long   pimphide1
    3072 0000e6d0     0009          .word   9
    3073 0000e6e0 00001e00"         .long   pimphide2
    3074 0000e700     0007          .word   7
    3075 0000e710 00001e00"         .long   pimphide2
    3076 0000e730     0007          .word   7
    3077 0000e740 00001e00"         .long   pimphide2
    3078 0000e760     0007          .word   7
    3079 0000e770 00001d80"         .long   pimphide1
    3080 0000e790     0009          .word   9
    3081 0000e7a0                   LONGNULL
    3082 0000e7c0           PTALHIDE:
    3083 0000e7c0 00001a80"         .long   psp2a
    3084 0000e7e0     0007          .word   7
    3085 0000e7f0 00001a80"         .long   psp2a
    3086 0000e810     0007          .word   7
    3087 0000e820 00001a80"         .long   psp2a
    3088 0000e840     0007          .word   7
    3089 0000e850                   LONGNULL
    3090 0000e870           PTALLOOK:
    3091 0000e870 00001b00"         .long   psp3a
    3092 0000e890     000a          .word   10
    3093 0000e8a0 00001b00"         .long   psp3a
    3094 0000e8c0     000a          .word   10
    3095 0000e8d0 00001b00"         .long   psp3a
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   72

    3096 0000e8f0     000a          .word   10
    3097 0000e900                   LONGNULL
    3098 0000e920           PLOWHIDE:
    3099 0000e920 00001c80"         .long   psp6a
    3100 0000e940     0007          .word   7
    3101 0000e950 00001c80"         .long   psp6a
    3102 0000e970     0007          .word   7
    3103 0000e980 00001c80"         .long   psp6a
    3104 0000e9a0     0007          .word   7
    3105 0000e9b0                   LONGNULL
    3106 0000e9d0           PLOWLOOK:
    3107 0000e9d0 00001d00"         .long   psp7a
    3108 0000e9f0     0008          .word   8
    3109 0000ea00 00001d00"         .long   psp7a
    3110 0000ea20     0008          .word   8
    3111 0000ea30 00001d00"         .long   psp7a
    3112 0000ea50     0008          .word   8
    3113 0000ea60 00001d00"         .long   psp7a
    3114 0000ea80     0008          .word   8
    3115 0000ea90           PIMPNUL:
    3116 0000ea90                   LONGNULL
    3117                    
    3118                    ****************************************************************************
    3119 0000eab0           PIMPCRM1:
    3120 0000eab0     05a0          move    @(WORLDTLX+16),A0,W                              
         0000eac0 00000010! 
    3121 0000eae0     0b00          addi    230,A0
         0000eaf0     00e6  
    3122 0000eb00     05a1          move    @PLYMIN,A1,W                                                                     
         0000eb10 00000000! 
    3123 0000eb30     0b01          addi    5,A1
         0000eb40     0005  
    3124 0000eb50     2601          sll     16,A1
    3125 0000eb60     ec01          movx    A0,A1
    3126 0000eb70     56c6          clr     A6
    3127 0000eb80     09ee          movi    PIMPINIT,A14    
         0000eb90 000004c0' 
    3128 0000ebb0     0d5f          calla   ESINITLL
         0000ebc0 00000000! 
    3129 0000ebe0     5600          clr     A0
    3130 0000ebf0     b208          move    A0,*A8(OBLIPIMG),L
         0000ec00     0260  
    3131                    
    3132 0000ec10     0d5f          calla   ClrVel
         0000ec20 00000000! 
    3133 0000ec40     0d5f          calla   YFLP
         0000ec50 00000000! 
    3134 0000ec70     09e9          movi    PTALHIDE,A9     
         0000ec80 0000e7c0' 
    3135 0000eca0     1821          movk    1,A1
    3136 0000ecb0                   jsrp    FRANIM
    3137 0000ed20                   SOUND1  CLENSND
    3138 0000ed80     09e9          movi    PTALLOOK,A9     
         0000ed90 0000e870' 
    3139 0000edb0     1821          movk    1,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:42 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- P I M P >>>                                      PAGE   73

    3140 0000edc0                   jsrp    FRANIM
    3141                    
    3142 0000ee30                   SLEEP   20
    3143 0000ee70           CRM1X:
    3144 0000ee70     09e1          MOVI    ENEMIES,A1
         0000ee80 00000000! 
    3145 0000eea0     4d00          MOVE    A8,A0
    3146 0000eeb0     0d5f          CALLA   DELSUPP
         0000eec0 00000000! 
    3147 0000eee0     b501          move    *A8(OPAL),A1,W
         0000eef0     0160  
    3148 0000ef00     0581          move    A1,@CRIMEPAL,W
         0000ef10 00000000! 
    3149 0000ef30     0d5f          CALLA   DELSOBJ
         0000ef40 00000000! 
    3150 0000ef60                   retp
    3151                    ****************************************************************************
    3152                    

 No Errors,  No Warnings
