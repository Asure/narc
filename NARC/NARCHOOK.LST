TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .FILE   "NARCHOOK.ASM"
       3                    
       4                    **************************************************************************
       5                    *                                                                        *
       6                    *       COPYRIGHT (C) 1988 WILLIAMS ELECTRONICS GAMES, INC.              *
       7                    *       ALL RIGHTS RESERVED.                                             *
       8                    *                                                                        *
       9                    **************************************************************************
      10                    
      11                            .WIDTH  132
      12                            .OPTION B,D,L
      13                            .MNOLIST
      14                    
      15 00000000     f420  OOHSND1 .WORD   0F020H|NINTEQ,040H,080bAH,0 ;Marilyn ooh
      16 00000040     f420  OOHSND2 .WORD   0F020H|NINTEQ,040H,080bbH,0 ;Slow ooh
      17 00000080     f421  HELPSND .WORD   0F021H|NINTEQ,060H,08037H,0 ;SCREAM
      18 000000c0     f060  MOAN    .WORD   0F060H,060H,080CFH,0     ;death by bullet
      19                    
      20                    *
      21                    *EXTERNALS
      22                            .GLOBL  HEADBUTT
      23                            .GLOBAL LOFDEXP,LOFDEXP1,LOFRAG1,LOFRAG2,LOFRAG3,LOFRAG4,LOFDFLA
      24                            .GLOBAL LOFDROCK,LDEXP1
      25                    
      26                    ; To change from Delta movement to skaters, check the following
      27                    ;       call to Zoff
      28                    ;       animation scripts for walkslow, walkmed, walkfast
      29                    ;       velocity set in functions goslow, gomed, gofast
      30                    
      31                    ***************************************************************************
      32                    ; HOOK SUB_TYPES
      33                    ; 0 - w/ no coors starts at PLZMIN and 1 to 2 full screens away from
      34                    ;       players in X.  90% chance of coming up to the right.
      35                    ; 1 - w/ no coors comes out any available door, else it reverts to type 0
      36                    ;15 - type 0, but has no collision vector for 1 second
      37 00000100           DTBL:
      38 00000100 000010f0'         .long   D0,D1
      39 00000140 00000c50'         .long   D1,D1,D1,D1,D1,D1,D1
      40 00000220 00000c50'         .long   D1,D1,D1,D1,D1,D1,D15
      41                    ***************************************************************************
      42                    
      43                    *       GET THE SYSTEM STUFF
      44                            .INCLUDE        "\video\mprocEQU.ASM"   ;MPROC equates
      45                            .INCLUDE        "\video\DISPEQU.ASM"    ;Display processor equates
      46                            .INCLUDE        "\video\GSP.INC"        ;GSP assembler equates
      47                            .INCLUDE        "\video\SYS.INC"        ;Zunit system equates
      48                            .INCLUDE        "\video\MACROS.HDR"     ;Macros, Yeah!
      49                    *       LOCAL STUFF
      50                            .INCLUDE        "NARCEQU.ASM"           ;NARC Equates
      51                            .INCLUDE        "NARCTEQU.ASM"
      52                            .include        "imgtbl.glo"
      53                            .INCLUDE        "NARCFRAG.GLO"
      54                    
      55                            .include        "narchook.tbl"
      56                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE    2

      57                    ************************* FUNCTION TABLE ***************************
      58 00000300           HK_FUNCS:
      59 00000300 000003a0'         .long   BOOF
      60 00000320 00000000!         .long   GoDestD
      61 00000340 00002c30'         .long   GetXVel
      62 00000360 00006000          .long   06000H  ;MaxXZAngle
      63 00000380 0000003c          .long   60      ;FlipTiks
      64                    ********************************************************************
      65                    
      66                    ********************************************************************
      67                    ;To catch a nulled dereference through HK_FUNCS
      68 000003a0     c000  BOOF:   jruc    $
         000003b0     fffe  
      69                    ********************************************************************
      70                    
      71                    ********** GEORGE -- COMMENT THIS STUFF OUT **************
      72                    ;* Also uncomment RETS in GVARINIT
      73 00000000                   .BSS    hookmax,16,16           ;U - max # of active hookmen
      74 00000010                   .BSS    hookbrain,16,16 ;U - tiks between brain funcs
      75 00000020                   .BSS    hookflirt,16,16 ;U - tiks between flirt funcs
      76                    
      77 000003c0           VARINIT:
      78 000003c0     09c1          movi    120,A1
         000003d0     0078  
      79 000003e0     0581          move    A1,@hookflirt,W
         000003f0 00000020- 
      80 00000410     1bc1          movk    30,A1
      81 00000420     0581          move    A1,@hookmax,W
         00000430 00000000- 
      82 00000450     09c1          movi    15,A1
         00000460     000f  
      83 00000470     0581          move    A1,@hookbrain,W
         00000480 00000010- 
      84 000004a0     0960          rets
      85                    **********************************************************
      86                    
      87                    **************************************************************************
      88                    *INIT TABLE
      89                    *       .LONG   OXVEL,OYVEL,OXVAL,XYVAL
      90                    *       .WORD   OZPOS,OZVEL
      91                    *       .LONG   OIMG,OZSIZ,OCVECT
      92                    *       .WORD   OFLAGS,OID
      93 000004b0           HOOKINIT
      94 000004b0 00000000          .LONG   0,0,0,0
      95 00000530     0000          .WORD   0,0
      96 00000550 00000000"         .LONG   hkwlk1,HOOKZSIZ,HKCOLL
      97 000005b0     8002          .WORD   DMAWNZ,HOOKEOID
      98 000005d0 00000000!         .LONG   HOOKBLIP
      99                    **************************************************************************
     100                    
     101                    **************************************************************************
     102 000005f0           HOOKCOLD:
     103                    ;* PARMS
     104                    ; A5  - Y:X
     105                    ; A6  - 0:Z     ;if A5 and A6=0 then Random Position
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE    3

     106                    ; A14 - 0.8:#.4:rand#.4:00EH.8:OIDtype.4:OIDsubtype.4
     107                    
     108 000005f0     098f          mmtm    SP,A0,A1,A2,A7,A9,A10,A11
         00000600     e170  
     109 00000610     0d3f          callr   VARINIT
         00000620     ffd9  
     110                            
     111 00000630     4ca9          move    A5,A9           ;Y:X in A9
     112 00000640     4cca          move    A6,A10          ;0:Z in A10
     113 00000650     4dcb          move    A14,A11         ;ID in A11
     114                    
     115 00000660     4dc0          move    A14,A0
     116 00000670     2580          sll     12,A0
     117 00000680     2c80          srl     28,A0
     118 00000690     ca03          jrz     SkRndCnt
     119 000006a0     0d5f          calla   RANDU
         000006b0 00000000! 
     120 000006d0           SkRndCnt:
     121 000006d0     4dc2          move    A14,A2
     122 000006e0     2502          sll     8,A2
     123 000006f0     2c82          srl     28,A2
     124 00000700     4002          add     A0,A2
     125 00000710           ColdLp: 
     126 00000710                   CREATE  HOOKEPID,HOOKER ;allocate process?      (bashes A1,A7)
     127 00000790     ca01          jrz     ColdX
     128 000007a0     3d42          dsjs    A2,ColdLp
     129 000007b0           ColdX:
     130 000007b0     09af          mmfm    SP,A0,A1,A2,A7,A9,A10,A11
         000007c0     0e87  
     131 000007d0     0960          rets
     132                    **************************************************************************
     133                    
     134                    *********************  START OF HOOKER PROCESS  *************************
     135 000007e0           HOOKER:
     136                    * A9  - Y:X
     137                    * A10 - 0:Z     ;if A9,A10 = 0 generate random start pos.
     138                    * A11 - 0.8:#.4:rand#.4:00EH.8:OIDtype.4:OIDsubtype.4
     139                    ;based on sub-type, jump to appropriate routine
     140                    
     141 000007e0           MaxWait:
     142                            ;* clown drops must come out..
     143 000007e0     4d60          move    A11,A0
     144 000007f0     2780          sll     28,A0
     145 00000800     2c80          srl     28,A0
     146 00000810     0b40          cmpi    15,A0
         00000820     fff0  
     147 00000830     ca0d          jrz     MaxWaitX
     148                    
     149 00000840     05a0          move    @hookmax,A0,W
         00000850 00000000- 
     150 00000870     05a1          move    @HOOKCNT,A1,W
         00000880 00000000! 
     151 000008a0     4801          cmp     A0,A1
     152 000008b0     c405          jrlt    MaxWaitX
     153 000008c0                   SLEEP   30
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE    4

     154 00000900     c0ed          jruc    MaxWait
     155 00000910           MaxWaitX:
     156 00000910                   INCW    @HOOKCNT
     157                    
     158 00000980     4d60          move    A11,A0
     159 00000990     2780          sll     28,A0
     160 000009a0     2c80          srl     28,A0
     161 000009b0     24a0          sll     5,A0
     162 000009c0     0b20          addi    DTBL,A0
         000009d0 00000100' 
     163 000009f0     8600          move    *A0,A0,L
     164 00000a00     0160          jump    A0
     165                    
     166                    **************************************************************************
     167 00000a10           D15:
     168                    ;indestructible hooker
     169 00000a10                   CREATE  HOOKEPID,HkSetCol       ;(bashes A1,A7)
     170 00000a90     b3a0          move    A13,*A0(ETEMP1),L
         00000aa0     0180  
     171 00000ab0     c063          jruc    D0
     172                    
     173 00000ac0           HkSetCol:
     174                    ;* Process to wait before setting hookers collision vector
     175 00000ac0                   SLEEP   36
     176 00000b10     b7a0          move    *A13(ETEMP1),A0,L
         00000b20     0180  
     177 00000b30     0d5f          calla   GETA8
         00000b40 00000000! 
     178 00000b60     ca0b          jrz     NoHk
     179 00000b70     b500          move    *A8(OID),A0,W
         00000b80     01a0  
     180 00000b90     0520          zext    A0,W
     181 00000ba0     0b40          cmpi    HOOKEOID|15,A0
         00000bb0     f140  
     182 00000bc0     cb05          jrnz    NoHk
     183 00000bd0     09e0          movi    HKCOLL,A0
         00000be0 00004590' 
     184 00000c00     b208          move    A0,*A8(OCVECT),L
         00000c10     01d0  
     185 00000c20           NoHk:
     186 00000c20                   DIE
     187                    **************************************************************************
     188                    
     189                    **************************************************************************
     190 00000c50           D1:
     191                    ;DISPATCH FROM A DOOR   
     192 00000c50     4d20          move    A9,A0
     193 00000c60     5540          or      A10,A0
     194 00000c70     cb5d          jrnz    GotCoors
     195                    
     196 00000c80     09c0          movi    5,A0
         00000c90     0005  
     197 00000ca0           DoorWait:
     198 00000ca0     0d5f          calla   GETDOOR
         00000cb0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE    5

     199 00000cd0     cb0e          jrnz    GotDoor
     200 00000ce0                   PUSHP   A0
     201 00000cf0     09c0          movi    60,A0
         00000d00     003c  
     202 00000d10     0d5f          calla   RANDU
         00000d20 00000000! 
     203 00000d40     0d5f          calla   PRCSLP
         00000d50 00000000! 
     204 00000d70                   PULLP   A0
     205 00000d90     1420          dec     A0
     206 00000da0     c1ef          jrp     DoorWait
     207 00000db0     c033          jruc    D0
     208 00000dc0           GotDoor:
     209 00000dc0                   JSRP    DOOROPEN                ;OPEN SEZ-A-ME
     210 00000e30                   CREATE  0E1H,CLOZDOOR           ;CLOSE THE DOOR
     211 00000eb0     09ee          movi    HOOKINIT,A14
         00000ec0 000004b0' 
     212 00000ee0     0d5f          calla   DOORRITE        ;rets upper Y,X start pos in A1
         00000ef0 00000000! 
     213 00000f10     09e6          movi    HKTAB,A6
         00000f20 00004820' 
     214 00000f40     098f          mmtm    SP,A11
         00000f50     0010  
     215 00000f60     0d5f          calla   ESINITUL        ;CREATE HOOK
         00000f70 00000000! 
     216 00000f90     09af          mmfm    SP,A11
         00000fa0     0800  
     217 00000fb0     ca00          jrz     HOOK_DIE        ;CREATE BOMBED
         00000fc0     0311  
     218                    
     219 00000fd0     b168          move    A11,*A8(OID),W
         00000fe0     01a0  
     220 00000ff0     4d00          move    A8,A0
     221                    ***     calla   DELSHAD
     222 00001000     09e2          movi    -010000H,A2     ;X VELOCITY
         00001010 ffff0000  
     223 00001030     09e9          movi    WALKOUT,A9      ;GET ANIMATION SCRIPT
         00001040 000053f0' 
     224 00001060                   JSRP    OUTDOOR
     225 000010d0     4d00          move    A8,A0
     226                    ***     calla   SHADST
     227 000010e0     c043          jruc    InitEnmy
     228                    
     229                    
     230                    **************************************************************************
     231 000010f0           D0:     
     232 000010f0     4d20          move    A9,A0
     233 00001100     5540          or      A10,A0
     234 00001110     cb13          jrnz    GotCoors
     235                    
     236                    *Enemy object initialization
     237 00001120     05a9          move    @(WORLDTLX+16),A9,W                              
         00001130 00000010! 
     238 00001150     0be9          subi    250,A9
         00001160     ff05  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE    6

     239 00001170     09c0          movi    950,A0
         00001180     03b6  
     240 00001190     0d5f          calla   RANDPER
         000011a0 00000000! 
     241 000011c0     c902          jrnc    StrtLft
     242 000011d0     0b09          addi    1012,A9
         000011e0     03f4  
     243 000011f0           StrtLft:
     244 000011f0     05a0          move    @PLYMIN,A0,W                                                                     
         00001200 00000000! 
     245 00001220     2600          sll     16,A0
     246 00001230     ee09          movy    A0,A9   ;* initial position                                                      
     247 00001240     574a          clr     A10
     248                    
     249 00001250           GotCoors:
     250 00001250     4d21          move    A9,A1
     251 00001260     09e6          movi    HKTAB,A6
         00001270 00004820' 
     252 00001290     09ee          movi    HOOKINIT,A14    
         000012a0 000004b0' 
     253 000012c0     098f          mmtm    SP,A9,A10,A11
         000012d0     0070  
     254 000012e0     0d5f          calla   ESINITLL                ;CREATE HOOK
         000012f0 00000000! 
     255 00001310     09af          mmfm    SP,A9,A10,A11
         00001320     0e00  
     256 00001330     ca00          jrz     HOOK_DIE
         00001340     02d9  
     257                    ;Y:X in A9
     258                    ;0:Z in A10
     259 00001350     4d4a          move    A10,A10
     260 00001360     cb04          jrnz    GotZC
     261 00001370     ef2a          movy    A9,A10
     262 00001380     2e0a          srl     16,A10
     263 00001390     0bea          subi    ZORIGIN,A10
         000013a0     ff37  
     264 000013b0           GotZC:
     265 000013b0     b128          move    A9,*A8(OXPOS),W
         000013c0     0090  
     266 000013d0     b148          move    A10,*A8(OZPOS),W
         000013e0     00d0  
     267 000013f0     0b0a          addi    ZORIGIN,A10
         00001400     00c8  
     268 00001410     b500          move    *A8(OSIZEY),A0,W
         00001420     0150  
     269 00001430     440a          sub     A0,A10
     270 00001440     b148          move    A10,*A8(OYPOS),W
         00001450     00b0  
     271 00001460     b168          move    A11,*A8(OID),W
         00001470     01a0  
     272 00001480     278b          sll     28,A11
     273 00001490     2c8b          srl     28,A11
     274 000014a0     0b4b          cmpi    15,A11
         000014b0     fff0  
     275 000014c0     cb05          jrnz    SkNilCol
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE    7

     276 000014d0     09e0          movi    DUMCOLL,A0
         000014e0 00000000! 
     277 00001500     b208          move    A0,*A8(OCVECT),L
         00001510     01d0  
     278 00001520           SkNilCol:
     279                    ;       jruc    InitEnmy
     280                    
     281                    
     282                    ****************************************************************************
     283 00001520           InitEnmy:
     284 00001520     0d5f          calla   ClrVel
         00001530 00000000! 
     285 00001550     5600          clr     A0
     286 00001560     b00d          move    A0,*A13(FLIRTING),W
         00001570     0190  
     287 00001580     b20d          move    A0,*A13(DEST),L
         00001590     01e0  
     288 000015a0     b20d          move    A0,*A13(TEMPDEST),L
         000015b0     0200  
     289 000015c0     ac0d          movb    A0,*A13(DEST_TAG)
         000015d0     01c0  
     290 000015e0     ac0d          movb    A0,*A13(ZPER)
         000015f0     01c8  
     291 00001600     b20d          move    A0,*A13(WANTOBJ),L
         00001610     0220  
     292 00001620     b20d          move    A0,*A13(TIKCTRS),L
         00001630     01a0  
     293 00001640     b20d          move    A0,*A13(EBYTES),L
         00001650     0180  
     294 00001660     ac0d          movb    A0,*A13(GOOSETIK)
         00001670     0188  
     295 00001680     18c0          movk    6,A0
     296 00001690     0d5f          calla   RANDU
         000016a0 00000000! 
     297 000016c0     1040          addk    2,A0
     298 000016d0     ac0d          movb    A0,*A13(GOOSECNT)
         000016e0     0180  
     299                    
     300 000016f0     09e0          movi    HK_FUNCS,A0
         00001700 00000300' 
     301 00001720     b20d          move    A0,*A13(FUNCS),L
         00001730     00e0  
     302                    
     303 00001740     b500          move    *A8(OID),A0,W
         00001750     01a0  
     304 00001760     0b80          andi    0FH,A0
         00001770 fffffff0  
     305 00001790     0b40          cmpi    0FH,A0
         000017a0     fff0  
     306 000017b0     cb0d          jrnz    SkTits
     307 000017c0     0d3f          callr   ZCHECK
         000017d0     0030  
     308 000017e0     09e9          movi    HK_TITS,A9
         000017f0 00005a40' 
     309 00001810     1821          movk    1,A1
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE    8

     310 00001820                   jsrp    FRANIM
     311 00001890           SkTits:
     312                    
     313 00001890     09e0          movi    HK_WALK,A0
         000018a0 00005190' 
     314 000018c0     b20d          move    A0,*A13(ANIMPTR),L
         000018d0     0120  
     315                    
     316 000018e0     c050          jruc    HK_MOVE
     317                    **************************************************************************
     318                    
     319                    **************************************************************************
     320 000018f0           HK_XCHECK:
     321 000018f0     05a2          move    @SCRNLR,A2,W            ;GET SCREEN RT.
         00001900 00000000! 
     322 00001920     b500          move    *A8(OXPOS),A0,W
         00001930     0090  
     323 00001940     05a1          move    @WORLDTL,A1,W
         00001950 00000000! 
     324 00001970     4420          sub     A1,A0                   ;SUBTRACT OUT WORLD BASE
     325                    
     326 00001980     4840          cmp     A2,A0                   ;IS IT PAST THE RT?
     327 00001990     c70a          jrgt    OffRite
     328                    
     329 000019a0     05a2          move    @SCRNTL,A2,W            ;GET SCREEN LEFT
         000019b0 00000000! 
     330 000019d0     b501          move    *A8(OSIZE),A1,W
         000019e0     0140  
     331 000019f0     4001          add     A0,A1                   ;RIGHT EDGE OF OBJECT
     332 00001a00     4841          cmp     A2,A1
     333 00001a10     c407          jrlt    OffLeft
     334 00001a20     0320          clrc
     335 00001a30     0960          rets
     336                    
     337 00001a40           OffRite:
     338 00001a40     0d5f          calla   T_YFLP
         00001a50 00000000! 
     339 00001a70     0de0          setc
     340 00001a80     0960          rets
     341                    
     342 00001a90           OffLeft:
     343 00001a90     0d5f          calla   T_NOYFLP
         00001aa0 00000000! 
     344 00001ac0     0de0          setc
     345 00001ad0     0960          rets
     346                    **************************************************************************
     347                    
     348                    
     349                    **************************************************************************
     350 00001ae0           ZCHECK:
     351 00001ae0     b501          move    *A8(OZPOS),A1,W
         00001af0     00d0  
     352 00001b00     05a0          move    @PLZMIN,A0,W
         00001b10 00000000! 
     353 00001b30     10a0          addk    5,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE    9

     354 00001b40     4401          sub     A0,A1
     355 00001b50     cf0b          jrnn    ZMinOK
     356 00001b60     b008          move    A0,*A8(OZPOS),W
         00001b70     00d0  
     357 00001b80     b500          move    *A8(OYPOS),A0,W
         00001b90     00b0  
     358 00001ba0     4420          sub     A1,A0
     359 00001bb0     b008          move    A0,*A8(OYPOS),W
         00001bc0     00b0  
     360 00001bd0     b700          move    *A8(OZVEL),A0,L ;* want to check sign
         00001be0     00e0  
     361 00001bf0     cf1e          jrnn    ZMaxOK
     362 00001c00     c013          jruc    SETZV
     363 00001c10           ZMinOK:
     364 00001c10     b501          move    *A8(OZPOS),A1,W
         00001c20     00d0  
     365 00001c30     05a0          move    @PLZMAX,A0,W
         00001c40 00000000! 
     366 00001c60     1460          subk    3,A0
     367 00001c70     4401          sub     A0,A1
     368 00001c80     ce15          jrn     ZMaxOK
     369 00001c90     b008          move    A0,*A8(OZPOS),W
         00001ca0     00d0  
     370 00001cb0     b500          move    *A8(OYPOS),A0,W
         00001cc0     00b0  
     371 00001cd0     4420          sub     A1,A0
     372 00001ce0     b008          move    A0,*A8(OYPOS),W
         00001cf0     00b0  
     373 00001d00     b700          move    *A8(OZVEL),A0,L ;* want to check sign
         00001d10     00e0  
     374 00001d20     ce0b          jrn     ZMaxOK
     375 00001d30     ca0a          jrz     ZMaxOK
     376 00001d40           SETZV:
     377 00001d40     b701          move    *A8(OYVEL),A1,L
         00001d50     0060  
     378 00001d60     4401          sub     A0,A1
     379 00001d70     b228          move    A1,*A8(OYVEL),L
         00001d80     0060  
     380 00001d90     5600          clr     A0
     381 00001da0     b208          move    A0,*A8(OZVEL),L ;set Z velocity
         00001db0     00e0  
     382 00001dc0     ac0d          movb    A0,*A13(ZPER)
         00001dd0     01c8  
     383 00001de0           ZMaxOK:
     384 00001de0     0960          rets
     385                    **************************************************************************
     386                    
     387                    **************************************************************************
     388 00001df0           HK_MOVE:
     389                    ;********  CHECK if a DESTINATION has been reached, and what to do if so..
     390 00001df0     0d3f          callr   ZCHECK
         00001e00     ffcd  
     391                    
     392 00001e10     afa1          movb    *A13(GOOSETIK),A1
         00001e20     0188  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   10

     393 00001e30     ca10          jrz     SkGoose
     394 00001e40     ac2d          movb    A1,*A13(BRAINTIKS)
         00001e50     01b0  
     395 00001e60     ac2d          movb    A1,*A13(FLIRTTIKS)              ;reset flirt wait
         00001e70     01b8  
     396 00001e80     0d5f          calla   ClosestP
         00001e90 00000000! 
     397 00001eb0     0d5f          calla   FACEOBJ
         00001ec0 00000000! 
     398 00001ee0     5600          clr     A0
     399 00001ef0     ac0d          movb    A0,*A13(DEST_TAG)
         00001f00     01c0  
     400 00001f10     b00d          move    A0,*A13(FLIRTING),W
         00001f20     0190  
     401 00001f30     c05a          jruc    AniCk
     402 00001f40           SkGoose:
     403                    
     404 00001f40     b5a1          move    *A13(FLIRTING),A1,W
         00001f50     0190  
     405 00001f60     ca0b          jrz     SkFlirt
     406 00001f70     0b41          cmpi    100,A1
         00001f80     ff9b  
     407 00001f90     c402          jrlt    SetBT
     408 00001fa0     09c1          movi    100,A1
         00001fb0     0064  
     409 00001fc0           SetBT:
     410 00001fc0     ac2d          movb    A1,*A13(BRAINTIKS)
         00001fd0     01b0  
     411 00001fe0     5600          clr     A0
     412 00001ff0     ac0d          movb    A0,*A13(DEST_TAG)
         00002000     01c0  
     413 00002010     c04c          jruc    AniCk
     414 00002020           SkFlirt:
     415                    
     416 00002020     afa0          movb    *A13(DEST_TAG),A0
         00002030     01c0  
     417 00002040     ca17          jrz     SkCkDest                        ;* No Destination
     418                    
     419 00002050     afa0          movb    *A13(DESTTIKS),A0
         00002060     01a8  
     420 00002070     cb14          jrnz    SkCkDest
     421 00002080     0d5f          calla   CkDest
         00002090 00000000! 
     422 000020b0     c910          jrnc    NotYet
     423                    
     424                            ;* we have reached our destination, what to do??
     425                    
     426 000020c0     0b40          cmpi    BULL_T,A0
         000020d0     ffeb  
     427 000020e0     cb01          jrnz    SkBULL_D
     428 000020f0     c007          jruc    DestDone
     429 00002100           SkBULL_D:
     430 00002100     0b40          cmpi    LEAN_T,A0
         00002110     fffd  
     431 00002120     cb03          jrnz    SkBUST_D
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   11

     432 00002130     0d3f          callr   DoLean
         00002140     0148  
     433 00002150     c001          jruc    DestDone
     434 00002160           SkBUST_D:
     435 00002160     c005          jruc    SkCkDest
     436 00002170           DestDone:
     437 00002170     5600          clr     A0
     438 00002180     ac0d          movb    A0,*A13(BRAINTIKS)      ;Allow new course of action
         00002190     01b0  
     439 000021a0     ac0d          movb    A0,*A13(DEST_TAG)
         000021b0     01c0  
     440 000021c0           NotYet:
     441 000021c0           SkCkDest:
     442                    
     443                    **** BRAIN functions *****
     444 000021c0     afa0          movb    *A13(BRAINTIKS),A0
         000021d0     01b0  
     445 000021e0     cb15          jrnz    BrainX
     446 000021f0     05a0          move    @hookbrain,A0,W
         00002200 00000010- 
     447 00002220     ac0d          movb    A0,*A13(BRAINTIKS)              ;reset brain wait
         00002230     01b0  
     448                    
     449                    ;       movb    *A13(DEST_TAG),A0
     450                    ;       cmpi    BULL_T,A0
     451                    ;       jrge    BrainX
     452                    ;       callr   CkDngr
     453                    
     454 00002240     afa0          movb    *A13(DEST_TAG),A0
         00002250     01c0  
     455 00002260     0b40          cmpi    LEAN_T,A0
         00002270     fffd  
     456 00002280     c50b          jrge    BrainX
     457 00002290     0d3f          callr   LeanHunt
         000022a0     00fd  
     458                    
     459 000022b0     afa0          movb    *A13(DEST_TAG),A0
         000022c0     01c0  
     460 000022d0     0b40          cmpi    DFLT_T,A0
         000022e0     fffe  
     461 000022f0     c504          jrge    BrainX
     462 00002300     0d3f          callr   GoWalk
         00002310     009e  
     463 00002320     0d3f          callr   DfltDest
         00002330     00ce  
     464 00002340           BrainX:
     465                    
     466                    
     467                    **** FLIRT functions *****
     468 00002340     afa0          movb    *A13(FLIRTTIKS),A0
         00002350     01b8  
     469 00002360     cb17          jrnz    FlirtX
     470 00002370     05a0          move    @hookflirt,A0,W
         00002380 00000020- 
     471 000023a0     ac0d          movb    A0,*A13(FLIRTTIKS)              ;reset flirt wait
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   12

         000023b0     01b8  
     472                    
     473 000023c0     0d3f          callr   HK_XCHECK
         000023d0     ff51  
     474 000023e0     c80f          jrc     FlirtX
     475                    
     476 000023f0     09c0          movi    400,A0
         00002400     0190  
     477 00002410     0d5f          calla   RANDPER
         00002420 00000000! 
     478 00002440     c909          jrnc    FlirtX
     479                    
     480 00002450     07e0          movb    @RAND,A0
         00002460 00000000! 
     481 00002480     ce03          jrn     SkBeck
     482 00002490     0d3f          callr   Beckon
         000024a0     013b  
     483 000024b0     c002          jruc    FlirtX
     484 000024c0           SkBeck:
     485 000024c0     0d3f          callr   Loiter
         000024d0     0122  
     486 000024e0           FlirtX:
     487                    
     488                    
     489                    **** Animation check ****
     490 000024e0           AniCk:
     491 000024e0     afa0          movb    *A13(ANIMTIKS),A0
         000024f0     01a0  
     492 00002500     cb11          jrnz    AnimX
     493                    
     494 00002510     0d5f          calla   ZOFF
         00002520 00000000! 
     495 00002540     1881          movk    4,A1                    ;* one frame, no sleepin
     496 00002550                   jsrp    FRANIM
     497 000025c0     8721          move    *A9,A1,L
     498 000025d0     cb02          jrnz    ListLeft
     499 000025e0     0d3f          callr   AnimCycle
         000025f0     0060  
     500 00002600           ListLeft:
     501 00002600     ac0d          movb    A0,*A13(ANIMTIKS)
         00002610     01a0  
     502 00002620           AnimX:
     503                    
     504                    **** Find Next Event ****
     505 00002620     09c7          movi    0FFH,A7
         00002630     00ff  
     506 00002640     afa1          movb    *A13(BRAINTIKS),A1
         00002650     01b0  
     507 00002660     50e1          and     A7,A1
     508 00002670     cb03          jrnz    BTok
     509                    ;       jruc    $
     510 00002680     1841          movk    2,A1
     511 00002690     ac2d          movb    A1,*A13(BRAINTIKS)
         000026a0     01b0  
     512 000026b0           BTok:
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   13

     513 000026b0     afa3          movb    *A13(ANIMTIKS),A3
         000026c0     01a0  
     514 000026d0     50e3          and     A7,A3
     515 000026e0     cb03          jrnz    ATok
     516                    ;       jruc    $
     517 000026f0     1843          movk    2,A3
     518 00002700     ac6d          movb    A3,*A13(ANIMTIKS)
         00002710     01a0  
     519 00002720           ATok:
     520 00002720     afa4          movb    *A13(FLIRTTIKS),A4
         00002730     01b8  
     521 00002740     50e4          and     A7,A4
     522 00002750     cb03          jrnz    FTok
     523                    ;       jruc    $
     524 00002760     1844          movk    2,A4
     525 00002770     ac8d          movb    A4,*A13(FLIRTTIKS)
         00002780     01b8  
     526 00002790           FTok:
     527 00002790     afa0          movb    *A13(DEST_TAG),A0
         000027a0     01c0  
     528 000027b0     cb02          jrnz    SkNoDest
     529 000027c0     4c26          move    A1,A6
     530 000027d0     c009          jruc    SkMin1
     531 000027e0           SkNoDest:
     532 000027e0     afa2          movb    *A13(DESTTIKS),A2
         000027f0     01a8  
     533 00002800     50e2          and     A7,A2
     534 00002810     cb01          jrnz    SkMinDst
     535 00002820     1822          movk    1,A2
     536 00002830           SkMinDst:
     537                    
     538 00002830     4c46          move    A2,A6
     539 00002840     48c1          cmp     A6,A1
     540 00002850     c501          jrge    SkMin1
     541 00002860     4c26          move    A1,A6
     542 00002870           SkMin1:
     543 00002870     48c3          cmp     A6,A3
     544 00002880     c501          jrge    SkMin3
     545 00002890     4c66          move    A3,A6
     546 000028a0           SkMin3:
     547 000028a0     48c4          cmp     A6,A4
     548 000028b0     c501          jrge    SkMin4
     549 000028c0     4c86          move    A4,A6
     550 000028d0           SkMin4:
     551                    
     552 000028d0     afa0          movb    *A13(DEST_TAG),A0
         000028e0     01c0  
     553 000028f0     ca03          jrz     SkDestDc
     554 00002900     44c2          sub     A6,A2
     555 00002910     ac4d          movb    A2,*A13(DESTTIKS)
         00002920     01a8  
     556 00002930           SkDestDc:
     557 00002930     44c1          sub     A6,A1
     558 00002940     ac2d          movb    A1,*A13(BRAINTIKS)
         00002950     01b0  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   14

     559 00002960     44c3          sub     A6,A3
     560 00002970     ac6d          movb    A3,*A13(ANIMTIKS)
         00002980     01a0  
     561 00002990     44c4          sub     A6,A4
     562 000029a0     ac8d          movb    A4,*A13(FLIRTTIKS)
         000029b0     01b8  
     563                    
     564 000029c0     afa1          movb    *A13(FLIPTIKS),A1
         000029d0     01d8  
     565 000029e0     ca07          jrz     SkFlipDc
     566 000029f0     50e1          and     A7,A1   ;No o' this sign extended byte shit
     567 00002a00     48c1          cmp     A6,A1
     568 00002a10     c501          jrge    SkClrFlp
     569 00002a20     4cc1          move    A6,A1
     570 00002a30           SkClrFlp:
     571 00002a30     44c1          sub     A6,A1
     572 00002a40     ac2d          movb    A1,*A13(FLIPTIKS)
         00002a50     01d8  
     573 00002a60           SkFlipDc:
     574                    
     575 00002a60     afa1          movb    *A13(GOOSETIK),A1
         00002a70     0188  
     576 00002a80     ca06          jrz     SkGoosDc
     577 00002a90     48c1          cmp     A6,A1
     578 00002aa0     c501          jrge    SkClrGse
     579 00002ab0     4cc1          move    A6,A1
     580 00002ac0           SkClrGse:
     581 00002ac0     44c1          sub     A6,A1
     582 00002ad0     ac2d          movb    A1,*A13(GOOSETIK)
         00002ae0     0188  
     583 00002af0           SkGoosDc:
     584                    
     585 00002af0     b5a1          move    *A13(FLIRTING),A1,W
         00002b00     0190  
     586 00002b10     ca06          jrz     SkFlrtDc
     587 00002b20     48c1          cmp     A6,A1
     588 00002b30     c501          jrge    SkClrFlrt
     589 00002b40     4cc1          move    A6,A1
     590 00002b50           SkClrFlrt:
     591 00002b50     44c1          sub     A6,A1
     592 00002b60     b02d          move    A1,*A13(FLIRTING),W
         00002b70     0190  
     593 00002b80           SkFlrtDc:
     594                    
     595 00002b80     4cc0          move    A6,A0
     596 00002b90     c101          jrp     Slp
     597                    ;       jruc    $
     598 00002ba0     1840          movk    2,A0
     599 00002bb0           Slp:
     600 00002bb0     0d5f          calla   PRCSLP
         00002bc0 00000000! 
     601                    
     602 00002be0     c000          jruc    HK_MOVE
         00002bf0     ff1f  
     603                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   15

     604                    
     605                    ************************** Animation Cycler ******************************
     606 00002c00           AnimCycle:
     607                    ;Resets animation loop
     608 00002c00     b7a9          move    *A13(ANIMPTR),A9,L
         00002c10     0120  
     609 00002c20     0960          rets
     610                    **************************************************************************
     611                    
     612                    **************************** GetXVel *************************************
     613 00002c30           GetXVel:
     614 00002c30     b7a0          move    *A13(ANIMPTR),A0,L
         00002c40     0120  
     615 00002c50     0b60          cmpi    HK_WALK,A0
         00002c60 ffffae6f' 
     616 00002c80     cb05          jrnz    NoXvel
     617 00002c90     09e0          movi    08000H,A0
         00002ca0 00008000  
     618 00002cc0     0520          zext    A0,W
     619 00002cd0     c001          jruc    GotXvel
     620 00002ce0           NoXvel:
     621 00002ce0     5600          clr     A0
     622 00002cf0           GotXvel:
     623 00002cf0     0960          rets
     624                    **************************************************************************
     625                    
     626                    ***************************** GoWalk *************************************
     627 00002d00           GoWalk:
     628 00002d00     098f          mmtm    SP,A0
         00002d10     8000  
     629 00002d20     0b69          cmpi    MOVETBL,A9
         00002d30 ffffae6f' 
     630 00002d50     c405          jrlt    StrtWalk
     631 00002d60     0b69          cmpi    MOVEEND,A9
         00002d70 ffffac0f' 
     632 00002d90     c501          jrge    StrtWalk
     633                            
     634 00002da0     c006          jruc    GoWalkX
     635                    
     636 00002db0           StrtWalk:
     637 00002db0     09e0          movi    HK_WALK,A0
         00002dc0 00005190' 
     638 00002de0     b20d          move    A0,*A13(ANIMPTR),L
         00002df0     0120  
     639 00002e00     4c09          move    A0,A9
     640                    
     641                            ;* set veloctiy for skaters
     642                    ;       move    *A8(OFLAGS),A0,W
     643                    ;       btst    B_FLIPH,A0
     644                    ;       jrz     VelPos2
     645                    ;       movi    -WALKVEL,A0
     646                    ;       jruc    SetXV2
     647                    ;VelPos2:
     648                    ;       movi    WALKVEL,A0
     649                    ;SetXV2:
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   16

     650                    ;       move    A0,*A8(OXVEL),L
     651                    
     652 00002e10           GoWalkX:
     653 00002e10     09af          mmfm    SP,A0
         00002e20     0001  
     654 00002e30     0960          rets
     655                    **************************************************************************
     656                    
     657                    *****************************  Evade Bust  *******************************
     658 00002e40           EvadeBust:
     659 00002e40     0d5f          calla   ClosestP
         00002e50 00000000! 
     660                    
     661 00002e70     b401          move    *A0(OXPOS),A1           ;if too far away in X don't evade
         00002e80     0090  
     662 00002e90     b502          move    *A8(OXPOS),A2
         00002ea0     0090  
     663 00002eb0     4422          sub     A1,A2
     664 00002ec0     0382          abs     A2
     665 00002ed0     0b42          cmpi    100,A2
         00002ee0     ff9b  
     666 00002ef0     c711          jrgt    EvadeX
     667                    
     668 00002f00     b401          move    *A0(OZPOS),A1           ;if too far away in Z don't evade
         00002f10     00d0  
     669 00002f20     b502          move    *A8(OZPOS),A2
         00002f30     00d0  
     670 00002f40     4422          sub     A1,A2
     671 00002f50     0382          abs     A2
     672 00002f60     0b42          cmpi    50,A2
         00002f70     ffcd  
     673 00002f80     c708          jrgt    EvadeX
     674                    
     675                            ;* player is too close - RUN AWAY!!
     676 00002f90     0d3f          callr   GoWalk
         00002fa0     ffd5  
     677 00002fb0     0d5f          calla   FleeObj
         00002fc0 00000000! 
     678 00002fe0     19e0          movk    BUST_T,A0
     679 00002ff0     ac0d          movb    A0,*A13(DEST_TAG)
         00003000     01c0  
     680 00003010           EvadeX:
     681 00003010     0960          rets
     682                    **************************************************************************
     683                    
     684                    
     685                    ************************  Default Destination  ***************************
     686 00003020           DfltDest:
     687                            ;* generate random x position on screen
     688 00003020     05b0          move    @SCRNTL,B0,W            ;GET SCREEN LEFT
         00003030 00000000! 
     689 00003050     05b1          move    @SCRNLR,B1,W            ;GET SCREEN RT.
         00003060 00000000! 
     690 00003080     0d5f          calla   RANGRAND
         00003090 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   17

     691 000030b0     05a1          move    @WORLDTL,A1,W
         000030c0 00000000! 
     692 000030e0     4001          add     A0,A1                   ;ADD TO WORLD BASE
     693                    
     694                            ;* generate random y position on playfield
     695 000030f0     05b0          move    @PLZMIN,B0,W            ;GET top
         00003100 00000000! 
     696 00003120     05b1          move    @PLZMAX,B1,W            ;GET bot
         00003130 00000000! 
     697 00003150     4011          add     B0,B1
     698 00003160     2ff1          srl     1,B1                            ;only on top half
     699 00003170     0d5f          calla   RANGRAND
         00003180 00000000! 
     700                    
     701 000031a0     2600          sll     16,A0
     702 000031b0     ee01          movy    A0,A1
     703 000031c0     b22d          move    A1,*A13(DEST),L
         000031d0     01e0  
     704                    
     705 000031e0     1820          movk    DFLT_T,A0
     706 000031f0     ac0d          movb    A0,*A13(DEST_TAG)
         00003200     01c0  
     707                    
     708 00003210     b7a0          move    *A13(FUNCS),A0,L        ;* choose appropriate godest func
         00003220     00e0  
     709 00003230     0b00          addi    GODEST,A0
         00003240     0020  
     710 00003250     8600          move    *A0,A0,L
     711 00003260     0920          call    A0
     712                    
     713 00003270     0960          rets
     714                    **************************************************************************
     715                    
     716                    *************************  Lean Hunt  ************************************
     717 00003280           LeanHunt:
     718 00003280     07a4          move    @BACKSLST,A4,L
         00003290 00000000! 
     719 000032b0     ca30          jrz     NO_LEAN
     720 000032c0     09c1          movi    BGLID,A1
         000032d0     0bc5  
     721 000032e0           LScanLp:
     722 000032e0     b480          move    *A4(OID),A0,W
         000032f0     01a0  
     723 00003300     4820          cmp     A1,A0
     724 00003310     cb07          jrnz    LScanX
     725 00003320     1860          movk    3,A0
     726 00003330     0d5f          calla   RANDU
         00003340 00000000! 
     727 00003360     1420          dec     A0
     728 00003370     cb01          jrnz    LScanX
     729 00003380     ca04          jreq    GotLObj
     730 00003390           LScanX:
     731 00003390     b684          move *A4(OSLINK),A4,L
         000033a0     0020  
     732 000033b0     cbf2          jrnz    LScanLp
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   18

     733 000033c0     c01f          jruc    NO_LEAN
     734                    
     735 000033d0           GotLObj:
     736 000033d0     4c80          move    A4,A0
     737 000033e0     b20d          move    A0,*A13(WANTOBJ),L
         000033f0     0220  
     738 00003400     0d5f          calla   HuntObj
         00003410 00000000! 
     739 00003430     0d3f          callr   GoWalk
         00003440     ff8b  
     740 00003450     18a0          movk    5,A0
     741 00003460     07e1          movb    @RAND,A1                ;select side to lean on
         00003470 00000000! 
     742 00003490     ce01          jrn     SKnegD
     743 000034a0     15e0          subk    15,A0
     744 000034b0           SKnegD:
     745 000034b0     0d5f          calla   ShortXDest
         000034c0 00000000! 
     746 000034e0     b5a1          move    *A13(DEST+16),A1,W              ;Get Z part of Dest - go in front of Pole
         000034f0     01f0  
     747 00003500     1041          addk    2,A1
     748 00003510     b02d          move    A1,*A13(DEST+16),W
         00003520     01f0  
     749                    
     750 00003530     b7a0          move    *A13(FUNCS),A0,L        ;* choose appropriate godest func
         00003540     00e0  
     751 00003550     0b00          addi    GODEST,A0
         00003560     0020  
     752 00003570     8600          move    *A0,A0,L
     753 00003580     0920          call    A0
     754                    
     755 00003590     1840          movk    LEAN_T,A0
     756 000035a0     ac0d          movb    A0,*A13(DEST_TAG)
         000035b0     01c0  
     757 000035c0           NO_LEAN:
     758 000035c0     0960          rets
     759                    **************************************************************************
     760                    
     761                    ***************************** Do Lean ************************************
     762 000035d0           DoLean:
     763 000035d0     b7a0          move    *A13(WANTOBJ),A0,L
         000035e0     0220  
     764 000035f0     0d5f          calla   FACEAWAY
         00003600 00000000! 
     765 00003620     09e9          movi    HK_LEAN1,A9
         00003630 00006270' 
     766 00003650     b32d          move    A9,*A13(ANIMPTR),L
         00003660     0120  
     767 00003670     09c0          movi    281,A0
         00003680     0119  
     768 00003690     b00d          move    A0,*A13(FLIRTING),W
         000036a0     0190  
     769 000036b0     09c0          movi    100,A0
         000036c0     0064  
     770 000036d0     ac0d          movb    A0,*A13(BRAINTIKS)
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   19

         000036e0     01b0  
     771 000036f0     0960          rets
     772                    **************************************************************************
     773                    
     774                    ***************************** Loiter ************************************
     775 00003700           Loiter:
     776 00003700     09c0          movi    180,A0
         00003710     00b4  
     777 00003720     0d5f          calla   RANDU
         00003730 00000000! 
     778 00003750     0b00          addi    90,A0
         00003760     005a  
     779 00003770     b00d          move    A0,*A13(FLIRTING),W
         00003780     0190  
     780 00003790     09e9          movi    HK_STAND1,A9
         000037a0 000055c0' 
     781 000037c0     07e0          movb    @RAND,A0
         000037d0 00000000! 
     782 000037f0     ce03          jrn     SkHair
     783 00003800     09e9          movi    HK_HAIR1,A9
         00003810 00005680' 
     784 00003830           SkHair
     785 00003830     b32d          move    A9,*A13(ANIMPTR),L
         00003840     0120  
     786 00003850     0960          rets
     787                    **************************************************************************
     788                    
     789                    ***************************  Beckon  *************************************
     790 00003860           Beckon:
     791 00003860     09c0          movi    180,A0
         00003870     00b4  
     792 00003880     0d5f          calla   RANDU
         00003890 00000000! 
     793 000038b0     0b00          addi    90,A0
         000038c0     005a  
     794 000038d0     b00d          move    A0,*A13(FLIRTING),W
         000038e0     0190  
     795 000038f0     09e9          movi    HK_CALL,A9
         00003900 00005820' 
     796 00003920     b32d          move    A9,*A13(ANIMPTR),L
         00003930     0120  
     797 00003940     0960          rets
     798                    **************************************************************************
     799                    
     800                    ***************************** CHECK DANGER *******************************
     801                    * if Hooker is in danger of being shot, dodge
     802 00003950           CkDngr:
     803 00003950     0d5f          calla   NEAR_BUL
         00003960 00000000! 
     804 00003980     4ca5          move    A5,A5   ;is there a closest bullet
     805 00003990     ca6f          jrz     NoDngr
     806                    
     807 000039a0     b501          move    *A8(OYPOS),A1,W
         000039b0     00b0  
     808 000039c0     b502          move    *A8(OSIZEY),A2,W
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   20

         000039d0     0150  
     809 000039e0     2fe2          srl     1,A2            ;want to find belly
     810 000039f0     1682          subk    20,A2   ;* encourage jumping
     811 00003a00     4041          add     A2,A1
     812 00003a10     b4a3          move    *A5(OYPOS),A3,W
         00003a20     00b0  
     813 00003a30     4461          sub     A3,A1
     814 00003a40     ce33          jrn     BULL_LOW
     815                            ;* bullet heading at head
     816 00003a50     0b46          cmpi    400,A6  ;is bullet near?
         00003a60     fe6f  
     817 00003a70     c761          jrgt    JRDNGRX
     818                    
     819                            ;* bullet is near - move down, down and away!
     820 00003a80     0d3f          callr   GoWalk
         00003a90     ff26  
     821                    
     822                            ;* find Z destination
     823 00003aa0     b501          move    *A8(OZPOS),A1,W
         00003ab0     00d0  
     824 00003ac0     1bc0          movk    30,A0
     825 00003ad0     0d5f          calla   RANDU
         00003ae0 00000000! 
     826 00003b00     11e0          addk    15,A0
     827 00003b10     4020          add     A1,A0
     828 00003b20     05a1          move    @PLZMAX,A1,W
         00003b30 00000000! 
     829 00003b50     4801          cmp     A0,A1
     830 00003b60     c406          jrlt    ZisGood
     831 00003b70     05a0          move    @PLZMIN,A0,W
         00003b80 00000000! 
     832 00003ba0     4401          sub     A0,A1
     833 00003bb0     2fe1          srl     1,A1
     834 00003bc0     4020          add     A1,A0
     835 00003bd0           ZisGood:
     836 00003bd0     4c01          move    A0,A1
     837 00003be0     2601          sll     16,A1   ;A1 is z portion of destination
     838                    
     839                            ;* generate X destination
     840 00003bf0     1bc0          movk    30,A0
     841 00003c00     0d5f          calla   RANDU
         00003c10 00000000! 
     842 00003c30     13c0          addk    30,A0           ;A0 is magnitude of X distance to run away
     843 00003c40     b4a2          move    *A5(OXVEL+16),A2,W              ;Get sign of Bullets velocity
         00003c50     0050  
     844 00003c60     c101          jrp     XdirOK
     845 00003c70     03a0          neg     A0
     846 00003c80           XdirOK:
     847 00003c80     b502          move    *A8(OXPOS),A2,W
         00003c90     0090  
     848 00003ca0     4002          add     A0,A2
     849 00003cb0     ee22          movy    A1,A2
     850 00003cc0     b24d          move    A2,*A13(DEST),L
         00003cd0     01e0  
     851                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   21

     852 00003ce0     1a80          movk    BULL_T,A0
     853 00003cf0     ac0d          movb    A0,*A13(DEST_TAG)
         00003d00     01c0  
     854                    
     855 00003d10     b7a0          move    *A13(FUNCS),A0,L        ;* choose appropriate godest func
         00003d20     00e0  
     856 00003d30     0b00          addi    GODEST,A0
         00003d40     0020  
     857 00003d50     8600          move    *A0,A0,L
     858 00003d60     0920          call    A0
     859                    
     860 00003d70     c031          jruc    JRDNGRX
     861                    
     862 00003d80           BULL_LOW:
     863                            ;* bullet heading at feet
     864 00003d80     0b46          cmpi    400,A6  ;is bullet near?
         00003d90     fe6f  
     865 00003da0     c72e          jrgt    JRDNGRX
     866                    
     867                            ;* bullet is near - move up, up and away
     868 00003db0     0d3f          callr   GoWalk
         00003dc0     fef3  
     869                    
     870                            ;* find Z destination
     871 00003dd0     b501          move    *A8(OZPOS),A1,W
         00003de0     00d0  
     872 00003df0     1bc0          movk    30,A0
     873 00003e00     0d5f          calla   RANDU
         00003e10 00000000! 
     874 00003e30     11e0          addk    15,A0
     875 00003e40     4401          sub     A0,A1
     876 00003e50     05a0          move    @PLZMIN,A0,W
         00003e60 00000000! 
     877 00003e80     4801          cmp     A0,A1
     878 00003e90     c706          jrgt    ZisGood2
     879 00003ea0     05a1          move    @PLZMAX,A1,W
         00003eb0 00000000! 
     880 00003ed0     4401          sub     A0,A1
     881 00003ee0     2fe1          srl     1,A1
     882 00003ef0     4001          add     A0,A1
     883 00003f00           ZisGood2:
     884 00003f00     2601          sll     16,A1   ;A1 is z portion of destination
     885                    
     886                            ;* generate X destination
     887 00003f10     1bc0          movk    30,A0
     888 00003f20     0d5f          calla   RANDU
         00003f30 00000000! 
     889 00003f50     13c0          addk    30,A0           ;A0 is magnitude of X distance to run away
     890 00003f60     b4a2          move    *A5(OXVEL+16),A2,W              ;Get sign of Bullets velocity
         00003f70     0050  
     891 00003f80     c101          jrp     XdirOK2
     892 00003f90     03a0          neg     A0
     893 00003fa0           XdirOK2:
     894 00003fa0     b502          move    *A8(OXPOS),A2,W
         00003fb0     0090  
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   22

     895 00003fc0     4002          add     A0,A2
     896 00003fd0     ee22          movy    A1,A2
     897 00003fe0     b24d          move    A2,*A13(DEST),L
         00003ff0     01e0  
     898                    
     899 00004000     1a80          movk    BULL_T,A0
     900 00004010     ac0d          movb    A0,*A13(DEST_TAG)
         00004020     01c0  
     901                    
     902 00004030     b7a0          move    *A13(FUNCS),A0,L        ;* choose appropriate godest func
         00004040     00e0  
     903 00004050     0b00          addi    GODEST,A0
         00004060     0020  
     904 00004070     8600          move    *A0,A0,L
     905 00004080     0920          call    A0
     906                    
     907 00004090           JRDNGRX:
     908 00004090           NoDngr:
     909 00004090     0960          rets
     910                    **************************************************************************
     911                    
     912                    **************************************************************************
     913 000040a0           HK_DONE:
     914 000040a0     4d00          MOVE    A8,A0           ;GET THE POINTER TO THE OBJECT
     915 000040b0     0d5f          calla   DELENEMY                        ;DELETE THE ENEMY
         000040c0 00000000! 
     916 000040e0           HOOK_DIE:
     917 000040e0                   DECW    @HOOKCNT
     918 00004150                   DIE
     919                    **************************************************************************
     920                    
     921                    
     922                    **************************************************************************
     923                    *WALKING HOOK, AS OBJECT 0, COLLSION ROUTINE
     924                    *A0 = PTR TO JR OBJECT
     925                    *A8 = PTR TO OBJECT THAT SMASHED HIM
     926 00004180           HKCOL0
     927 00004180     b709          MOVE    *A8(OXVEL),A9,L         ;GET PROJECTILE DATA
         00004190     0040  
     928 000041a0     b70a          MOVE    *A8(OYVEL),A10,L
         000041b0     0060  
     929 000041c0     b50b          MOVE    *A8(OID),A11,W          
         000041d0     01a0  
     930                    
     931 000041e0     4d06          MOVE    A8,A6                   ;STORE KILLERS OBLOCK
     932 000041f0     4c08          MOVE    A0,A8                   ;PASS WASTED GUYS POINTER
     933                    
     934 00004200     09ee          MOVI    SPLTCOLANI,A14
         00004210 00000000! 
     935 00004230     b3c0          MOVE    A14,*A0(OCVECT),L       ;COLLISION POINTER
         00004240     01d0  
     936                    
     937 00004250     b600          MOVE    *A0(OPLINK),A0,L
         00004260     01f0  
     938 00004270     0d5f          CALLA   KILL                    ;KILL CONTROL
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   23

         00004280 00000000! 
     939 000042a0     4c0e          MOVE    A0,A14                  ;STORE THIS RELIC
     940                            
     941 000042b0     09c1          MOVI    0EDh,A1
         000042c0     00ed  
     942 000042d0     09e7          MOVI    WENDIE,A7
         000042e0 00000000! 
     943 00004300     0d5f          CALLA   GETPRC                  ;CREATE A NEW ENEMY DEATH PROCESS
         00004310 00000000! 
     944 00004330     ca1c          jrz     SkDie
     945 00004340     bac0          MOVE    *A6(ODMAXY),*A0(PDATA),L        ;PASS KILLERS DMA XY POSITION
         00004350     0210  
         00004360     0060  
     946 00004370     bac0          MOVE    *A6(OSIZE),*A0(PDATA+20H),L     ;AND KILLERS XY SIZE
         00004380     0140  
         00004390     0080  
     947 000043a0     bbc0          move    *A14(EBCNTRS),*A0(EBCNTRS),L    ;and the booty counters
         000043b0     0140  
         000043c0     0140  
     948 000043d0     bbc0          MOVE    *A14(EMAINT),*A0(EMAINT),L
         000043e0     0100  
         000043f0     0100  
     949                    
     950 00004400     b4c9          move    *A6(OYPOS),A9,W
         00004410     00b0  
     951 00004420     09c1          MOVI    0EDh,A1
         00004430     00ed  
     952 00004440     09e7          movi    SPLATANI,A7
         00004450 00000000! 
     953 00004470     0d5f          CALLA   GETPRC
         00004480 00000000! 
     954                    
     955 000044a0     09e0          movi    MOAN,A0
         000044b0 000000c0' 
     956 000044d0     0d5f          calla   ONESND
         000044e0 00000000! 
     957                    
     958 00004500           SkDie:
     959 00004500                   DECW    @HOOKCNT
     960                    
     961 00004570     0320          CLRC            ;Don't delete in Coll routine
     962 00004580     0960          RETS
     963                    *************************************************************************
     964                    
     965                    *************************************************************************
     966 00004590           HKCOLL:
     967 00004590     0b10          .WORD   B1OID|BULLETID
     968 000045a0 00004180'         .LONG   HKCOL0
     969 000045c0     0b20          .WORD   B2OID|BULLETID
     970 000045d0 00004180'         .LONG   HKCOL0
     971 000045f0     1000          .WORD   P1OID
     972 00004600 00004a60'         .LONG   PlyrCol1
     973 00004620     2000          .WORD   P2OID
     974 00004630 00004aa0'         .LONG   PlyrCol2
     975                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   24

     976 00004650     0000          .WORD   0
     977 00004660 00000000!         .LONG   DUMRTSG                 ;THE BUCK STOPS HERE BUDDY!
     978                    
     979 00004680     0b12          .WORD   B1OID|EXPLODID
     980 00004690 00004180'         .LONG   HKCOL0
     981 000046b0     0b14          .WORD   B1OID|ROCKETID
     982 000046c0 00004180'         .LONG   HKCOL0
     983 000046e0     0b20          .WORD   B2OID|BULLETID
     984 000046f0 00004180'         .LONG   HKCOL0
     985 00004710     0b22          .WORD   B2OID|EXPLODID
     986 00004720 00004180'         .LONG   HKCOL0
     987 00004740     0b24          .WORD   B2OID|ROCKETID
     988 00004750 00004180'         .LONG   HKCOL0
     989 00004770     0000          .WORD   0
     990 00004780 00000000!         .LONG   DUMRTSG
     991                    
     992                    ;WALKING JUMPING DEATH FRAGMENT STANDING-SHOOT KNEELING-SHOOT
     993                    ;STANDING KNEELING
     994                    
     995 000047a0     0001  HKOFF   .WORD   1,3,4,9,18,34,50,50
     996                    *THE JR ENEMY, ANIMATION PTR TABLE, FIRST LONG WORD IS THE OFFSET PTR
     997                    *
     998 00004820 000047a0' HKTAB   .LONG   HKOFF
     999 00004840 00005190'         .LONG   HK_WALK,HK_WALK,JRJLR,HK_DIE,HK_DIE,LOFDEXP,LOFDEXP1,LOFDROCK
    1000                    
    1001 00004940 00000000!         .LONG   LOFRAG1,LOFRAG2,LOFRAG2,LOFRAG3
    1002 000049c0 00000000!         .LONG   LOFRAG1,LOFRAG2,LOFRAG3,LOFRAG4,0
    1003                    *************************************************************************
    1004                    
    1005                    *************************************************************************
    1006                    ;* A0 ptr to hooker obj
    1007 00004a60           PlyrCol1:
    1008 00004a60     09e2          movi    P1DATA,A2
         00004a70 00000000! 
    1009 00004a90     c003          jruc    PlyrCol
    1010 00004aa0           PlyrCol2:
    1011 00004aa0     09e2          movi    P2DATA,A2
         00004ab0 00000000! 
    1012 00004ad0           PlyrCol:
    1013 00004ad0     b641          move    *A2(PFLAGS),A1,L
         00004ae0     0080  
    1014 00004af0     1da1          btst    BDEAD,A1
    1015 00004b00     cb67          jrnz    NoGoose
    1016                    
    1017 00004b10     b607          move    *A0(OPLINK),A7,L
         00004b20     01f0  
    1018                    
    1019 00004b30     aee1          movb    *A7(GOOSECNT),A1
         00004b40     0180  
    1020 00004b50     c132          jrp     GooseLft
    1021                    
    1022                            ;*** HOOKER IS GOOSED OUT
    1023 00004b60     aee0          movb    *A7(GOOSETIK),A0
         00004b70     0188  
    1024 00004b80     0b40          cmpi    10,A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   25

         00004b90     fff5  
    1025 00004ba0     c72c          jrgt    NoDam
    1026                    
    1027 00004bb0     05a0          move    @PIMPCNT,A0
         00004bc0 00000000! 
    1028 00004be0     cb0e          jrnz    SkHelp
    1029                    ; A14 - 0.8:#.4:rand#.4:00EH.8:OIDtype.4:OIDsubtype.4
    1030 00004bf0     56a5          clr     A5
    1031 00004c00     56c6          clr     A6
    1032 00004c10     09ee          movi    000100000H|PIMPEOID|1,A14
         00004c20 00100e31  
    1033 00004c40     0d5f          calla   PIMPCOLD
         00004c50 00000000! 
    1034 00004c70     09e0          movi    HELPSND,A0
         00004c80 00000080' 
    1035 00004ca0     0d5f          calla   ONESND
         00004cb0 00000000! 
    1036 00004cd0           SkHelp:
    1037                    
    1038 00004cd0     4ce0          move    A7,A0
    1039 00004ce0     0d5f          calla   GETA9
         00004cf0 00000000! 
    1040 00004d10     0b69          cmpi    HK_FIGHT,A9
         00004d20 ffffa1bf' 
    1041 00004d40     c405          jrlt    StrtFght
    1042 00004d50     0b69          cmpi    HK_FIGHTX,A9
         00004d60 ffff9ecf' 
    1043 00004d80     c701          jrgt    StrtFght
    1044                    
    1045                    ;       movi    30,A0
    1046                    ;       calla   RANDPER
    1047                    ;       jrnc    NoDam
    1048                    ;       calla   HEADBUTT
    1049                    
    1050 00004d90     c00d          jruc    NoDam
    1051                    
    1052 00004da0           StrtFght:
    1053 00004da0     09e9          movi    HK_FIGHT,A9
         00004db0 00005e40' 
    1054 00004dd0     b327          move    A9,*A7(ANIMPTR),L
         00004de0     0120  
    1055 00004df0     4ce0          move    A7,A0
    1056 00004e00     0d5f          calla   PUTA9
         00004e10 00000000! 
    1057                    
    1058 00004e30     09c0          movi    30,A0
         00004e40     001e  
    1059 00004e50     ac07          movb    A0,*A7(GOOSETIK)
         00004e60     0188  
    1060 00004e70           NoDam:  
    1061 00004e70     0960          rets
    1062                    
    1063                    
    1064 00004e80           GooseLft:
    1065 00004e80     aee0          movb    *A7(GOOSETIK),A0
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   26

         00004e90     0188  
    1066 00004ea0     c12d          jrp     NoGoose
    1067 00004eb0     1421          dec     A1
    1068 00004ec0     ac27          movb    A1,*A7(GOOSECNT)
         00004ed0     0180  
    1069 00004ee0     ca04          jrz     Snd2
    1070 00004ef0     09e0          movi    OOHSND1,A0
         00004f00 00000000' 
    1071 00004f20     c003          jruc    GotSnd
    1072 00004f30           Snd2:
    1073 00004f30     09e0          movi    OOHSND2,A0
         00004f40 00000040' 
    1074 00004f60           GotSnd:
    1075 00004f60     0d5f          calla   ONESND
         00004f70 00000000! 
    1076                    
    1077 00004f90     4ce0          move    A7,A0
    1078 00004fa0     0d5f          calla   GETA9
         00004fb0 00000000! 
    1079 00004fd0     0b69          cmpi    HK_GOOSE,A9
         00004fe0 ffffa32f' 
    1080 00005000     c405          jrlt    StrtGoos
    1081 00005010     0b69          cmpi    HK_GOOSEX,A9
         00005020 ffffa1bf' 
    1082 00005040     c701          jrgt    StrtGoos
    1083 00005050     c009          jruc    SkGoos
    1084                    
    1085 00005060           StrtGoos:
    1086 00005060     09e9          movi    HK_GOOSE,A9
         00005070 00005cd0' 
    1087 00005090     b327          move    A9,*A7(ANIMPTR),L
         000050a0     0120  
    1088 000050b0     4ce0          move    A7,A0
    1089 000050c0     0d5f          calla   PUTA9
         000050d0 00000000! 
    1090 000050f0           SkGoos:
    1091 000050f0     09c1          movi    0250H,A1
         00005100     0250  
    1092 00005110     0d5f          calla   SCORE
         00005120 00000000! 
    1093 00005140     09c0          movi    90,A0
         00005150     005a  
    1094 00005160     ac07          movb    A0,*A7(GOOSETIK)
         00005170     0188  
    1095 00005180           NoGoose:
    1096 00005180     0960          rets
    1097                    *************************************************************************
    1098                    
    1099                    **************************************************************************
    1100                    * HOOKER FRAME TABLES   
    1101                    * NORMAL TABLE ENTRY:
    1102                    *       AFRAME  FRAME,SLEEPT,CONTROL_WORD
    1103                    * FIRE FRAME TABLE ENTRY:                   
    1104                    *       FAFRAME FRAME,SLEEPT,XOFFSET,YOFFSET,PROCID,PROCESS_ADDRESS,CW
    1105                    
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   27

    1106              8000  WALKVEL .set    08000H
    1107 00005190           MOVETBL:
    1108 00005190           HK_WALK:          ;* sleep is 200% of delta
    1109 00005190 00000000"         .long   hkwlk1
    1110 000051b0     100a          .word   DELTAXZ|10,5
    1111 000051d0 00000080"         .long   hkwlk2
    1112 000051f0     1009          .word   DELTAXZ|9,3
    1113 00005210 00000100"         .long   hkwlk3
    1114 00005230     100a          .word   DELTAXZ|10,5
    1115 00005250 00000180"         .long   hkwlk4
    1116 00005270     1009          .word   DELTAXZ|9,4
    1117 00005290 00000200"         .long   hkwlk5
    1118 000052b0     100a          .word   DELTAXZ|10,5
    1119 000052d0 00000280"         .long   hkwlk6
    1120 000052f0     1009          .word   DELTAXZ|9,3
    1121 00005310 00000300"         .long   hkwlk7
    1122 00005330     100b          .word   DELTAXZ|11,7
    1123 00005350 00000380"         .long   hkwlk8
    1124 00005370     100b          .word   DELTAXZ|11,7
    1125 00005390 00000400"         .long   hkwlk9
    1126 000053b0     1009          .word   DELTAXZ|9,5
    1127 000053d0                   LONGNULL
    1128 000053f0           MOVEEND:
    1129                    
    1130 000053f0           WALKOUT:
    1131 000053f0 00000000"         .long   hkwlk1
    1132 00005410     000a          .word   10
    1133 00005420 00000080"         .long   hkwlk2
    1134 00005440     0009          .word   9
    1135 00005450 00000100"         .long   hkwlk3
    1136 00005470     000a          .word   10
    1137 00005480 00000180"         .long   hkwlk4
    1138 000054a0     0009          .word   9
    1139 000054b0 00000200"         .long   hkwlk5
    1140 000054d0     000a          .word   10
    1141 000054e0 00000280"         .long   hkwlk6
    1142 00005500     0009          .word   9
    1143 00005510 00000300"         .long   hkwlk7
    1144 00005530     000b          .word   11
    1145 00005540 00000380"         .long   hkwlk8
    1146 00005560     000b          .word   11
    1147 00005570 00000400"         .long   hkwlk9
    1148 00005590     0009          .word   9
    1149 000055a0                   LONGNULL
    1150                    
    1151 000055c0           HK_STAND1:
    1152 000055c0 00000b80"         .long   hkpose1
    1153 000055e0     000f          .word   15
    1154 000055f0 00000c00"         .long   hkpose2
    1155 00005610     000f          .word   15
    1156 00005620 00000c80"         .long   hkpose3
    1157 00005640     0014          .word   20
    1158 00005650 00000c00"         .long   hkpose2
    1159 00005670     000f          .word   15
    1160 00005680           HK_HAIR1:
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   28

    1161 00005680 00000e80"         .long   hkpose9
    1162 000056a0     000a          .word   10
    1163 000056b0 00000e00"         .long   hkpose8
    1164 000056d0     000a          .word   10
    1165 000056e0 00000d80"         .long   hkpose7
    1166 00005700     000a          .word   10
    1167 00005710 00000d00"         .long   hkpose6
    1168 00005730     0014          .word   20
    1169 00005740 00000d80"         .long   hkpose7
    1170 00005760     000a          .word   10
    1171 00005770 00000d00"         .long   hkpose6
    1172 00005790     000a          .word   10
    1173 000057a0 00000d80"         .long   hkpose7
    1174 000057c0     000a          .word   10
    1175 000057d0 00000e00"         .long   hkpose8
    1176 000057f0     000a          .word   10
    1177 00005800                   LONGNULL
    1178                    
    1179 00005820           HK_CALL:
    1180 00005820 00000880"         .long   seduc7
    1181 00005840     000c          .word   12
    1182 00005850 00000680"         .long   seduc3
    1183 00005870     000c          .word   12
    1184 00005880 00000700"         .long   seduc4
    1185 000058a0     000c          .word   12
    1186 000058b0 00000780"         .long   seduc5
    1187 000058d0     0012          .word   18
    1188 000058e0 00000700"         .long   seduc4
    1189 00005900     000c          .word   12
    1190 00005910 00000780"         .long   seduc5
    1191 00005930     0019          .word   25
    1192 00005940 00000800"         .long   seduc6
    1193 00005960     000c          .word   12
    1194 00005970                   LONGNULL
    1195                    
    1196 00005990           HK_REACH:
    1197 00005990 00000880"         .long   seduc7
    1198 000059b0     0014          .word   20
    1199 000059c0 00000600"         .long   seduc2
    1200 000059e0     0028          .word   40
    1201 000059f0 00000880"         .long   seduc7
    1202 00005a10     0014          .word   20
    1203 00005a20                   LONGNULL
    1204                    
    1205 00005a40           HK_TITS:
    1206 00005a40 00000900"         .long   seduc8
    1207 00005a60     000c          .word   12
    1208 00005a70 00000980"         .long   seduc9
    1209 00005a90     000c          .word   12
    1210 00005aa0 00000900"         .long   seduc8
    1211 00005ac0     000c          .word   12
    1212 00005ad0 00000980"         .long   seduc9
    1213 00005af0     000c          .word   12
    1214 00005b00 00000a00"         .long   seduc11
    1215 00005b20     000c          .word   12
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   29

    1216 00005b30 00000980"         .long   seduc9
    1217 00005b50     000c          .word   12
    1218 00005b60 00000a00"         .long   seduc11
    1219 00005b80     000c          .word   12
    1220 00005b90 00000a80"         .long   seduc13
    1221 00005bb0     000c          .word   12
    1222 00005bc0 00000b00"         .long   seduc14
    1223 00005be0     000c          .word   12
    1224 00005bf0 00000a80"         .long   seduc13
    1225 00005c10     000c          .word   12
    1226 00005c20 00000b00"         .long   seduc14
    1227 00005c40     000c          .word   12
    1228 00005c50 00000a80"         .long   seduc13
    1229 00005c70     000c          .word   12
    1230 00005c80 00000b00"         .long   seduc14
    1231 00005ca0     000c          .word   12
    1232 00005cb0                   LONGNULL
    1233                    
    1234                    
    1235 00005cd0           HK_GOOSE:
    1236 00005cd0 00000900"         .long   seduc8
    1237 00005cf0     000c          .word   12
    1238 00005d00 00000980"         .long   seduc9
    1239 00005d20     000c          .word   12
    1240 00005d30 00000a00"         .long   seduc11
    1241 00005d50     000c          .word   12
    1242 00005d60 00000980"         .long   seduc9
    1243 00005d80     000c          .word   12
    1244 00005d90 00000a00"         .long   seduc11
    1245 00005db0     000c          .word   12
    1246 00005dc0 00000a80"         .long   seduc13
    1247 00005de0     000c          .word   12
    1248 00005df0 00000b00"         .long   seduc14
    1249 00005e10     000c          .word   12
    1250 00005e20                   LONGNULL
    1251 00005e40           HK_GOOSEX:
    1252                    
    1253                    
    1254 00005e40           HK_FIGHT:
    1255 00005e40 00000000!         .long   hkfgt8
    1256 00005e60     0006          .word   6
    1257 00005e70 00000000!         .long   hkfgt7
    1258 00005e90     0006          .word   6       
    1259 00005ea0 00000000!         .long   hkfgt8
    1260 00005ec0     0006          .word   6
    1261 00005ed0 00000000!         .long   hkfgt7
    1262 00005ef0     0006          .word   6
    1263 00005f00 00000000!         .long   hkfgt5
    1264 00005f20     0006          .word   6
    1265 00005f30 00000000!         .long   hkfgt6
    1266 00005f50     0006          .word   6
    1267 00005f60 00000000!         .long   hkfgt4
    1268 00005f80     0006          .word   6
    1269 00005f90 00000000!         .long   hkfgt6
    1270 00005fb0     0006          .word   6
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   30

    1271 00005fc0 00000000!         .long   hkfgt5
    1272 00005fe0     0006          .word   6
    1273 00005ff0 00000000!         .long   hkfgt6
    1274 00006010     0006          .word   6
    1275 00006020 00000000!         .long   hkfgt4
    1276 00006040     0006          .word   6
    1277 00006050 00000000!         .long   hkfgt6
    1278 00006070     0006          .word   6
    1279 00006080 00000000!         .long   hkfgt5
    1280 000060a0     0006          .word   6
    1281 000060b0 00000000!         .long   hkfgt7
    1282 000060d0     0006          .word   6
    1283 000060e0 00000000!         .long   hkfgt8
    1284 00006100     0006          .word   6
    1285 00006110                   LONGNULL
    1286 00006130           HK_FIGHTX:
    1287                    
    1288 00006130           HK_DIE:
    1289 00006130 00000000!         .long   hkdie1
    1290 00006150     0007          .word   7
    1291 00006160 00000000!         .long   hkdie2
    1292 00006180     0007          .word   7
    1293 00006190 00000000!         .long   hkdie3
    1294 000061b0     0007          .word   7
    1295 000061c0 00000000!         .long   hkdie4
    1296 000061e0     0007          .word   7
    1297 000061f0 00000000!         .long   hkdie5
    1298 00006210     0007          .word   7
    1299 00006220 00000000!         .long   hkdie6
    1300 00006240     0007          .word   7
    1301 00006250                   LONGNULL
    1302                    
    1303 00006270           HK_LEAN1:
    1304 00006270 00000480"         .long   hook1
    1305 00006290     000c          .word   12
    1306 000062a0 00000500"         .long   hook2
    1307 000062c0     0014          .word   20
    1308 000062d0 00000480"         .long   hook1
    1309 000062f0     0014          .word   20
    1310 00006300 00000500"         .long   hook2
    1311 00006320     0014          .word   20
    1312 00006330 00000580"         .long   hook3
    1313 00006350     001e          .word   30
    1314 00006360 00000500"         .long   hook2
    1315 00006380     0014          .word   20
    1316 00006390 00000580"         .long   hook3
    1317 000063b0     000f          .word   15
    1318 000063c0 00000000!         .long   hook4
    1319 000063e0     002d          .word   45
    1320 000063f0 00000580"         .long   hook3
    1321 00006410     0019          .word   25
    1322 00006420 00000000!         .long   hook4
    1323 00006440     0028          .word   40
    1324 00006450 00000580"         .long   hook3
    1325 00006470     000c          .word   12
TMS340 COFF Macro Assembler Version 6.10     Sat Apr 10 02:20:55 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

 <<< N  A  R  C  -- HOOKER >>>                                       PAGE   31

    1326 00006480 00000500"         .long   hook2
    1327 000064a0     000c          .word   12
    1328 000064b0 00000480"         .long   hook1
    1329 000064d0     000a          .word   10
    1330 000064e0                   LONGNULL
    1331                    
    1332 00006500           JRJLR
    1333 00006500           JRSD
    1334 00006500           JRSL
    1335 00006500           JRNUL
    1336 00006500 00000000          .LONG   0
    1337                    

 No Errors,  No Warnings
